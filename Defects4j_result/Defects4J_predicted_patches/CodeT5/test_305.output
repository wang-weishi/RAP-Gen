[PATCH] tais.reset();
[PATCH] tais.copyTo(in);
[PATCH] tais.fillIn(in);
[PATCH] tais.readFully(in);
[PATCH] tais.seek(signatureLength);
[PATCH] tais.loadMore(signatureLength);
[PATCH] tais.mark(signatureLength);
[PATCH] tais.copyCurrentStructure(in);
[PATCH] tais.setLength(signatureLength);
[PATCH] tais.nextEntry();
[PATCH] tais.markTarSignature(signature);
[PATCH] tais.readFully();
[PATCH] tais.load(signature);
[PATCH] tais.closeArchiveEntry();
[PATCH] tais.fillTarHeader(in);
[PATCH] tais.load(in);
[PATCH] tais.closeArchive();
[PATCH] tais.setSize(signatureLength);
[PATCH] tais.finish();
[PATCH] tais.push(signature);
[PATCH] tais.init(in);
[PATCH] tais.markArchiveSignature(signature);
[PATCH] tais.loadTar(in);
[PATCH] tais.initTarStream(in);
[PATCH] tais.loadTarHeader();
[PATCH] tais.mergeTarHeader(in);
[PATCH] tais.copy(in);
[PATCH] tais.loadMoreGuaranteed();
[PATCH] tais.skip(signatureLength);
[PATCH] tais.sign(signature);
[PATCH] tais.writeTarHeader(signature);
[PATCH] tais.fillTarHeader(signature);
[PATCH] tais.fillInStream(in);
[PATCH] tais.flush();
[PATCH] tais.setNextEntry(in);
[PATCH] tais.closeEntry();
[PATCH] tais.merge(in);
[PATCH] tais.loadNextEntry();
[PATCH] tais.copyToFront(in);
[PATCH] tais.fillBuffer(in);
[PATCH] tais.copyArchiveStructure(in);
[PATCH] tais.initTar(in);
[PATCH] tais.streamToTar(in);
[PATCH] tais.fillHeader(signature);
[PATCH] tais.setTarHeader(in);
[PATCH] tais.setPosition(signatureLength);
[PATCH] tais.fillInHeader(signature);
[PATCH] tais.loadMore();
[PATCH] tais.fillBuffer(signature);
[PATCH] tais.init(archiverName);
[PATCH] tais.loadTar(signature);
[PATCH] tais.tar(in);
[PATCH] tais.markTarHeader(signature);
[PATCH] tais.deserialize(in);
[PATCH] tais.computeTarHeader(signature);
[PATCH] tais.writeTarHeader(in);
[PATCH] tais.streamToArchive(in);
[PATCH] tais.loadTarStream(in);
[PATCH] tais.fillHeader(in);
[PATCH] tais.moveToFront(in);
[PATCH] tais.setTar(in);
[PATCH] tais.fillArchiveHeader(signature);
[PATCH] tais.copyInto(in);
[PATCH] tais.computeSignature(signatureLength);
[PATCH] tais.loadFully(in);
[PATCH] tais.loadInto(in);
[PATCH] tais.copyStructure(in);
[PATCH] tais.readArchive(in);
[PATCH] tais.copyFrom(in);
[PATCH] tais.computeSignature(signature);
[PATCH] tais.setInputStream(in);
[PATCH] tais.initialize();
[PATCH] tais.stream(in);
[PATCH] tais.setLocation(in);
[PATCH] tais.loadTar(archiveName);
[PATCH] tais.fillArchiveHeader(in);
[PATCH] tais.update(signature);
[PATCH] tais.fillin(in);
[PATCH] tais.run(signature);
[PATCH] tais.setNextEntry(-1);
[PATCH] tais.parseTarHeader();
[PATCH] tais.setTarHeader(signature);
[PATCH] tais.parseTarHeader(in);
[PATCH] tais.moveToFrontEntry();
[PATCH] tais.loadFully();
[PATCH] tais.loadMoreBytes();
[PATCH] tais.fill(in);
[PATCH] tais.setNextEntry(signature);
[PATCH] tais.connect(in);
[PATCH] tais.mergeTarHeader(signature);
[PATCH] tais.closeArchiveStream();
[PATCH] tais.digest();
[PATCH] tais.rewind();
[PATCH] tais.finalize();
[PATCH] tais.consumeTarHeader();
[PATCH] tais.close();
[PATCH] tais.setNextEntry(true);
[PATCH] tais.fillCRC(signature);
[PATCH] tais.fillCRC(signatureLength);
[PATCH] tais.setNextEntry(null);
