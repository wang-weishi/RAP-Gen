[PATCH] id = generator.generateId(forPojo);
[PATCH] id = generator.generateId(forPojo, idWritten);
[PATCH] id = generator.generateId(forPojo, parent);
[PATCH] id = generator.generateId(forPojo, _scope);
[PATCH] id = generator.generateId(forPojo, type);
[PATCH] id = generator.generateId(forPojo, index);
[PATCH] id = generator.generateObjectId(forPojo);
[PATCH] id = generator.generateId(forPojo, this);
[PATCH] id = generator.generateId(forPojo, locale);
[PATCH] id = generator.generateId(forPojo, idWriter);
[PATCH] id = generator.generate(forPojo, idWritten);
[PATCH] id = generator.generateId(forPojo, propertyFilter);
[PATCH] id = generator.generateId(forPojo, id);
[PATCH] id = generator.generateId(forPojo, collection);
[PATCH] id = generator.generate(forPojo);
[PATCH] id = generator.generateId(forPojo, targetClass);
[PATCH] id = generator.generateId(this, forPojo);
[PATCH] id = generator.generateId(forPojo, super);
[PATCH] id = generator.generateId(forPojo, hashIndex);
[PATCH] id = generator.generateId(forPojo, hash);
[PATCH] id = generator.generateId(forPojo, base);
[PATCH] id = generator.generateId(forPojo, name);
[PATCH] id = generator.generateId(forPojo, factory);
[PATCH] id = generator.generateId(forPojo, writer);
[PATCH] id = generator.generateId(forPojo, null);
[PATCH] id = generator.generateId(forPojo, field);
[PATCH] id = generator.generateId(forPojo, extendedClass);
[PATCH] id = generator.generateId(forPojo, context);
[PATCH] id = generator.generateId(forPojo, _generator);
[PATCH] id = generator.generateId(forPojo, owner);
[PATCH] id = generator.generateId(forPojo, key);
[PATCH] id = generator.generateId(forPojo, provider);
[PATCH] id = generator.generateId(forPojo, registry);
[PATCH] id = generator.generateId(forPojo, scope);
[PATCH] id = generator.generateId(forPojo, root);
[PATCH] id = generator.generateId(forPojo, mapper);
[PATCH] id = generator.generateId(forPojo, properties);
[PATCH] id = generator.generateId(forPojo, graph);
[PATCH] id = generator.generateId(forPojo, master);
[PATCH] id = generator.generateId(forPojo, cache);
[PATCH] id = generator.generateId(forPojo, options);
[PATCH] id = generator.generateId(forPojo, alias);
[PATCH] id = generator.generateId(forPojo, proxy);
[PATCH] id = generator.generateId(forPojo, table);
[PATCH] id = generator.generateId(forPojo, globalScope);
[PATCH] id = generator.generateId(forPojo, queue);
[PATCH] id = generator.generateId(forPojo, valueWriter);
[PATCH] id = generator.generateId(forPojo, hashCode);
[PATCH] id = generator.generateId(forPojo, targetClass);
[PATCH] id = generator.generateId(forPojo, bucket);
[PATCH] id = generator.generateId(forPojo, targetType);
[PATCH] id = generator.generateId(forPojo, relatedObject);
[PATCH] id = generator.generateNextId(forPojo);
[PATCH] id = generator.generateId(forPojo, populatedProperties);
[PATCH] id = generator.generateId(forPojo, proto);
[PATCH] id = generator.generateId(forPojo, db);
[PATCH] id = generator.generateId(forPojo, node);
[PATCH] id = generator.generateId(forPojo, hashCode);
[PATCH] id = generator.generateId(forPojo, hashType);
[PATCH] id = generator.generateId(forPojo, value);
[PATCH] id = generator.generateId(forPojo, _config);
[PATCH] id = generator.generateId(forPojo, state);
[PATCH] id = generator.generateId(forPojo, platform);
[PATCH] id = generator.generateId(forPojo, target);
[PATCH] id = generator.generateId(forPojo, idWritable);
[PATCH] id = generator.generateId(forPojo, partition);
[PATCH] id = generator.generateId(forPojo, path);
[PATCH] id = generator.generateId(forPojo, predicate);
[PATCH] id = generator.generateId(forPojo, map);
[PATCH] id = generator.generateId(forPojo, fields);
[PATCH] id = generator.generateId(forPojo, version);
[PATCH] id = generator.generateId(forPojo, obj);
[PATCH] id = generator.generateId(forPojo, decorated());
[PATCH] id = generator.generateId(forPojo, immutable);
[PATCH] id = generator.generateId(forPojo, schema);
[PATCH] id = generator.generateId(forPojo, idWrites);
[PATCH] id = generator.generateId(forPojo, strategy);
[PATCH] id = generator.generateId(forPojo, objType);
[PATCH] id = generator.generateId(forPojo, entityType);
[PATCH] id = generator.generateId(forPojo, topLevel);
[PATCH] id = generator.generateId(forPojo, nativeObject);
[PATCH] id = generator.generateId(forPojo, hashWriter);
[PATCH] id = generator.generateId(forPojo, slug);
[PATCH] id = generator.generateId(forPojo, iWritten);
[PATCH] id = generator.generateId(forPojo, metaData);
[PATCH] id = generator.generateId(forPojo, propertySets);
[PATCH] id = generator.generateId(forPojo, transformer);
[PATCH] id = generator.generateId(forPojo, attributes);
[PATCH] id = generator.generateId(forPojo, false);
[PATCH] id = generator.generateId(forPojo, identifier);
[PATCH] id = generator.generateId(forPojo, transient);
[PATCH] id = generator.generateId(forPojo, objectId);
[PATCH] id = generator.generateId(forPojo, token);
[PATCH] id = generator.generateId(forPojo, instance);
[PATCH] id = generator.generateID(forPojo);
[PATCH] id = generator.generateId(forPojo, idWrite);
[PATCH] id = generator.generateId(forPojo, ObjectUtils);
[PATCH] id = generator.create(forPojo);
[PATCH] id = generator.generateId(forObject);
[PATCH] id = generator.build(forPojo);
