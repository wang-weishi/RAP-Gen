[PATCH] if(!_hasSegments)return _resultArray;
[PATCH] if(!_hasSegments)return NO_CHARS;
[PATCH] if(!_hasSegments)return EMPTY_BUFFER;
[PATCH] if(!_hasSegments)return null;
[PATCH] if(!_hasSegments)return EMPTY_TEXT;
[PATCH] if(!_hasSegments)return NULL;
[PATCH] if(!_hasSegments)return EMPTY_STRING;
[PATCH] if(!_hasSegments)return _currentSegment;
[PATCH] if(!_hasSegments)return EMPTY_CHAR;
[PATCH] if(!_hasSegments)return EMPTY_SEGMENT;
[PATCH] if(!_hasSegments)return INVALID_TEXT;
[PATCH] if(!_hasSegments)return CHAR_NULL;
[PATCH] if(_hasSegments)return _resultArray;
[PATCH] if(!_hasSegments)return EMPTY_CHARS;
[PATCH] if(!_hasSegments)return 0;
[PATCH] if(!_hasSegments)return END_BUFFER;
[PATCH] if(!_hasSegments)return EMPTY_VALUE;
[PATCH] if(!_hasSegments)return EMPTY_CHUNK;
[PATCH] if(!_hasSegments)return emptyBuffer();
[PATCH] if(!_hasSegments)return NOT_AVAILABLE;
[PATCH] if(!_hasSegments)return resultArray;
[PATCH] if(!_hasSegments)return EMPTY_CONTENT;
[PATCH] if(!_hasSegments)return BASE_BUFFER;
[PATCH] if(!_hasSegments)return EMPTY_BODY;
[PATCH] if(!_hasSegments)return [0];
[PATCH] if(!_hasSegments)return EMPTY;
[PATCH] if(!_hasSegments)return EMPTY_TARGET;
[PATCH] if(!_hasSegments)return EMPTY_CHARACTER;
[PATCH] if(!_hasSegments)return emptyText();
[PATCH] if(!_hasSegments)return FIRST_SEGMENT;
[PATCH] if(!_hasSegments)return UNKNOWN_TEXT;
[PATCH] if(!_hasSegments)return return null;
[PATCH] if(!_hasSegments)return END_TEXT;
[PATCH] if(!_hasSegments)return EOF_BUFFER;
[PATCH] if(!_hasSegments)return buf;
[PATCH] if(!_hasSegments)return NOT_FOUND;
[PATCH] if(!_hasSegments)return BLANK_BUFFER;
[PATCH] if(!_hasSegments)return STRING_BUFFER;
[PATCH] if(!_hasSegments)return ALL_CHARS;
[PATCH] if(!_hasSegments)return ROOT_BUFFER;
[PATCH] if(!_hasSegments)return EMPTY_CharArray;
[PATCH] if(!_hasSegments)return contentsAsArray();
[PATCH] if(!_hasSegments)return EMPTY_RESULT;
[PATCH] if(!_hasSegments)return ERROR_BUFFER;
[PATCH] if(!_hasSegments)return _segments;
[PATCH] if(!_hasSegments)return NONE;
[PATCH] if(!_hasSegments)return END_SEGMENT;
[PATCH] if(!_hasSegments)return _ResultArray;
[PATCH] if(!_hasSegments)return EMPTY_ERROR;
[PATCH] if(!_hasSegments)return _emptyBuffer;
[PATCH] if(!_hasSegments)return LAST_SEGMENT;
[PATCH] if(!_hasSegments)return EMPTY_FIELD;
[PATCH] if(!_hasSegments)return CHUNK;
[PATCH] if(!_hasSegments)return EMPTY_ARRAY;
[PATCH] if(_hasSegments)return _currentSegment = null;
[PATCH] if(!_hasSegments)return noSegmentArray;
[PATCH] if(!_hasSegments)return VOID_BUFFER;
[PATCH] if(!_hasSegments)return CHAR_EMPTY;
[PATCH] if(!_hasSegments)return EMPTY_DATA;
[PATCH] if(!_hasSegments)return void[] {
[PATCH] if(!_hasSegments)return DEFAULT_BUFFER;
[PATCH] if(!_hasSegments)return _inputBuffer;
[PATCH] if(!_hasSegments)return EMPTY_text;
[PATCH] if(!_hasSegments)return _resultBuffer;
[PATCH] if(!_hasSegments)return EMPTY_DOCUMENT;
[PATCH] if(!_hasSegments)return EMPTY_buffer;
[PATCH] if(!_hasSegments)return TEXT_BUFFER;
[PATCH] if(!_hasSegments)return _outputBuffer;
[PATCH] if(!_hasSegments)return EMPTY_SOURCE;
[PATCH] if(!_hasSegments)return textBuffer;
[PATCH] if(!_hasSegments)return BLANK_CHAR;
[PATCH] if(!_hasSegments)return _results;
[PATCH] if(!_hasSegments)return retval;
[PATCH] if(!_hasSegments)return DELIMITER;
[PATCH] if(!_hasSegments)return buffer;
[PATCH] if(!_hasSegments)return PARAMS;
[PATCH] if(!_hasSegments)return NoSegments;
[PATCH] if(!_hasSegments)return noBuffer();
[PATCH] if(!_hasSegments)return result;
[PATCH] if(!_hasSegments)return noBuffer;
[PATCH] if(!_hasSegments)return ZERO;
[PATCH] if(_hasSegments)return NO_CHARS;
[PATCH] if(!_hasSegments)return FALSE;
[PATCH] if(!_hasSegments)return root;
[PATCH] if(!_hasSegments)return;
[PATCH] if() return _resultArray;
[PATCH] if() return NO_CHARS;
[PATCH] if() return EMPTY_BUFFER;
[PATCH] if() return EMPTY_TEXT;
[PATCH] if() return _currentSegment;
[PATCH] if() return null;
[PATCH] if() return EMPTY_STRING;
[PATCH] if(_hasSegments)return;
[PATCH] if() return NULL_BUFFER;
[PATCH] if() return NULL;
[PATCH] if() return EMPTY;
[PATCH] if() return 0;
[PATCH] if() return;
[PATCH] if("");
[PATCH] if('@');
