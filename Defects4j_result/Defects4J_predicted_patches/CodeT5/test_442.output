[PATCH] Node greatGreatGramps = greatGreatGramps.getParent();
[PATCH] Node greatGreatGramps2 = greatGreatGramps.getParent();
[PATCH] ref.node.removeChild(rvalue);
[PATCH] Node greatGreatGrampsParent = greatGreatGramps.getParent();
[PATCH] Node greatGreatGramps.removeChild(gramps);
[PATCH] gramps.replaceChild(parent, greatGreatGramps);
[PATCH] Node greatGreatGramps_ = greatGreatGramps.getParent();
[PATCH] Node greatGreatGramps.addChildToFront(gramps);
[PATCH] Node greatGreatGramps1 = greatGreatGramps.getParent();
[PATCH] RefineryUtil.removeChild(gramps, greatGreatGramps);
[PATCH] final Node greatGreatGramps = greatGreatGramps.getParent();
[PATCH] Node greatGreatGramps = greatGreatGramps.getNext();
[PATCH] greatGreatGramps.removeChild(gramps);
[PATCH] boolean isQName = ref.node.getType() == Token.NAME;
[PATCH] greatGreatGramps.addChildToFront(parent);
[PATCH] gramps = greatGreatGramps.getParent();
[PATCH] Node greatGreatGrampsValue = greatGreatGramps.getNext();
[PATCH] Preconditions.checkState(gramps.getType() == Token.VAR);
[PATCH] Node greatGreatGrampss = greatGreatGramps.getParent();
[PATCH] nodeUtil.removeChild(gramps, greatGreatGramps);
[PATCH] String name = ref.node.getLastChild().getString();
[PATCH] ref.node = greatGreatGramps.getFirstChild();
[PATCH] Node greatGreatGramps.addChildToFront(ref.node);
[PATCH] ref.node.removeChild(gramps);
[PATCH] ref.getParent().replaceChild(gramps, greatGreatGramps);
[PATCH] Node greatGreatGramps0 = greatGreatGramps.getParent();
[PATCH] boolean isQName = parent.getType() == Token.EXPR_RESULT;
[PATCH] Node greatGreatGramps3 = greatGreatGramps.getParent();
[PATCH] RefineryUtilities.removeChild(gramps, greatGreatGramps);
[PATCH] gramps.replaceChild(ref.node, new Node(Token.EMPTY));
[PATCH] ref.node.getParent().removeChild(gramps);
[PATCH] Node greatGreatGramps2 = greatGreatGramps.getNext();
[PATCH] Node greatGreatGrampsType = greatGreatGramps.getType();
[PATCH] greatGreatGramps.addChildToFront(gramps);
[PATCH] Node greatFinalGramps = greatGreatGramps.getParent();
[PATCH] replaceWithEmpty(gramps, greatGreatGramps);
[PATCH] Node greatGreatGramps$ = greatGreatGramps.getParent();
[PATCH] Preconditions.checkNotNull(greatGreatGramps);
[PATCH] Node greatGreatGramps.setType(Token.EXPR_RESULT);
[PATCH] Node greatGreatGramps1 = greatGreatGramps.getType();
[PATCH] NodeUtil.removeChild(gramps, greatGreatGramps);
[PATCH] checkState(gramps.getType() == Token.EXPR_RESULT);
[PATCH] ref.node.removeProp(Node.SOURCENAME_PROP);
[PATCH] parent.removeChild(gramps); gramps = greatGreatGramps;
[PATCH] int len = greatGreatGramps.getChildCount() - 1;
[PATCH] updateGreatGrampsAnnotations(gramps, greatGreatGramps);
[PATCH] Node greatGreatGramps.addChildToFront(parent);
[PATCH] Parent greatGreatGramps = greatGreatGramps.getParent();
[PATCH] greatGreatGramps.replaceChild(ref.node, rvalue);
[PATCH] nameMap.put(ref.node.getLastChild(), refName);
[PATCH] Branch greatGreatGramps = greatGreatGramps.getParent();
[PATCH] ref.node.replaceChild(gramps, greatGreatGramps);
[PATCH] Node greatGreatGrampsValues = greatGreatGramps.getChildren();
[PATCH] Node greatGoreatGramps = greatGreatGramps.getParent();
[PATCH] Node greatGureatGramps = greatGreatGramps.getParent();
[PATCH] Node greatGreatGrampsName = greatGreatGramps.getParent();
[PATCH] gramps.replaceChild(parent, new Node(Token.EMPTY));
[PATCH] gramps.replaceChild(ref.node, greatGreatGramps);
[PATCH] Node greatGreatGramps = greatGreatGramps.getLastChild();
[PATCH] nameMap.put(ref.node.getString(), refName);
[PATCH] int len = greatGreatGramps.getChildCount();
[PATCH] ref.node.removeProp(Node.IS_CONSTANT_NAME);
[PATCH] ref.node = greatGreatGramps.getFirstChild().getNext();
[PATCH] ref.node = greatGreatGramps.getLastChild();
[PATCH] ref.getGrandparent().removeChild(gramps);
[PATCH] gramps.removeChild(greatGreatGramps);
[PATCH] boolean isQName = gramps.getType() == Token.NAME;
[PATCH] Node greatGreatGrampsName = greatGreatGramps.getType();
[PATCH] new Node(Token.EXPR_RESULT, greatGreatGramps);
[PATCH] updateNameAnnotations(gramps, greatGreatGramps);
[PATCH] replaceWithRvalue(gramps, greatGreatGramps);
[PATCH] Node greatGreatGramps = greatGreatGramps.getparent();
[PATCH] Preconditions.checkState(greatGreatGramps == null);
[PATCH] Node greatGreatGramps = greatGreatGramps.getType();
[PATCH] Node greatGreatGramps = greatGreatGramps.getFirstChild();
[PATCH] varNode = greatGreatGramps.getFirstChild();
[PATCH] ref.node = greatGreatGramps.getNext();
[PATCH] Node greatGreatGramps = greatGreatGramps.getImplicitParent();
[PATCH] Node greatGreatGramps2 = greatGreatGramps.getType();
[PATCH] ref.node.removeProp(Node.IS_REPAINT_PROP);
[PATCH] new Node(Token.VAR, greatGreatGramps);
[PATCH] new Node(Token.VAR, greatGreatGramps, parent);
[PATCH] gramps.removeChild(gramps.getFirstChild());
[PATCH] parent.getParent().removeChild(gramps);
[PATCH] greatGreatGramps.removeChild(parent);
[PATCH] ref.node.detachFromParent();
[PATCH] parent.removeChild(gramps);
[PATCH] parent.removeChild(rvalue);
[PATCH] boolean isQName = ref.node.getType();
[PATCH] refName.removeRef(rvalue);
[PATCH] gramps.removeChild(rvalue);
[PATCH] gramps.removeChild(parent);
[PATCH] Preconditions.checkNotNull(gramps);
[PATCH] ref.node.removeChild(parent);
[PATCH] gramps.detachFromParent();
[PATCH] String name = refName.fullName();
[PATCH] ref.node.detachChildren();
[PATCH] ref.node.removeChildren();

);
