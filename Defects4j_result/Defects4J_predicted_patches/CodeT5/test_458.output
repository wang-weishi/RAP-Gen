[PATCH] Validate.notNull(doc);
[PATCH] doc.normalizeNode(true);
[PATCH] doc.removeChild(0);
[PATCH] doc.validate();
[PATCH] Preconditions.checkNotNull(doc);
[PATCH] Validate.notEmpty(doc);
[PATCH] doc.appendChild(comment);
[PATCH] doc.validateNode(true);
[PATCH] doc.normalizeNamespaces();
[PATCH] doc.validateNode(insert);
[PATCH] doc.removeChild(insert);
[PATCH] doc.removeChild(insertNode);
[PATCH] doc.clearNodeAnnotations();
[PATCH] doc.clearContent();
[PATCH] doc.validateNodeName(data);
[PATCH] doc.preserveComments();
[PATCH] doc.normalizeNodeTypes();
[PATCH] doc.normalizeElement(true);
[PATCH] doc.validateState();
[PATCH] Validate.isNotNull(doc);
[PATCH] doc.normalizeNodeAnnotations();
[PATCH] doc.setValidateNode(true);
[PATCH] doc = doc.body();
[PATCH] doc.removeChild(insertNode());
[PATCH] doc.clearContentEditable();
[PATCH] doc.normalizeComments();
[PATCH] doc = doc.normaliseChildren();
[PATCH] doc.removeChild(insertnode);
[PATCH] doc.insertChildCount(1);
[PATCH] doc.setNamespaceAware(true);
[PATCH] doc.validateNode(data);
[PATCH] insertNode(doc);
[PATCH] doc.normalizeEntityReferences();
[PATCH] doc.removeNode(insert);
[PATCH] doc.normalizeElement(false);
[PATCH] doc.normalizeNode(false);
[PATCH] doc.normalizeTextNode(data);
[PATCH] copyCurrentStructure(doc);
[PATCH] doc.normalizeRootElement();
[PATCH] doc.normalizeNodes();
[PATCH] doc.clearChildCount();
[PATCH] doc.validateElement(data);
[PATCH] validate(doc);
[PATCH] doc.clearPrefix();
[PATCH] doc.normalizeNode(insert);
[PATCH] doc.validateNodeName("insertion");
[PATCH] doc.removeChild(insertNodes);
[PATCH] doc.removeChild(insert node);
[PATCH] doc.appendElement(tagName);
[PATCH] doc.normalizeNodeNames();
[PATCH] doc.normalizeDocumentType();
[PATCH] doc.validateNode(false);
[PATCH] doc.clearContentByClass();
[PATCH] doc.preserveWhitespace();
[PATCH] doc.normalizeElementTree();
[PATCH] doc.ValidateState();
[PATCH] doc.skipEndElement();
[PATCH] doc.normalizeElement(data);
[PATCH] doc.normalizeChildCount();
[PATCH] doc.validateNodeName();
[PATCH] doc.normalizeElementTree(data);
[PATCH] doc.parseChildCount();
[PATCH] doc.validateNode(insertion);
[PATCH] doc.parseAllChildren();
[PATCH] doc.clearContentSibling();
[PATCH] doc.clearElementAnnotations();
[PATCH] doc.clearContent >= 1;
[PATCH] doc.clearEntityReferences();
[PATCH] doc.normalizeDocumentals();
[PATCH] doc.clearComments();
[PATCH] doc.clearContentAnnotations();
[PATCH] doc.normalizeNodeList();
[PATCH] doc.appendChild(new CDATA());
[PATCH] doc.normalizeElementNodes();
[PATCH] doc.clearContentChildNodes();
[PATCH] doc.removeChild(insertId);
[PATCH] doc.clearData();
[PATCH] doc.clearDocumentAnnotations();
[PATCH] doc.removeElement("body");
[PATCH] doc.skipChildren();
[PATCH] doc.validateNodeName("inserted");
[PATCH] doc.normalizeContent();
[PATCH] doc = doc.normaliseTextNode();
[PATCH] doc.removeElement("#root");
[PATCH] doc.parseChildren();
[PATCH] doc.validateChild(insert);
[PATCH] doc.validateNode(comment);
[PATCH] doc.validateTree();
[PATCH] doc.validateNamespaces();
[PATCH] doc.removeChild(node);
[PATCH] doc.normalizeNode();
[PATCH] doc.removeComments();
[PATCH] validateNode(doc);
[PATCH] doc.ValidateElement(true);
[PATCH] doc.ValidateTree(data);
[PATCH] doc.normalizeBlocks();
[PATCH] addChildNodes(doc);
[PATCH] doc.empty();
[PATCH] doc.emptyElement();
[PATCH] doc.ValidateNode(insert);
