[PATCH] str = str.trim();
[PATCH] StrBuilder.this.append(separator);
[PATCH] str = pruneBuffer(size);
[PATCH] str = replace(str, padChar);
[PATCH] str = strip(str, size);
[PATCH] str = ensureCapacity(size + width);
[PATCH] str = padding + str.length();
[PATCH] str = pruneBuffer(size + width);
[PATCH] str = str.toCharArray();
[PATCH] str = strip(str);
[PATCH] str = wrap(str);
[PATCH] str = normalise(str);
[PATCH] str = trim(str);
[PATCH] str = validateWidth(width);
[PATCH] str = width - str.length();
[PATCH] buffer[size] = padChar;
[PATCH] trimToSize(size + width);
[PATCH] str = strip(str, width);
[PATCH] str = expand(str, width);
[PATCH] str = removeTrailingSpaces(str);
[PATCH] str = convert(str);
[PATCH] str = StringUtils.deleteWhitespace(str);
[PATCH] buffer[size++] = padChar;
[PATCH] chars[size++] = padChar;
[PATCH] str = prefix + str.length();
[PATCH] str = encapsulate(str);
[PATCH] str = prune(str.length());
[PATCH] StrBuilder.this.append(str);
[PATCH] str = Character.toString(str);
[PATCH] str = padding + str.toCharArray();
[PATCH] str = preserveWhitespace(str);
[PATCH] str = escape(str);
[PATCH] str = padChar + str.length();
[PATCH] size += str.length();
[PATCH] str = str.toLowerCase();
[PATCH] int len = length - str.length();
[PATCH] str = width + str.length();
[PATCH] str = str.trim(0);
[PATCH] ensureCapacity(size + width);
[PATCH] str = clearBuffer(size);
[PATCH] str = new Str(str.length());
[PATCH] str = wrapper.append(str);
[PATCH] str = strip(str, null);
[PATCH] str = obj.toString();
[PATCH] str = cleanBuffer(size);
[PATCH] str = stripTrailingSpaces(str);
[PATCH] str = normalizePadChar(str);
[PATCH] str = removeTrailingSeparator(str);
[PATCH] str = convertWidth(str);
[PATCH] str = replace(obj, padChar);
[PATCH] int len = str.length();
[PATCH] str = normalise(str, width);
[PATCH] str = filter(str, width);
[PATCH] str = filterToString(str, true);
[PATCH] trimToSize(size);
[PATCH] str = width > str.length();
[PATCH] str = strip(str, true);
[PATCH] str = Joiner.on(" +");
[PATCH] str = _trim(str);
[PATCH] str = toStr(str);
[PATCH] str = reverse(str);
[PATCH] StrBuilder.this.append(size);
[PATCH] str = validateRange(str, width);
[PATCH] str =strain(str, width);
[PATCH] str = strip(str, false);
[PATCH] str = fillBuffer(width);
[PATCH] str = removeBuffer(size);
[PATCH] str = StrBuilder.append(str);
[PATCH] str = normalize(str);
[PATCH] str = appendBuffer(size);
[PATCH] str = validateBounds(str, size);
[PATCH] str = convert(str, false);
[PATCH] str = normalizeWidth(str);
[PATCH] str = replace(str, width);
[PATCH] str = prepare(str);
[PATCH] str = maskToString(str.length());
[PATCH] validateWidth(width);
[PATCH] str = string.trim();
[PATCH] str = validateBounds(str);
[PATCH] str = clean(str);
[PATCH] str = prune(str);
[PATCH] str = replace(str, size);
[PATCH] length += str.length();
[PATCH] str = filterToString(str);
[PATCH] str = str.length();
[PATCH] str = stripBuffer(str);
[PATCH] str = chars(str);
[PATCH] str = lowerCase(str);
[PATCH] str = init(str);
[PATCH] trim(str);
[PATCH] int len = length();
[PATCH] append(padChar);
[PATCH] validateIndex(size);
[PATCH] validateState();
[PATCH] str =
[PATCH] ;

);
*/
;
