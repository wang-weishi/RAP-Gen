[PATCH] return multiply(x, 1);
[PATCH] return multiply(x, ONE);
[PATCH] return multiply(x, sign);
[PATCH] return multiply(x, 0);
[PATCH] return multiply(x, -x);
[PATCH] return multiply(x, product);
[PATCH] return multiply(x, this);
[PATCH] return multiplySlow(x, 1);
[PATCH] return multiply(x, factor);
[PATCH] return multiply(x);
[PATCH] return multiply(x, denominator);
[PATCH] return multiply(x, products);
[PATCH] return multiplySlow(x);
[PATCH] return multiplySlow(x, product);
[PATCH] return multiply(x, 127);
[PATCH] return multiply(x, step);
[PATCH] return multiply(x, fraction);
[PATCH] return multiply(x, numerator);
[PATCH] return multiply(x, permutation);
[PATCH] return multiply(x, field);
[PATCH] return multiplyImpl(x);
[PATCH] return multiply(x, scale);
[PATCH] return multiply(x, mask);
[PATCH] return multiply(x, mulPos);
[PATCH] return multiply(x, eps);
[PATCH] return multiply(x, multiplier);
[PATCH] return multiply(x, mu);
[PATCH] return multiply(x, false);
[PATCH] return multiply(x, sqrt(x));
[PATCH] return multiply(x, transpose());
[PATCH] return multiply(x, this.sign);
[PATCH] return multiply(x, 2);
[PATCH] return multiplySlow(x, sign);
[PATCH] return multiply(x, getMantissa());
[PATCH] return multiply(x, cardinality);
[PATCH] return multiply(x, negatives);
[PATCH] return multiply(x, negated);
[PATCH] return multiplySlow(x, factor);
[PATCH] return multiplySlow(x, products);
[PATCH] return multiply(x, true);
[PATCH] return multiply(x, correction);
[PATCH] return multiply(x, imaginary);
[PATCH] return multiply(x, axis);
[PATCH] return multiply(x, field.value);
[PATCH] return multiply(x, scalar);
[PATCH] return multiply(x, 100);
[PATCH] return multiply(x, mul(-x);
[PATCH] return multiply(x, inverted);
[PATCH] return multiply(x, Mantissa);
[PATCH] return multiply(x, mant);
[PATCH] return multiply(x, sign);
[PATCH] return multiply(x);
[PATCH] return multiply(mant, x);
[PATCH] return multiply(( double)x);
[PATCH] return multiply(x, mantissa);
[PATCH] return multiply(x, one);
[PATCH] return multiply(x, 1);
[PATCH] return multiply(x, exp);
[PATCH] return multiply(x, null);
[PATCH] return multiply(x,1);
[PATCH] return multiply(x, quotient);
[PATCH] return multiply(x, mantissa);
[PATCH] return multiply(x, signum);
[PATCH] return multiply(x, precision);
[PATCH] return multiply(x, dfp);
[PATCH] return multiply(x, DECIMAL_WIDTH);
[PATCH] return multiply(x, x);
[PATCH] return multiply(x, e);
[PATCH] return multiply(x, blockSize);
[PATCH] return multiply(x, 100000);
[PATCH] return multiply(x, midpoint);
[PATCH] return multiply(x, operand);
[PATCH] return multiplyLong(x);
[PATCH] return multiply(x, 7);
[PATCH] return multiply(x, pattern);
[PATCH] return multiply(x, column);
[PATCH] return multiply(x, alpha);
[PATCH] return multiply(x, other);
[PATCH] return multiply(x, DECIMAL_INTEGER);
[PATCH] return multiply(x, exponent);
[PATCH] return multiply(x, polynomial);
[PATCH] return multiply(x, 99);
[PATCH] return multiply(x,multiplier);
[PATCH] return multiply(x, value);
[PATCH] return multiplySlow(x, multiplication);
[PATCH] return multiply(x, amount);
[PATCH] return multiply(x, hashCode);
[PATCH] return multiply(x, series);
[PATCH] return multiply(x, this.field);
[PATCH] return Multiply(x);
[PATCH] return multiply(x, DECIMAL_SCALE);
[PATCH] return multiply(x, mul(-x));
[PATCH] return multiplyInt(x);
[PATCH] return multiply(x, msp);
[PATCH] return multiplySlow(x, mulPos);
[PATCH] return multiply(x, SQRT);
[PATCH] return multiply(x, getMantutation());
[PATCH] return multiply(x, mant);
[PATCH] return multiply(x, MULATION);
[PATCH] return multiplyLike(x);
