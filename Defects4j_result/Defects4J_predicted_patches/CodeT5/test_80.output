[PATCH] pos.setIndex(start);
[PATCH] pos.setIndex(start + 1);
[PATCH] pos.setIndex(start+1);
[PATCH] pos.setIndex(start); pos.setErrorIndex(start);
[PATCH] appendTo.append(c, start, pos.getIndex() - start);
[PATCH] pos.setIndex(start + 1); pos.setErrorIndex(start);
[PATCH] addToString(c, start + 1, c.length);
[PATCH] pos.setIndex(start); pos.setCharAt(start + 1);
[PATCH] pos.setIndex(start); pos.setString(c[start+1]);
[PATCH] pos.setIndex(start); toPattern = pattern.substring(start + 1);
[PATCH] pos.setIndex(start+1); pos.setErrorIndex(start);
[PATCH] addToString(c, start + 1, c.length - start);
[PATCH] pos.setIndex(start); pos.setCharAt(start+1);
[PATCH] pos.setIndex(getIndex() - 1);
[PATCH] pos.setIndex(start); pos.setString(c[start + 1]);
[PATCH] pos.setIndex(start); pos.setValue(c[start+1]);
[PATCH] pos.setIndex(start); pos.setValue(c[start + 1]);
[PATCH] addToString(c, start, pos.getIndex() - start);
[PATCH] pos.setIndex(start); appendCharacterEscape(c, 0, 1);
[PATCH] pos.setIndex(start); appendCharacterEscape(c, true);
[PATCH] addToString(c, start + 1, pos.getIndex() - start);
[PATCH] addToString(c, start + 1); pos.setIndex(start + 1);
[PATCH] pos.setIndex(start); pos.setCallbackIndex(start + 1);
[PATCH] pos.setIndex(start); pos.setType(c[start+1]);
[PATCH] pos.setIndex(start); appendCharacterEscape(c[start++]);
[PATCH] pos.setIndex(start); pos.setText(c[start+1]);
[PATCH] pos.setIndex(start); pos.setCharacterEscape(c[start++]);
[PATCH] pos.setIndex(start + 1); pos.setString(c[start]);
[PATCH] pos.setIndex(start); neg.setErrorIndex(start);
[PATCH] pos.setIndex(start); pos.setDescription(c[start + 1]);
[PATCH] pos.setIndex(start); append(( char)c[start++]);
[PATCH] pos.setIndex(start); pos.setMatchIndex(start + 1);
[PATCH] pos.setIndex(start); pos.append(c[start+1]);
[PATCH] pos.setIndex(start + 1); appendCharacterEscape(c, true);
[PATCH] pos.setIndex(start); pos.setString(c, 0, 1);
[PATCH] pos.setIndex(start + 1); appendCharacterEscape(c[start++]);
[PATCH] pos.setIndex(start); appendEscapeCharacter(c, 0, 1);
[PATCH] pos.setIndex(start); pos.setString(c[start++]);
[PATCH] pos.setIndex(getIndex() - start);
[PATCH] cb.append(c, start, pos.getIndex() - start);
[PATCH] pos.setIndex(start); appendCharacterEscape(c[start+1]);
[PATCH] pos.setIndex(start + 1); pos.setCallbackIndex(start);
[PATCH] pos.setIndex(start + 1); c[start] = QUOTE;
[PATCH] pos.setIndex(start+1); pos.setCharAt(start++);
[PATCH] pos.setIndex(start + 1); pos.setCharAt(start++);
[PATCH] pos.setIndex(start); appendQuoteChar(c, start + 1);
[PATCH] pos.setIndex(start + 1); toPattern = c;
[PATCH] pos.setIndex(start + 1); toPattern ="\"" + pattern;
[PATCH] pos.setIndex(start); appendNonEscapedChar(c, start + 1);
[PATCH] addEscapes(c, start + 1, c.length);
[PATCH] pos.setIndex(start++);
[PATCH] parseAndEscape(c, start + 1, c.length);
[PATCH] addToString(c, start + 1, len);
[PATCH] pos.setIndex(start + 1); isQuoted = true;
[PATCH] pos.setIndex(start); toPattern = c;
[PATCH] expandString(c, start + 1, c.length);
[PATCH] pos.setIndex(getIndex() + 1);
[PATCH] parseAndIgnoreWhitespace(c, pos);
[PATCH] pos.setIndex(endIndex);
[PATCH] pos.setIndex(position.getIndex() - 1);
[PATCH] addToString(c, start + 1, size - start);
[PATCH] pos.setIndex(start + 1); appendSep();
[PATCH] pos.setIndex(start); toPattern ="";
[PATCH] parseAndIgnoreWhitespace(c, start + 1);
[PATCH] pos.setIndex(start); toPattern = null;
[PATCH] pos.setIndex(start); isQuoted = true;
[PATCH] pos.setIndex( start + 1);
[PATCH] pos.setIndex(start); appendSep();
[PATCH] pos.setIndex(index + 1);
[PATCH] pos.setIndex(start); len = 0;
[PATCH] parseAndEscape(c, pos);
[PATCH] start = pos.getIndex();
[PATCH] pos.setIndex(start); ++start;
[PATCH] pos.setIndex(++start);
[PATCH] parseAndEscapeCharacter(c, pos);
[PATCH] Pos pos.setIndex(start + 1);
[PATCH] pos.setIndex(start += 1);
[PATCH] pos.setIndex(start); + 1;
[PATCH] pos.setIndex(start)+ 1;
[PATCH] pos.setIndex(start - 1);
[PATCH] pos.setIndex(endPos);
[PATCH] pos.setIndex(c.length);
[PATCH] pos.setIndex(start + 1);
[PATCH] addNonEscapedChar(c, pos);
[PATCH] Pos pos.setIndex(start);
[PATCH] pos.setIndex(endIndex++);
[PATCH] pos.setIndex(start;
[PATCH] pos.setIndex(end);
[PATCH] addToString(c, start + 1);
[PATCH] pos.setIndex(getCurrentIndex());
[PATCH] Pos.setIndex(start);
[PATCH] pos.setIndex(Start);
[PATCH] position.setIndex(start);
[PATCH] pos.setIndex(i);
[PATCH] pos.setIndex(start); }
[PATCH] pos.setIndex(offset);
[PATCH] parsingContext.setIndex(start);
[PATCH] addToken(start, pos);
[PATCH] pos.setIndex(start);
[PATCH] pos.setIndex( start);
