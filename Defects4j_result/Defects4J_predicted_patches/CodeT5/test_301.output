[PATCH] currEntry = new TarArchiveEntry(headerBuf[0]);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, 0);
[PATCH] currEntry = new TarArchiveEntry(headerBuf[0];
[PATCH] currEntry = new TarArchiveEntry(headerBuf, 1);
[PATCH] currEntry = new TarArchiveEntry(headerBuf);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, buffer);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, blockSize);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, 2);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, len);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, headerLen);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, skipBuf);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, length);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, readBuf);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, false);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, offset);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, size);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, true);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, version);
[PATCH] currEntry = new TarArchiveEntry(headerBuf[1]);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, EOF);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, gramps);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, -1);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, partition);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, position);
[PATCH] currEntry = new TarArchiveEntry(headerBuf,
[PATCH] currEntry = new TarArchiveEntry(headerBuf, ctxt);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, seq);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, headerOffset);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, 512);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, 10);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, fs);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, archiveSize);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, flags);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, bucket);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, _index);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, nameLen);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, stream);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, startLine);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, crc);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, numRead);
[PATCH] currEntry = new TarArchiveEntry(headerBuf.length);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, prefixLen);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, startLen);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, count);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, 3);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, entryOffset);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, cb);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, parser);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, mountpoint);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, magic);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, delimiter);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, filename);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, compression);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, basename);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, entrySize);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, nextLineBuf);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, pad);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, tarBuffer);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, tail);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, location);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, maxSize);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, stat);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, limit);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, master);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, cursor);
[PATCH] currEntry = new TarArchiveEntry(headerBuf [ 0]);
[PATCH] currEntry = new TarArchiveEntry(headerBuf[offset++]);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, spaceId);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, id);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, startOffset);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, protocol);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, root);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, 8);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, containerName);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, reader);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, lastChar);
[PATCH] currEntry = new TarArchiveEntry(headerBuf[0]);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, sess);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, sessionKey);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, sb);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, bufOffset);
[PATCH] currEntry = new TarArchiveEntry(headerBuf [0]);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, buf);
[PATCH] currEntry = new TarArchiveEntry(headerBuf);
[PATCH] currEntry = new TarArchiveEntry(headerBuf [ 0];
[PATCH] currEntry = new TarArchiveEntry(headerBuf, bufoffset);
[PATCH] currEntry = new TarArchiveEntry(headerBuf, headerSize);
[PATCH] currEntry = new TarArchiveEntry(headerBuf[offset++];
[PATCH] currEntry = parseTarHeader(headerBuf);
[PATCH] currEntry = new TarArchiveEntry(token);
[PATCH] currEntry = new TarArchiveEntry(version);
[PATCH] currEntry = createTarEntry(headerBuf);
[PATCH] currEntry = new TarArchiveEntry();
[PATCH] currEntry = nextTarEntry(headerBuf);
[PATCH] currEntry = new TarArchiveEntry(hdr);
[PATCH] currEntry = constructTarEntry(headerBuf);
[PATCH] currEntry = headerBuf[0];
[PATCH] currEntry = currentTarEntry();
[PATCH] currEntry = getNextTarEntry();
[PATCH] currEntry =
