[PATCH] tq.chompTo(">");
[PATCH] tq.matchChomp(">");
[PATCH] tq.chompTo("/>");
[PATCH] tq.chompTo(";");
[PATCH] tq.chompTo("]");
[PATCH] tq.chompTo("\"");
[PATCH] tq.chompTo(" />");
[PATCH] tq.matchChomp("/>");
[PATCH] tq.chompTo(">');
[PATCH] tq.chompTo('>');
[PATCH] tq.chompTo("/");
[PATCH] tq.chompTo(")");
[PATCH] Validate.notEmpty(data);
[PATCH] tq.matchChomp(" />");
[PATCH] tq.chompTo("\n");
[PATCH] tq.chompTo("*");
[PATCH] tq.chompTo("=");
[PATCH] tq.chompTo("->");
[PATCH] tq.chompTo("\>");
[PATCH] tq.chompTo("}");
[PATCH] tq.chompTo("CDATA");
[PATCH] tq.chompTo(">{$");
[PATCH] tq.chompTo("!");
[PATCH] tq.consumeWhitespace();
[PATCH] tq.chompTo("/>");
[PATCH] tq.chompTo("--");
[PATCH] cq.chompTo(">");
[PATCH] tq.matchChomp(";");
[PATCH] tq.chompTo(';');
[PATCH] Tq.chompTo(">");
[PATCH] tq.chompTo("class");
[PATCH] tq.chompTo("'");
[PATCH] tq.chompTo(" />');
[PATCH] tq.chompTo(".");
[PATCH] tq.chompTo("");
[PATCH] tq.chompTo("\"");
[PATCH] tq.chompTo(":");
[PATCH] tq.chompTo("=\"");
[PATCH] tq.matchChomp("]");
[PATCH] rq.chompTo(">");
[PATCH] tq.chompTo("");
[PATCH] tQ.chompTo(">");
[PATCH] tq.chompTo("\">");
[PATCH] tq.matchChomp("\"");
[PATCH] tq.return_value();
[PATCH] tq.chompTo("<");
[PATCH] tq.matchChomp(">');
[PATCH] tq.chompTo('/');
[PATCH] tns.chompTo(">");
[PATCH] tq.trimToSize();
[PATCH] tq.remainder().removeLast();
[PATCH] tq.chompTo("data");
[PATCH] tq.chompTo("AUTHORIZED");
[PATCH] tq.chompTo(" stuff");
[PATCH] tq.chompTo("$");
[PATCH] data = data.trim();
[PATCH] tq.chompTo(">");
[PATCH] tq.matchChomp("/");
[PATCH] tq.consume();
[PATCH] tq.chompTo("/');
[PATCH] tq.remainder().trim();
[PATCH] tq.chompTo("read");
[PATCH] tq.chompTo("...");
[PATCH] tq.stripTrailingQuotes();
[PATCH] tq.chompTo("">%);
[PATCH] tq.chompTo("body");
[PATCH] tq.chompTo(">'");
[PATCH] tq.appendChild(child);
[PATCH] tq.removeChild(data);
[PATCH] tq.close();
[PATCH] tq.ltrimToSize();
[PATCH] tq.appendChild("/>");
[PATCH] tq.rtrim();
[PATCH] rootNode.removeChild(child);
[PATCH] tq.removeFirstChild();
[PATCH] tq.consumeToken();
[PATCH] tq.ltrim();
[PATCH] tq.consumeToEnd();
[PATCH] tq.remainder();
[PATCH] tq.negate();
[PATCH] tq.removeLast();
[PATCH] tq.returnString();
[PATCH] tq.consumeWord();
[PATCH] parseStartTag(tq);
[PATCH] tq.closeElement();
[PATCH] trimTrailingQuotes(data);
[PATCH] tq.advance();
[PATCH] tq.removeFirst();
[PATCH] baseUri = getBaseUri();
[PATCH] tq.consumeTo();
[PATCH] tq.matchesWord();
[PATCH] lhsChild(child);
[PATCH] tq.pop();
[PATCH] tq.newline();
[PATCH] tq.empty();
[PATCH] processData();
[PATCH] e.pop();
[PATCH] parseTextNode();
[PATCH] endTag();

