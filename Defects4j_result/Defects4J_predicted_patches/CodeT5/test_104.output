[PATCH] Map<String, String> shortOpts = shortOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map<String, String> shortOpts = shortOpts.values(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> shortOpts = getShortOpts(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpt);
[PATCH] Map<String, String> shortOpts : shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.remove(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.values(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(opt);
[PATCH] Map<String, String> shortOpts = getShortOpts(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] for(String shortOpt : shortOpts.keySet()){ if(opt.startsWith(shortOpt)) { continue; }
[PATCH] Map <String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, Boolean> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, Option> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.values();
[PATCH] Map <String, String> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, Option> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> shortOpts : shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, Boolean> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map shortOpts = shortOpts.keySet(); Map longOpts = longOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); Map longOpts = longOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add("--");
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keys());
[PATCH] Map<String, Integer> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, Integer> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] for(String shortOpt : shortOpts.keySet()){ if(shortOpt.startsWith(opt)) { continue; }
[PATCH] Map<String, String> shortOpts : shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map<String, String> shortOpts =shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map shortOpts : shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.entrySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts : shortOpts.keySet();
[PATCH] Map<String, Option> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map<String, String> longOpts = longOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpt.substring(1));
[PATCH] Map<String, String> shortOpts = getShortOptions(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map < String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, Boolean> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); Preconditions.checkNotNull(shortOpts);
[PATCH] HashMap<String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map shortOpts = shortOpts.keySet(); Map longOpts = new HashMap<String, String>(shortOpts.values());
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, Option> shortOpts = shortOpts.values(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> shortOpts =shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map <String, String> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map<String, Boolean> shortOpts = shortOpts.values(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); boolean longOpts = longOpts.keySet();
[PATCH] Map<String, Object> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, Option> shortOpts = shortOpts.keySet();
[PATCH] Map<String, Integer> shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map<String, String> shortOpts : shortOpts.keySet(); matchingOpts.add(opt);
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); Object longOpts = longOpts.get(opt);
[PATCH] for(String shortOpt : shortOpts.keySet()){ matchingOpts.add(shortOpt); }
[PATCH] Map shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpts.get(opt));
[PATCH] Map <String, String> shortOpts = shortOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); Map<String, String> longOpts = longOpts;
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); int longOpts = longOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); matchOptionGroups(shortOpts);
[PATCH] Map<String, String> shortOpts = shortOpts.keySet(); boolean longOpts = longOpts.keySet();
[PATCH] Map shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map shortOpts : shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map shortOpts = shortOpts.keySet(); matchingOpts.addAll(shortOpts.values());
[PATCH] Map<String, Boolean> shortOpts = shortOpts.keySet();
[PATCH] Map shortOpts : shortOpts.keySet(); matchingOpts.addAll(shortOpts.keySet());
[PATCH] Map<String, String> longOpts = longOpts.keySet();
[PATCH] Map<String, Set<String>> shortOpts = shortOpts.keySet();
[PATCH] Map<String, String> shortOpts : shortOpts.keySet(); matchingOpts.add(shortOpt);
[PATCH] Map<String, Integer> shortOpts = shortOpts.keySet();
[PATCH] Map shortOpts : shortOpts.keySet(); matchingOpts.add(opt);
[PATCH] Map<String, Map<String, String>> shortOpts = shortOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.values(); matchingOpts.add(opt);
[PATCH] Map <String, String> shortOpts = shortOpts.keySet(); matchingOpts.add(shortOpt);
[PATCH] Map<String, String> shortOpts = getShortOpts();
[PATCH] Map<String, String> shortOpts = this.shortOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.get(opt);
[PATCH] Map<String, Object> shortOpts = shortOpts.keySet();
[PATCH] Map<String, String> shortOpts =shortOpts.keySet();
[PATCH] Map shortOpts : shortOpts.keySet();
[PATCH] if(opt.startsWith("-")) { matchingOpts.add(opt); }
[PATCH] Map shortOpts = shortOpts.keySet();
[PATCH] matchingOpts.add(shortOpts.get(opt));
[PATCH] Map<String, String> shortOpts = shortOpts.keySet();
[PATCH] HashMap<String, String> shortOpts = shortOpts.keySet();
[PATCH] Map < String, String> shortOpts = shortOpts.keySet();
[PATCH] final Map<String, String> shortOpts = shortOpts.keySet();
[PATCH] Map<String, String> shortOpts = shortOpts.entrySet();
[PATCH] Map shortOpts = shortOpts.keySet(); matchingOpts.add(opt);
[PATCH] Map<String, Option> shortOpts = shortOpts.values();
[PATCH] Map<String, Boolean> shortOpts = shortOpts.values();
[PATCH] Map <String, String> shortOpts = shortOpts.values();
[PATCH] Map<String,?> shortOpts : longOpts;
[PATCH] Map<String, String> shortOpts = getShortOptMap();
[PATCH] Map<String, String> shortOpts = shortOpts.keys();
[PATCH] Map<String, Integer> shortOpts = shortOpts.values();
[PATCH] Map<String, String> longOpts = getLongOpts();
[PATCH] Map<String, String> shortOpts : shortOpts.values();
[PATCH] Map<String, String> shortOpts = shortOpts.get();
