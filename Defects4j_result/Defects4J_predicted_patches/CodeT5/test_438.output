[PATCH].traverseRoots(externs, root);
[PATCH].traverse(externs, root);
[PATCH].traverseRoot(externs, root);
[PATCH].traverseNodes(externs, root);
[PATCH].traverseRootNode(externs, root);
[PATCH].traverseBranch(externs, root);
[PATCH].traverseChildren(externs, root);
[PATCH].traverse roots(externs, root);
[PATCH].traverseroots(externs, root);
[PATCH].traverseAll(externs, root);
[PATCH].traverseResources(externs, root);
[PATCH].traverseCallbacks(externs, root);
[PATCH].traverseTrees(externs, root);
[PATCH].traverseRoots(externs,root);
[PATCH].traverseroot(externs, root);
[PATCH].traverseChecks(externs, root);
[PATCH].traversePointers(externs, root);
[PATCH].traverseRules(externs, root);
[PATCH].traverseUnits(externs, root);
[PATCH].traverseAlternatives(externs, root);
[PATCH].traverse Root(externs, root);
[PATCH].traverse root(externs, root);
[PATCH].traverseScope(externs, root);
[PATCH].traverseInputs(externs, root);
[PATCH].traverseStatements(externs, root);
[PATCH].traverseRoots(expterns, root);
[PATCH].traverseTypes(externs, root);
[PATCH].traverseAncestors(externs, root);
[PATCH].traverseRoots(externs,Root);
[PATCH].traverseNumbers(externs, root);
[PATCH].visitRoots(externs, root);
[PATCH].traverseNamespaces(externs, root);
[PATCH].traverseRoots(EXterns, root);
[PATCH].traverseCode(externs, root);
[PATCH].traverseVersions(externs, root);
[PATCH].traverseLists(externs, root);
[PATCH].traverseTokens(externs, root);
[PATCH].traverseScopes(externs, root);
[PATCH].traverseTasks(externs, root);
[PATCH].traverseWorkers(externs, root);
[PATCH].traverseCodes(externs, root);
[PATCH] ).traverseRoots(externs, root);
[PATCH].traverseInline(externs, root);
[PATCH].traverseAny(externs, root);
[PATCH].traverseFunction(externs, root);
[PATCH].traverseNF(externs, root);
[PATCH].traverseLoops(externs, root);
[PATCH].traverseVars(externs, root);
[PATCH].traversePlans(externs, root);
[PATCH].traverseRoots(externs, ROOT);
[PATCH].traverseEval(externs, root);
[PATCH].traverseRows(externs, root);
[PATCH].traverseChild(externs, root);
[PATCH].traverseResults(externs, root);
[PATCH].traverseFunctions(externs, root);
[PATCH].traverseNode(externs, root);
[PATCH].traversePartial(externs, root);
[PATCH].traverseAsArray(externs, root);
[PATCH].traverseProcesses(externs, root);
[PATCH].traverseContents(externs, root);
[PATCH].traverseRoots(externS, root);
[PATCH].traverseFiles(externs, root);
[PATCH].traverseTree(externs, root);
[PATCH].traverseLT(externs, root);
[PATCH].visit(externs, root);
[PATCH].traverseTraversal(externs, root);
[PATCH].TraverseRoots(externs, root);
[PATCH].traverseDepth(externs, root);
[PATCH].traverseRoots(extern s, root);
[PATCH].traverseIncludes(externs, root);
[PATCH].process(externs, root);
[PATCH].computeRoots(externs, root);
[PATCH].traverse0(externs, root);
[PATCH].traverseVisitor(new PropagateConstants());
[PATCH].traverseRoots(externs, roots);
[PATCH].traverseRoots(externs, rootNode);
[PATCH].traverseRoots(externs, null);
[PATCH].traverseRoots(externs; root);
[PATCH].traverseRoots(externs and root);
[PATCH].traverseRoots(externs, root);
[PATCH].traverseRoots(externes, root);
[PATCH].traverseTopMostDefiningDeclaration(root);
[PATCH].traverseU2U(root);
[PATCH].traverseRoots(externs, root');
[PATCH].traverseRoots(externs, first);
[PATCH].traverseRoots(externs, root");
[PATCH].traverseRoots(externs, Root);
[PATCH].traverseAtScope(root);
[PATCH].traverseRootNode(root);
[PATCH].traverseOnChange(root);
[PATCH].traverseAndGetReturn(root);
[PATCH].traverseIfNotFound(root);
[PATCH].traverseFunction(root);
[PATCH].traverseThrough(root);
[PATCH].traverseNode(root);
[PATCH].traverseAndReturn(root);
[PATCH].traverse(root);
[PATCH].traverseDepth(1);
[PATCH].traverseInto(root);
[PATCH].traverseHashCode(root);
