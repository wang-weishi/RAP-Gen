[PATCH] return options.hasOption(optName);
[PATCH] return options.hasShortOption(optName);
[PATCH] return options.hasShortOption(optName)||
[PATCH] return options.hasShortOption(optName)|| false;
[PATCH] return options.hasShortOption(optName)|| skipParsing;
[PATCH] return options.hasLongOpt(optName);
[PATCH] return options.hasShortOption(optName)? true : false;
[PATCH] return options.hasShortOption(optName)|| true;
[PATCH] return!options.hasShortOption(optName);
[PATCH] return options.hasShortOption(optName)|| selected;
[PATCH] return options.hasOpt(optName);
[PATCH] return options.hasLongOption(optName);
[PATCH] return options.hasShortOption(optName)|| break;
[PATCH] return options.hasOption(optName)? true : false;
[PATCH] return options.hasShortOption(optName)||
[PATCH] return options.hasShortOption(optName)|| hasArg();
[PATCH] return options.hasShortOption(optName)|| skipparsing;
[PATCH] return options.hasShortOption(optName)|| nextOption();
[PATCH] return options.isShortOption(optName);
[PATCH] return options.hasShortOption(optName)|| }
[PATCH] return options.hasShortOption(optName)|| skipProcessing;
[PATCH] return options.hasShortOption(optName)|| continue;
[PATCH] return options.hasShortOption(optName)|| nextValue();
[PATCH] return options.hasShortOption(optName)|| nextArg();
[PATCH] return options.hasShortOpt(optName);
[PATCH] return options.hasShortOption(optName)|| 0;
[PATCH] return options.hasShortOption(optName)&& true;
[PATCH] return options.hasShortOption(optName)|| 1;
[PATCH] return options.hasShortOption(optName)|| null;
[PATCH] return options.hasShortOpt(optName)||
[PATCH] return options.hasOption(optName)||
[PATCH] return options.hasRequiredOption(optName);
[PATCH] return options.getOption(optName)!= null;
[PATCH] return!options.hasOption(optName);
[PATCH] return options.hasShortOption(optName)||"--";
[PATCH] return options.hasShortOption(optName)|| pass;
[PATCH] return options.hasArg(optName);
[PATCH] return options.hasshortOption(optName);
[PATCH] return options.has shortOption(optName);
[PATCH] return options.has ShortOption(optName);
[PATCH] return options.hasMinimumOption(optName);
[PATCH] return options.hasFlag(optName);
[PATCH] return shortOptions.hasOption(optName);
[PATCH] return options.hasStyleOption(optName);
[PATCH] returnoptions.hasOption(optName);
[PATCH] return options.hasCommandOption(optName);
[PATCH] return options.hasShortName(optName);
[PATCH] return options.hasoption(optName);
[PATCH] return options.hasDeprecatedOption(optName);
[PATCH] return options.hasSHORTOption(optName);
[PATCH] return option.hasShortOption(optName);
[PATCH] return options.hasShortOptions(optName);
[PATCH] return shortOptionNames.contains(optName);
[PATCH] return options.hasRawOption(optName);
[PATCH] return options.has getShortOption(optName);
[PATCH] return options.hasSubOption(optName);
[PATCH] return options.hasOptionalArg(optName);
[PATCH] return options.hasFixedOption(optName);
[PATCH] returnOptions.hasOption(optName);
[PATCH] return options.hasNoOption(optName);
[PATCH] return options.has Option(optName);
[PATCH] return options.hasArgument(optName);
[PATCH] return options.has option(optName);
[PATCH] return options.hasParameter(optName);
[PATCH] return options.hasopt(optName);
[PATCH] return options.hasOptionsOption(optName);
[PATCH] return opt.hasShortOption(optName);
[PATCH] return options.hasShortoption(optName);
[PATCH] return options.hasSetting(optName);
[PATCH] return options.hasKey(optName);
[PATCH] return options.hasSimpleOption(optName);
[PATCH] return options.hasOverrideOption(optName);
[PATCH] return options.getShortOption(optName);
[PATCH] return options.hasDevOption(optName);
[PATCH] return options.hasEscapeOption(optName);
[PATCH] return options.hasMinimumValue(optName);
[PATCH] return options.hasUnsignedOption(optName);
[PATCH] return options.hasDefaultOption(optName);
[PATCH] return options.hasShortcutOption(optName);
[PATCH] return u.hasShortOption(optName);
[PATCH] return options.hasBooleanOption(optName);
[PATCH] return options.hasVarOption(optName);
[PATCH] return options.hasIcon(optName);
[PATCH] return options.hasValue(optName);
[PATCH] returnoptions.hasShortOption(optName);
[PATCH] return options.hasOptionalOption(optName);
[PATCH] return options.hasMinimumParameter(optName);
[PATCH] return options.hasOneOption(optName);
[PATCH] return options.hasRequiredMarker(optName);
[PATCH] return options.hasParam(optName);
[PATCH] return options.hasOption( optName);
[PATCH] return options.isOption(optName);
[PATCH] return options.hasAttribute(optName);
[PATCH] return options.getOption(optName);
[PATCH] return options.hasProp(optName);
[PATCH] return isShortOption(optName);
[PATCH] return opts.hasOption(optName);
[PATCH] return options.has(optName);
[PATCH] return processShortOption(optName);
[PATCH] return false;
