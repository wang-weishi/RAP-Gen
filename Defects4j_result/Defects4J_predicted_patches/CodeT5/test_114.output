[PATCH] traverse(c);
[PATCH] Node next = c.getNext();
[PATCH] traverseChildScopes(c);
[PATCH] visit(c);
[PATCH] c = c.getNext();
[PATCH] node.removeChild(c);
[PATCH] traverseNode(c);
[PATCH] Visitor next = c.getNext();
[PATCH] node = c.getNext();
[PATCH] traverseBranch(c);
[PATCH] NODE next = c.getNext();
[PATCH] addAllChildren(c);
[PATCH] replaceWithEmpty(c, next);
[PATCH] Traversable.traverse(c);
[PATCH] visitChild(c);
[PATCH] Node next = c.getNext();
[PATCH] nodesToRename.add(c);
[PATCH] Branch next = c.getNext();
[PATCH] addChangeHandler(c);
[PATCH] computeFallThrough(c);
[PATCH] traverseChild(c);
[PATCH] getAndMoveToFront(c);
[PATCH] traverseChildScope(c);
[PATCH] next = c.getNext();
[PATCH] navigate(c);
[PATCH] Traversing.traverse(c);
[PATCH] safeAddChildToBack(c);
[PATCH] removeChild(c);
[PATCH] computeNext(c);
[PATCH] createEdge(visits, c);
[PATCH] nodesToRename(c);
[PATCH] traverseChild(c, node);
[PATCH] Traversal.traverse(c);
[PATCH] computeEdge(c, node);
[PATCH] replaceWithEmpty(c, false);
[PATCH] nodesToSkip(c);
[PATCH] traverseWithScope(c);
[PATCH] propagate(c);
[PATCH] nodesToVisit(c);
[PATCH] propagateChild(c);
[PATCH] iterateChildScopes(c);
[PATCH] computeFollowNode(c);
[PATCH] traverse(c, node);
[PATCH] replaceWithEmpty(c, null);
[PATCH] computeLineBreak(c);
[PATCH] traversalState.push(c);
[PATCH] nodesToTraverse(c);
[PATCH] traverseChildren(c);
[PATCH] visitChild(c, node);
[PATCH] replaceWithEmpty(c, true);
[PATCH] nodes.add(c);
[PATCH] deepTraverse(c);
[PATCH] copyControlStructure(c);
[PATCH] nodesToIgnore(c);
[PATCH] process(c);
[PATCH] addVisitor(c);
[PATCH] visitNode(c);
[PATCH] addToBack(c);
[PATCH] copyCurrentStructure(c);
[PATCH] replaceWithNull(c);
[PATCH] updateNode(c);
[PATCH] doVisit(c);
[PATCH] copyToFront(c);
[PATCH] makeNode(c);
[PATCH] quickTraverse(c);
[PATCH] computeOptimize(c);
[PATCH] merge(c, next);
[PATCH] pushScope(c);
[PATCH] redeclare(c);
[PATCH] visitor(c);
[PATCH] moveToFront(c);
[PATCH] visits += c.getNext();
[PATCH] visitChild(c, visitorState);
[PATCH] makeBranch(c);
[PATCH] createEdge(c, node);
[PATCH] visitChild(c, null);
[PATCH] visitChild(c, false);
[PATCH] decompose(c);
[PATCH] precedence(c);
[PATCH] visitChild(c, next);
[PATCH] pushPeephole(c);
[PATCH] checkNode(c);
[PATCH] addChangeHandler(c, state);
[PATCH] cloneNode(c);
[PATCH] visitBranch(c);
[PATCH] Visit(c);
[PATCH] createEntry(c);
[PATCH] replaceWithEmpty(c, n);
[PATCH] traverseChild(c, false);
[PATCH] computeEdge(c);
[PATCH] traverseChild(c, next);
[PATCH] enlarge(c);
[PATCH] createNode(c);
[PATCH] replaceWithEmpty(c, v);
[PATCH] visitChild(c, 1);
[PATCH] copyNodes(c);
[PATCH] removeNode(c);
[PATCH] lastChild(c);
[PATCH] cloneTree(c);
[PATCH] pushState(c);
