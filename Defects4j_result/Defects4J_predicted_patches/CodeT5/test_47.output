[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; System.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecRelativeTolerance.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; System.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vecAbsoluteTolerance);
[PATCH] final double[] scale;
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecRelativeTolerance.length]; System.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, 0.0);
[PATCH] final double[] scale = new double[x0.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, 0.0);
[PATCH] final double[] scale = new double[x.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[xDotK.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[yDotK.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vecRelative tolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance].length; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, slopeAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, vecAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vecrelativeTolerance);
[PATCH] final double[] scale = new double[vecRelativeTolerance.length]; Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[z.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[1.0]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; Java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecRelativeTolerance.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, slopeAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vRelativeTolerance);
[PATCH] final double[] scale = new double[y1.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; System.util.Arrays.fill(scale, 0.0);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vecRelativetolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance].clone(); java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[1.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, scalRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, yRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale,vecRelativeTolerance);
[PATCH] final double[] scale = new double[2.0]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, yRelativeTolerance);
[PATCH] final double[] scale = new double[3]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; System.util.Arrays.fill(scale, vecAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; System.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[2.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; Math.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, eps);
[PATCH] final double[] scale = new double[v0.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecRelativeTolerance.length]; System.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance].length; System.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, vRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, t0);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, v0);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; Java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[scale.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[x.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecRelativeTolerance].length; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; System.util.Arrays.fill(scale, yRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, scalRelativeTolerance);
[PATCH] final double[] scale = new double[float.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, cvRelativeTolerance);
[PATCH] final double[] scale = new double[z0.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[z.length]; java.util.Arrays.fill(scale, vecAbsoluteTolerance);
[PATCH] final double[] scale = new double[double.class]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale= new double[y0.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new final double[y0.length]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, iAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, eps);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, sum);
[PATCH] final double[] scale = new double[Y0.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, negAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, vecRelative tolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; System.util.Arrays.fill(scale, slopeAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, VecRelativeTolerance);
[PATCH] final double[] scale = new double[ym.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, negAbsoluteTolerance);
[PATCH] finaldouble[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vec0.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; System.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; System.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; Collections.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, sum);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; Math.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vectorsAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance + 1]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[3.0]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, vecRelativeTol);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance].length; Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[3]; java.util.Arrays.fill(scale, vecAbsoluteTolerance);
[PATCH] final double[] scale = new double[double.length]; java.util.Arrays.fill(scale, vecRelativeTolerance);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, negativeZero);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; System.util.Arrays.fill(scale, v0);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, vecRelativetolerance);
[PATCH] final double[] scale = new double[10]; java.util.Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[y0.length]; java.util.Arrays.fill(scale, t0);
[PATCH] final double[] scale = new double[vecAbsoluteTolerance.length]; java.util.Arrays.fill(scale, i);
[PATCH] final double[] scale = new double[y0.length]; Arrays.fill(scale, scalAbsoluteTolerance);
[PATCH] final double[] scale = new double[vecRelativeTolerance.length]; java.util.Arrays.fill(scale, scalAbsolute tolerance);
