[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromParameters(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromKeys(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromKeys(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromVariables(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromParams(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromProperties(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromProperties(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromKeys(keys, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromProperties(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromConstants(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromVariables(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromReferences(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromArguments(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromStrings(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromVars(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromFields(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromkeys(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromFields(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromValues(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromInputs(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromFields(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSummary(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromVars(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromTags(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromTemplates(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromParameters(keys, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromImages(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromReferences(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSettings(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromPartials(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSettings(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromList(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromConstants(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSettings(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = getInferredTemplateTypesFromParameters(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromAttributes(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromOptions(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromParameters(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromColumns(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromTokens(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromFunctions(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromFunctions(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromNames(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSymbols(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromResources(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromResources(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSummary(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromBlocks(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromKeys(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromStrings(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSymbols(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromValues(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromProperties(keys, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromUnknowns(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromChildren(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromPartialCall(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromOptionalParameters(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromArgs(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromNames(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromConfiguration(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromColumns(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromGlobals(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromDefaults(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromDefinitions(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromStatements(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromMethods(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromColumns(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromVariables(keys, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromCollections(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromArrays(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromData(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromVariables(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromMethods(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromSource(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromStaticCall(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromReferences(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromConfiguration(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromTemplates(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromMessages(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromMessages(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromAny(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromAnnotations(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromViews(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromTemplates(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromNames(fnType, n);
[PATCH] Map<TemplateType, JSType> infer = inferTemplateTypesFromParameters(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromInternalNames(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromInformation(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromReferences(keys, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromAll(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromThis(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFrom Templates(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromIndexes(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromTasks(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = getInferredTemplateTypesFromKeys(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromKeywords(fnType, keys);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromNames(keys, n);
[PATCH] Map<TemplateType, JSType> inferred = getInferredTemplateTypesFromKeys(fnType, n);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromParameters(n, fnType);
[PATCH] Map<TemplateType, JSType> inferred = inferTemplateTypesFromParameters(fnType, n);
