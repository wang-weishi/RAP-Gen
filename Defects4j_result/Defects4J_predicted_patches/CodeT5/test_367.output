[PATCH] this.data.add(-x, y);
[PATCH] if(y == null){ throw new IllegalArgumentException(""); }
[PATCH] int size = this.data.size();
[PATCH] double size = this.data.size();
[PATCH] this.data.addOrUpdate(x, y);
[PATCH] double y = y.doubleValue();
[PATCH] setY(y, x.doubleValue());
[PATCH] checkRange(x.doubleValue(), y);
[PATCH] XYDataItem existing = getDataItem(x.longValue());
[PATCH] double start = valueToJava2D(x, y);
[PATCH] y = valueToJava2D(y, false);
[PATCH] double start = this.data.size() - 1;
[PATCH] XYDataItem existing = getDataItem(x.doubleValue());
[PATCH] TimeSeriesUtils.validate(x, this.maximumItemCount);
[PATCH] setX(x); getY(y);
[PATCH] super.addOrUpdate(x, y);
[PATCH] validateRange(x.doubleValue(), y);
[PATCH] Validate.notNull(y);
[PATCH] x = x.doubleValue();
[PATCH] int start = this.data.size() - 1;
[PATCH] this.data.add(-x +"," + y);
[PATCH] ensureCapacity(this.data.size() + 1);
[PATCH] y = valueToJava2D(y, false);
[PATCH] x = valueToJava2D(x, y);
[PATCH] y = y.doubleValue();
[PATCH] double time = valueToJava2D(x, y);
[PATCH] this.data.put(-x, y);
[PATCH] double time = valueToJava2D(y, false);
[PATCH] final int size = this.data.size();
[PATCH] setY(y);
[PATCH] double time = y.doubleValue();
[PATCH] Number y = NumberUtils.toNumber(y);
[PATCH] y = toNumber(y);
[PATCH] this.data.add(-x +", y");
[PATCH] TimeSeriesUtils.validate(x, this.minimumItemCount);
[PATCH] return this.data.add(-x, y);
[PATCH] checkLimits(x.doubleValue(), y);
[PATCH] y = adjustY(y, false);
[PATCH] add(new XYDataItem(x, y));
[PATCH] y = checkNumber(y);
[PATCH] y = normalizeY(y);
[PATCH] y = ensureNumber(y);
[PATCH] XYDataItem existing = getDataItem(x.intValue());
[PATCH] y = adjustNumber(y, false);
[PATCH] double totalItemCount = this.data.size();
[PATCH] this.data.put(x, y);
[PATCH] double count = this.data.size();
[PATCH] ensureCapacity(this.data.size + 1);
[PATCH] Y = y.doubleValue();
[PATCH] invalidateRangeInfo(x, y);
[PATCH] this.data.remove(x.longValue());
[PATCH] updateX(x, y);
[PATCH] y = convertNumberToY(y);
[PATCH] cg.addOrUpdate(x, y);
[PATCH] y = convertNumber(y);
[PATCH] this.data.add(-x,y);
[PATCH] float size = this.data.size();
[PATCH] XYDataItem existing = getDataItem(x);
[PATCH] y = toStandardDate(y);
[PATCH] checkLimits(x.intValue(), true);
[PATCH] setXY(x, y);
[PATCH] y = adjustNumber(y);
[PATCH] ensureCapacity(this.data.size);
[PATCH] ensureCapacity(this.data.size());
[PATCH] checkLimits(x.doubleValue(), true);
[PATCH] double size = getItemSize();
[PATCH] y = adjustY(y, true);
[PATCH] value = y.doubleValue();
[PATCH] y = adjustNumber(y, true);
[PATCH] double start = y.doubleValue();
[PATCH] Preconditions.checkNotNull(y);
[PATCH] y = calculateY(y);
[PATCH] double height = getYValue(y);
[PATCH] validateRange(x, y);
[PATCH] y = toXY(y);
[PATCH] int size = getItemSize();
[PATCH] y = cleanNumber(y);
[PATCH] this.data.add(-x);
[PATCH] y = createNumber(y);
[PATCH] double size = this.getSize();
[PATCH] y = toInstance(y);
[PATCH] y = validateNumber(y);
[PATCH] y = wrapNumber(y);
[PATCH] y = valueToNumber(y);
[PATCH] y = adjustY(y);
[PATCH] double start = getTimeMillis(x);
[PATCH] y = validateY(y);
[PATCH] double y = getY(y);
[PATCH] int size = getItemCount();
[PATCH] x = x.longValue();
[PATCH] y = normaliseNumber(y);
[PATCH] y = getValue(y);
[PATCH] double size = getMaximumItemCount();
[PATCH] y = getY(y);
[PATCH] Y = getY(y);
[PATCH] x = x.clone();
[PATCH] fireSeriesChanged();
[PATCH] setX(x);
[PATCH] clearRange();
[PATCH] clearData();
