[PATCH] v2D = line2.intersect(v2D);
[PATCH] Vector2D v2D = line2.intersect(v2D);
[PATCH] v2D.setRect(getX(), getX(), getY());
[PATCH] v2D = line2.intersectWith(v2D);
[PATCH] v2D.setRect(getX(), getY());
[PATCH] v2D.setCoords(getX(), getY());
[PATCH] v2D = super.intersect(v2D);
[PATCH] v2D.setBounds(getX(), getX(), getY());
[PATCH] v2D.setRect(getBounds(), RectangleConstraint.NONE);
[PATCH] v2D = v2D.clone();
[PATCH] v2D.setBounds(getX(), getY());
[PATCH] v2D = line2.intersects(v2D);
[PATCH] v2D.setHeight(v2D.getHeight());
[PATCH] v2D = line2.intersection(v2D);
[PATCH] v2D = mv.intersect(v2D);
[PATCH] v2D.setCoords(getStartX(), getY());
[PATCH] v2D.setBounds(getStartLocation(), getEndLocation());
[PATCH] v2D = v2D.trim();
[PATCH] v2D.setCoordinates(getX(), getY());
[PATCH] v2D.setLength(v2D.getLength());
[PATCH] v2D = v2D.copy();
[PATCH] v2D = v2D.normalize();
[PATCH] v2D.setPaint(getPaint());
[PATCH] v2D = super.intersection(v2D);
[PATCH] v2D = v2D.intersectWith(getVector());
[PATCH] v2D = v2D.intersectWith(this);
[PATCH] v2D.setBounds(getStartLocation(), getYLocation());
[PATCH] v2D.setCoordinates(getBounds());
[PATCH] v2D = v2D.multiply(getVector2D());
[PATCH] v2D.setHeight(line2.getHeight());
[PATCH] Vector2D v2D = line2.intersection(v2D);
[PATCH] v2D = line2.difference(v2D);
[PATCH] v2D.setCoords(getX(), getX());
[PATCH] v2D.setCoords(getStartAngle(), getY());
[PATCH] v2D.setRect(getX(), y);
[PATCH] v2D.setCoordinates(getStartX(), getY());
[PATCH] v2D = v2D.not();
[PATCH] v2D = v2D.unionWith(this);
[PATCH] v2D.setBounds(getStartX(), getY());
[PATCH] v2D.setAutoRangeIncludesZero(false);
[PATCH] v2D.setSubLine(subLine);
[PATCH] v2D = v2D.multiply(getValue());
[PATCH] v2D.setCoordSystem(getCoordinate());
[PATCH] v2D.setToSubLine(subLine);
[PATCH] v2D.setCoordinates(getStartLocation(), getYLocation());
[PATCH] v2D.setCoords(getAbsolutePosition());
[PATCH] v2D.setCoords(getStartCoordinate(), getYCoordinate());
[PATCH] v2D.setHeight(getHeight());
[PATCH] v2D = v2D.subtract(getVector());
[PATCH] v2D.setRect(getMinY(), getMaxY());
[PATCH] v2D.setRect(getMinY(), getMaximumY());
[PATCH] v2D.setRect(getX(), getX(), getColumn());
[PATCH] v2D = v2D.zeroAll();
[PATCH] v2D.setBounds(getX(), getX(), getColumn());
[PATCH] v2D.setAllSubLines(subLine.getEndPoints());
[PATCH] v2D.setBounds(getStartX(), getEndY());
[PATCH] v2D.setIndex(0);
[PATCH] v2D.setToTranslation(subLine.getCoordinate());
[PATCH] v2D.setCoordinates(getStartX(), getEndY());
[PATCH] v2D.setAllSubLines(subLine.getOutlines());
[PATCH] v2D = super.intersect(v2D, false);
[PATCH] v2D.setBounds(getStartX(), getStartY());
[PATCH] v2D.setArea(getBounds());
[PATCH] v2D = v2D.multiply(this.getVector());
[PATCH] v2D = v2D.Negate();
[PATCH] v2D.setCoords(getCoordinate());
[PATCH] v2D.setBounds(getStartLocation(), getSEndLocation());
[PATCH] v2D = v2D.withoutZeroes();
[PATCH] v2D.setCoords(getCoordinates());
[PATCH] v2D.setCoords(getStartY(), getY());
[PATCH] v2D = v2D.doubleValue();
[PATCH] v2D.setFrame(getFrame());
[PATCH] v2D = v2D.subtract(this);
[PATCH] v2D.setRect(getX(), getX(), getHeight());
[PATCH] v2D.setBounds(getStartAngle(), getEndLocation());
[PATCH] v2D.setCoords(getStartAngle(), getYOffset());
[PATCH] v2D.setCoordinates(getX(), getX());
[PATCH] v2D = Math.max(v2D, v2D);
[PATCH] v2D.setRect(getX(),Y);
[PATCH] v2D = v2D.minus(getVector());
[PATCH] v2D.setRect(getX(), getX(), y);
[PATCH] v2D = v2D.getBounds();
[PATCH] v2D.setCoords(getBounds());
[PATCH] v2D = v2D.intersects(this);
[PATCH] v2D = line2.toVector();
[PATCH] v2D.setWindingRule(getAnchor());
[PATCH] v2D.setRect(getAbsolutePosition(), getBase());
[PATCH] v2D = v2D.intersect(this);
[PATCH] v2D.setCoords(getStartAngle(), getYPosition());
[PATCH] v2D.setStroke(getOutlineStroke());
[PATCH] v2D.copyIn(getBase());
[PATCH] v2D.setBounds(getX(), getX());
[PATCH] v2D.setY(getY());
[PATCH] v2D = v2D.multiply(getVector());
[PATCH] v2D = v2D.clear();
[PATCH] v2D = v2D.intersect(getValue());
[PATCH] v2D.setStroke(getBorder());
[PATCH] v2D.setToTranslation();
[PATCH] v2D.normalize();
[PATCH] v2D.copyOut();
