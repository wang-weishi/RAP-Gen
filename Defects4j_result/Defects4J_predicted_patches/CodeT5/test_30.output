[PATCH] targetY = -REDUCTION_FACTOR * yB;
[PATCH] if(agingB >= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB > MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MINIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] targetY = -redUCTION_FACTOR * yB;
[PATCH] else if(agingB >= MAXIMAL_AGING){
[PATCH] if(ageB >= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingA <= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MAXimal_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB <= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agedB >= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= 0){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MAXIMAL_AGING){ targetY = -redUCTION_FACTOR * yB; }
[PATCH] if(agesB >= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= maximal_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(AGINGB >= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] else if(agingB >= 0){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB < MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(( yA > 0.0)&&(yB > 0.0)) {
[PATCH] if(ageB > MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yA; }
[PATCH] if(agingB >= MAXIMAL_AGING){ targetY = -RedUCTION_FACTOR * yB; }
[PATCH] if(frags > MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yb; }
[PATCH] if(agingB > MAXimal_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MAXIMUM_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= 1){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB > MAXIMAL_AGING){ targetY = -redUCTION_FACTOR * yB; }
[PATCH] targetY = -RedUCTION_FACTOR * yB;
[PATCH] if(agingB >= MAXANG_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB == MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MAXIMAL_STORE){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] else if(agingB >= 1){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MAXIMAL_ORDER){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(--agingB >= 0){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB >= MINIMAL_AGING){ targetY = -redUCTION_FACTOR * yB; }
[PATCH] if(agingB > MAXIMAL_AGING){ targetY = -RedUCTION_FACTOR * yB; }
[PATCH] if(targetY > 0){ targetY = -REDUCTION_FACTOR * yB; }
[PATCH] if(agingB > MAXIMAL_AGING){ targetY = -REDUCTION_FACTOR * yb; }
[PATCH] if(( agingA <= MAXIMAL_AGING)||(agingB >= MINIMAL_AGING)) {
[PATCH] if(agingB >= MAXIMAL_AGING){ targetY = -REUCTION_FACTOR * yB; }
[PATCH] } else if(agingB >= MAXIMAL_AGING){
[PATCH] targetY = -REDUCTION_FACTOR * yA;
[PATCH] else if(agingA <= MAXIMAL_AGING){
[PATCH] targetY = -REDUCTION_FACTOR * y2;
[PATCH] else if(( agingA <= MAXIMAL_AGING)&&(agingB >= 0)) {
[PATCH] targetY = -REDUCTION_FACTOR * yB; } else if(agingA >= 0){
[PATCH] if(( agingA <= MAXIMAL_AGING)||(agingB >= MAXIMAL_AGING)) {
[PATCH] targetY = -RELATIVE_FACTOR * yB;
[PATCH] if(( agingA > 0)||(agingB > 0)) {
[PATCH] else if(( agingA <= 0)&&(agingB >= 0)) {
[PATCH] else if(agingB >= MINIMAL_AGING){
[PATCH] } else if(agingA <= MAXIMAL_AGING){
[PATCH] targetY = -REUCTION_FACTOR * yB;
[PATCH] targetsY = -REDUCTION_FACTOR * yB;
[PATCH] targetY = -REDUCTION_FACTOR * yb;
[PATCH] targetY = - REDUCTION_FACTOR * yB;
[PATCH] TargetY = -REDUCTION_FACTOR * yB;
[PATCH] if(( agingA <= MAXIMAL_AGING)||(agingB >= 0)) {
[PATCH] else if(agingB > MAXIMAL_AGING){
[PATCH] targetY = -REDUCTION_FACTOR * y B;
[PATCH] targetY = -REDUCTION_FACTOR * yB;
[PATCH] targetY = -REDUCTION_FACTOR *yB;
[PATCH] targetY = -REDUCTION_FACTOR * yB; return targetY;
[PATCH] targetY = -REDUCTION_FACTOR * y1;
[PATCH] targetY = -reduction_FACTOR * yB;
[PATCH] else if(( agingA - 1)> MAXIMAL_AGING){
[PATCH] targetY = -REDATEGY_FACTOR * yB;
[PATCH] targetY = -REDATION_FACTOR * yB;
[PATCH] else if(agingB >= MAXimal_AGING){
[PATCH] else if(ageB >= MAXIMAL_AGING){
[PATCH] targetY = -REDuction_FACTOR * yB;
[PATCH] targetY = - RedUCTION_FACTOR * yB;
[PATCH] targetY = -REDUCTION_factor * yB;
[PATCH] else if(( agingA - 1)< MAXIMAL_AGING){
[PATCH] } else if(agingB >= MINIMAL_AGING){
[PATCH] targetY = -REDUCTION_FACTOR * yB; break;
[PATCH] else if(agingB >= MAXIMAL_AGING){
[PATCH] targetY = -REDUCTION_FACTOR * yC;
[PATCH] targetY = -DISTANCE_FACTOR * yB;
[PATCH] targetY = -REDUCTION_FACTOR * yB;
[PATCH] targetY = -REDPED_FACTOR * yB;
[PATCH] targetY = -REDocation_FACTOR * yB;
[PATCH] targetY = -AUTO_DISTANCE * yB;
[PATCH] targetY = -REFACTOR_FACTOR * yB;
[PATCH] targetY = -BLACK_FACTOR * yB;
[PATCH] targetY = -REDCATION_FACTOR * yB;
[PATCH] TARGETY = -REDUCTION_FACTOR * yB;
[PATCH] targetY = -REDOT_FACTOR * yB;
[PATCH] } else if(agingA >= MAXIMAL_AGING){
[PATCH] else if(agedB >= MAXIMAL_AGING){
[PATCH] if(agingB >= MAXIMAL_AGING){
[PATCH] targetY = - reduction_FACTOR * yB;
[PATCH] else if(AGINGB >= MAXIMAL_AGING){
[PATCH] targetY = -TEMP_FACTOR * yB;
[PATCH] else if(agingA < MAXIMAL_AGING){
[PATCH] targetY = -REDUCTION_FACTOR * yB; continue;
[PATCH] targetY = -REDUCTION_FACTOR * yB:
[PATCH] else if(agingB >= maximal_AGING){
[PATCH] while(agingB >= MAXIMAL_AGING){
