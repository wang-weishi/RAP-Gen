[PATCH] Validate.notEmpty(value);
[PATCH] value = value.trim().toLowerCase();
[PATCH] Validate.isTrue(value!= null);
[PATCH] attr.removeValue();
[PATCH] attr.remove(Key.valueOf(value));
[PATCH] attr.removeKey(key);
[PATCH] attr.removeKey(value);
[PATCH] Validate.notNull(value);
[PATCH] attr.clearValue();
[PATCH] value = String.valueOf(value);
[PATCH] value = value.trim();
[PATCH] Preconditions.checkNotNull(value);
[PATCH] attrs.remove(attr.getKey());
[PATCH] attr.clear();
[PATCH] value = Util.stripLeadingHyphens(value);
[PATCH] attr.remove(key);
[PATCH] attr.removeValue(value);
[PATCH] el.Validate.notEmpty(value);
[PATCH] Validate.isTrue(!value.equals("");
[PATCH] attributeSet.remove(attr.getKey());
[PATCH] validateKey(el, attr.getKey());
[PATCH] value = value == null?"null" : value;
[PATCH] Preconditions.checkState(value!= null);
[PATCH] validatePrefix(el, attr.getKey());
[PATCH] attr.setRequired(!preserveRelativeLinks);
[PATCH] value = stripLeadingHyphens(value);
[PATCH] attributes.remove(attr.getKey());
[PATCH] value = value == null?"" : value;
[PATCH] val = value.trim().toLowerCase();
[PATCH] value = el.absUrl(value);
[PATCH] value = value.replace(':', '/');
[PATCH] validateName(el, attr.getKey());
[PATCH] value = key.trim().toLowerCase();
[PATCH] attr.removeAttribute(key);
[PATCH] value = Validate.notEmpty(value);
[PATCH] value = value.trim() +"'";
[PATCH] String preserveRelativeLinks = value.equals(":");
[PATCH] el.attr(attr.getKey().toString());
[PATCH] value = value.trim().intern();
[PATCH] String preserveRelativeLinks = value.indexOf(':');
[PATCH] value = el.trimUrl(value);
[PATCH] attr.removeProp(AttributeKey.NAME);
[PATCH] validateValue(el, attr.getValue());
[PATCH] Validate.isFalse(value.equals(""));
[PATCH] String preserveRelativeLinks = value.equals("-");
[PATCH] String preserveRelativeLinks = value.indexOf(":");
[PATCH] attr.absUrl(value);
[PATCH] validateProtocol(el, attr, value);
[PATCH] String preserveRelativeLinks = value.equals("!");
[PATCH] attr.absUrl = value.trim();
[PATCH] validateValue(el, attr, value);
[PATCH] validator.isValid(el, value);
[PATCH] key = attr.getKey().toString();
[PATCH] validateUrl(el, attr, value);
[PATCH] value = urlEscape(el, value);
[PATCH] value = filterUrl(el, value);
[PATCH] attr.ValidateValue(value!= null);
[PATCH] value = value.trim() +"]";
[PATCH] attr.removeFromParent();
[PATCH] boolean preserveRelativeLinks = el.isLink();
[PATCH] value = value.trim() +":";
[PATCH] attr.validate(el, value);
[PATCH] attr.removeProp(Key.NAME);
[PATCH] Validate.notBlank(value);
[PATCH] el.attr(attr.getKey());
[PATCH] value = StringUtils.trim(value);
[PATCH] value = Math.trim(value);
[PATCH] validateValue(el, value);
[PATCH] validateAttribute(el, attr);
[PATCH] attr.setName(value);
[PATCH] attr.remove(Key.name());
[PATCH] attr.removeAttributeValue(value);
[PATCH] String prot = value.toLowerCase();
[PATCH] el.validateUrl(value);
[PATCH] attr.clearPrefix();
[PATCH] attr.isRequired();
[PATCH] value = normalizeUrl(value);
[PATCH] value = stripProtocol(value);
[PATCH] attr.validateValue(value);
[PATCH] Validate.notEmpty(value);
[PATCH] attr.setRequired(false);
[PATCH] attr.clearValues();
[PATCH] attr.getValue().trim();
[PATCH] Validate.isTrue("");
[PATCH] attr.clear(true);
[PATCH] attr.clearKey();
[PATCH] attr.removeFromAttributes();
[PATCH] attr.removeName();
[PATCH] attr.remove();
[PATCH] attr.removeFirst();
[PATCH] attr.removeNull();
[PATCH] attr.removeKey();
[PATCH] attr.removeValues();
[PATCH] attr.clearAttribute();
[PATCH] attr.empty();
[PATCH] ;
[PATCH]

);
*/
