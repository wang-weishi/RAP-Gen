[PATCH] copySafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.html(), clean.html());
[PATCH] Validate.notNull(dirtyDocument.baseUri());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.element(), clean.element());
[PATCH] copySafeNodes(dirtyDocument.header(), clean.header());
[PATCH] copySafeNodes(dirtyDocument.xml(), clean.xml());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.header());
[PATCH] copySafeNodes(dirtyDocument.elements(), clean.elements());
[PATCH] SafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.body(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.attributes(), clean.attributes());
[PATCH] copySafeNodes(dirtyDocument.components(), clean.components());
[PATCH] Validate.notNull(dirtyDocument.body());
[PATCH] copySafeNodes(dirtyDocument.svg(), clean.svg());
[PATCH] CopySafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.Elements(), clean.elements());
[PATCH] cloneSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.title(), clean.title());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.html());
[PATCH] copySafeNodes(dirtyDocument.headers(), clean.header());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.baseUri());
[PATCH] copySafeNodes(dirtyDocument.html(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.root());
[PATCH] SafeNodes(dirtyDocument.html(), clean.html());
[PATCH] copySafeNodes(dirtyDocument.xpath(), clean.xpath());
[PATCH] copySafeNodes(dirtyDocument. head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.access(), clean.access());
[PATCH] copySafeNodes(dirtyDocument.empty(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.baseUri(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.children(), clean.childNodes());
[PATCH] copySafeNodes(dirtyDocument.root(), clean.root());
[PATCH] copySafeNodes(dirtyDocument.documentElement(), clean.body());
[PATCH] collectSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.body(), clean.html());
[PATCH] removeSafeNodes(dirtyDocument.head(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.first(), clean.first());
[PATCH] copySafeNodes(dirtyDocument.elementType(), clean.element());
[PATCH] copySafeNodes(dirtyDocument.ELEMENT_NODE, clean.element());
[PATCH] copySafeNodes(dirtyDoc.head(), clean.head());
[PATCH] SafeNodes(dirtyDocument.head(), clean.body());
[PATCH] clipSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.elements(), clean.element());
[PATCH] CopySafeNodes(dirtyDocument.html(), clean.html());
[PATCH] copySafeNodes(dirtyDocument.element(), clean.elements());
[PATCH] copySafeNodes(dirtyDocument.empty(), clean.html());
[PATCH] CopySafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.Head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.sheet(), clean.sheet());
[PATCH] copySafeNodes(dirtyDocument.entities(), clean.elements());
[PATCH] copySafeNodes(dirtyElement.head(), clean.head());
[PATCH] mergeSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.head(), dirtyDocument.body());
[PATCH] Validate.notNull(dirtyDocument.head());
[PATCH] copySafeNodes(dirtyDocument.children(), clean.elements());
[PATCH] copySafeNodes(dirtyDocument.head(), clean. head());
[PATCH] removeSafeNodes(dirtyDocument.body(), clean.body());
[PATCH] validateSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument. documentElement(), clean.documentElement());
[PATCH] copySafeNodes(dirtyDocument. html(), clean.html());
[PATCH] modifySafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.text(), clean.text());
[PATCH] copySafeNodes(dirtyDocument.legend(), clean.legend());
[PATCH] trimSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.baseUri(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.tagName(), clean.tag());
[PATCH] copySafeNodes(dirtyDocument.segments(), clean.segments());
[PATCH] copySafeNodes(dirtyDocument.baseUri(), clean.html());
[PATCH] clean.head().appendChild(dirtyDocument.baseUri());
[PATCH] copySafeNodes(dirtyDocument.attribs(), clean.attributes());
[PATCH] copySafeNodes(dirtyDocument.innerHtml(), clean.body());
[PATCH] replaceSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] clean.head().appendChild(dirtyDocument.html());
[PATCH] SafeNodes(dirtyDocument.attributes(), clean.attributes());
[PATCH] copySafeNodes(dirtyDocument.body(), clean.head());
[PATCH] cloneSafeNodes(dirtyDocument.html(), clean.html());
[PATCH] copySafeNodes(dirtyDocument.documentElement(), clean.html());
[PATCH] copySafeNodes(dirtyDocument.before(), clean.before());
[PATCH] Validate.notNull(clean);
[PATCH] copySafeNodes(dirtyDocument.input(), clean.input());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.baseElement());
[PATCH] SafeNodes(dirtyDocument.header(), clean.header());
[PATCH] copySafeNodes(dirtyDocument.html(), clean.xml());
[PATCH] copySafeNodes(dirtyDocument.element(), clean.body());
[PATCH] cloneSafeNodes(dirtyDocument.head(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.prependElement());
[PATCH] SafeNodes(dirtyDocument.elements(), clean.elements());
[PATCH] addSafeNodes(dirtyDocument.head(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.indent(), clean.body());
[PATCH] SafeNodes(dirtyDocument.xml(), clean.xml());
[PATCH] copySafeNodes(dirtyDocument.head(), clean.first());
[PATCH] copySafeNodes(dirtyDocument.documentElement(), clean.element());
[PATCH] copySafeNodes(dirtyDocument.elem(), clean.elem());
[PATCH] copySafeNodes(dirtyDocument.css(), clean.css());
[PATCH] copySafeNodes(dirtyDocument.empty(), clean.head());
[PATCH] copySafeNodes(dirtyDocument.items(), clean.elements());
[PATCH] CopySafeNodes(dirtyDocument.head(), clean.body());
[PATCH] copySafeNodes(dirtyDocument.baseUri(), clean.header());
[PATCH] copySafeNodes(dirtyDocument.documentElement(), clean.root());
