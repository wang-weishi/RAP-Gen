[PATCH] sb.append('>');
[PATCH] sb.append('>'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">;"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">;");
[PATCH] sb.append('>'); _anchorType.toCanonical(sb);
[PATCH] sb.append(_anchorType.toCanonical()); sb.append('>');
[PATCH] sb.append(">"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">>"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">:"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(','); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">;"); _anchorType.toCanonical(sb);
[PATCH] sb.append(">="); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); _anchorType.toCanonical().append(sb);
[PATCH] sb.append(">."); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">>;"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); return sb.toString();
[PATCH] sb.append('>'); sb.append(_anchorType.buildCanonicalName());
[PATCH] sb.append('>'); tmp.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); StringBuilder.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); this.baseType.toCanonical();
[PATCH] sb.append(">/"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(':'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(_anchorType.toCanonical()); sb.append(">;");
[PATCH] sb.append>'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); _anchorType.toCanonical();
[PATCH] sb.append("> :"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append("'>"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); e.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); _anchorType.toCanonical() = sb;
[PATCH] sb.append(">)"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); ++sb.append(_anchorType.toCanonical());
[PATCH] sb.append('> '); sb.append(_anchorType.toCanonical());
[PATCH] sb.append(">;"); sb.append(getAnchorName());
[PATCH] sb.append>(')'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append("->"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); sb.append(_AnchorType.toCanonical());
[PATCH] sb.append(>'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); _anchorType.toCanonical().append = sb;
[PATCH] sb.append('>'); sb.append(_ anchorType.toCanonical());
[PATCH] sb.append(">;"); sb.append(buildCanonicalName());
[PATCH] sb.append('?'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append("?>"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); sb.append(_anchorType. toCanonical());
[PATCH] sb.append(">\""); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('/'); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); super.buildCanonicalName();
[PATCH] sb.append('>'); appendCanonicalName(_anchorType.toCanonical());
[PATCH] sb.append('>'); charAt(sb.length() - 1);
[PATCH] sb.append('>'); return _anchorType.toCanonical();
[PATCH] sb.append("></"); sb.append(_anchorType.toCanonical());
[PATCH] sb.append('>'); sb.append(getContentType().toCanonical());
[PATCH] sb.append('>'); sb.append(_anchorType).toCanonical());
[PATCH] sb.append('>'); sb.append(_anchorType._toCanonical());
[PATCH] sb.append(">;"); sb.append(getContentType().toCanonical());
[PATCH] sb.append('>'); sb.append(_anchorType.toCanonical()); }
[PATCH] sb.append('>');, _anchorType.toCanonical());
[PATCH] sb.append(">;"); return sb.toString();
[PATCH] sb.append(">;"); this.baseType.toCanonical();
[PATCH] sb.append('>'); sb._anchorType.toCanonical();
[PATCH] sb.append('>'); sb.append(getAnchorName());
[PATCH] sb.append(); sb.append('>');
[PATCH] sb.append('>'); sb.append(buildCanonicalName());
[PATCH] sb.append('>'); + _anchorType.toCanonical();
[PATCH] sb.append(">;"); super.buildCanonicalName();
[PATCH] sb.append(-1); sb.append('>');
[PATCH] sb.append('>'); throw new IllegalStateException("");
[PATCH] sb.append(); sb.append(">;");
[PATCH] sb.append(">>");
[PATCH] sb.append('>'); return sb.join();
[PATCH] sb.append('>'); throw new IllegalArgumentException("");
[PATCH] sb.append(">");
[PATCH] sb.append(">');
[PATCH] sb.append('>');
[PATCH] sb.append(">.");
[PATCH] sb.append().append('>');
[PATCH] sb.append('>'); }
[PATCH] sb.append('>'); break;
[PATCH] sb.append('>;');
[PATCH] sb.append(">;\n");
[PATCH] sb.append('>'); continue;
[PATCH] sb.append(">;"); }
[PATCH] sb.append(">)");
[PATCH] sb.append(">>;");
[PATCH] sb.append(">)>");
[PATCH] sb.append(">\"");
[PATCH] sb.append(">/");
[PATCH] sb.append('>');
[PATCH] sb.append(>');
[PATCH] sb.append('>');
[PATCH] sb.append>');
[PATCH] sb.append('> ');
[PATCH] sb.append(">'");
[PATCH] sb.append(',');
[PATCH] sb.append("'>');
[PATCH] sb.append(']');
[PATCH] sb.append('?');
[PATCH] sb.append("'>");
[PATCH] sb.append>();
