[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\0': sb.append("\\0"); break;
[PATCH] case '\t': sb.append("\\t"); break;
[PATCH] case '\f': sb.append("\\f"); break;
[PATCH] case '\"': sb.append("\\0"); break;
[PATCH] case '\r'': sb.append("\\r"); break;
[PATCH] case '\c': sb.append("\\c"); break;
[PATCH] case '\n': sb.append("\\n"); break;
[PATCH] case '\R': sb.append("\\r"); break;
[PATCH] case '\e': sb.append("\\e"); break;
[PATCH] case '\a': sb.append("\\a"); break;
[PATCH] case '\1': sb.append("\\1"); break;
[PATCH] case '\d': sb.append("\\d"); break;
[PATCH] case '\"': sb.append("\\1"); break;
[PATCH] case '\r' : sb.append("\\r"); break;
[PATCH] case '\u': sb.append("\\u"); break;
[PATCH] case '\b': sb.append("\\b"); break;
[PATCH] case '\""': sb.append("\\0"); break;
[PATCH] case '\T': sb.append("\\t"); break;
[PATCH] case '\A': sb.append("\\A"); break;
[PATCH] case '\r': sb.append("\\R"); break;
[PATCH] case '\m': sb.append("\\m"); break;
[PATCH] case '\i': sb.append("\\i"); break;
[PATCH] case '\p': sb.append("\\p"); break;
[PATCH] case '\0'': sb.append("\\0"); break;
[PATCH] case '\\': sb.append("\\0"); break;
[PATCH] case '\'': sb.append("\\0"); break;
[PATCH] case '\o': sb.append("\\o"); break;
[PATCH] case '\r' ': sb.append("\\r"); break;
[PATCH] case '\v': sb.append("\\v"); break;
[PATCH] case '\true': sb.append("\\true"); break;
[PATCH] case '\F': sb.append("\\f"); break;
[PATCH] case '\5': sb.append("\\5"); break;
[PATCH] case '\"': sb.append("\\\""); break;
[PATCH] case '\"': sb.append("\\f"); break;
[PATCH] case '\n'': sb.append("\\n"); break;
[PATCH] case '\\': sb.append("\\\\"); break;
[PATCH] case '\8': sb.append("\\8"); break;
[PATCH] case '\E': sb.append("\\e"); break;
[PATCH] case '\x': sb.append("\\x"); break;
[PATCH] case '\"': sb.append("\\""); break;
[PATCH] case '\"\0': sb.append("\\0"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\t'': sb.append("\\t"); break;
[PATCH] case '\".': sb.append("\\0"); break;
[PATCH] case '\"': sb.append("\\e"); break;
[PATCH] case '\"': sb.append("\\i"); break;
[PATCH] case '\3': sb.append("\\3"); break;
[PATCH] case '\g': sb.append("\\g"); break;
[PATCH] case '\"': sb.append("\\t"); break;
[PATCH] case '\s': sb.append("\\s"); break;
[PATCH] case '\U': sb.append("\\u"); break;
[PATCH] case '\"\r': sb.append("\\r"); break;
[PATCH] case '\"': sb.append("\\n"); break;
[PATCH] case '\h': sb.append("\\h"); break;
[PATCH] case '\ 0': sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\\\0"); break;
[PATCH] case '\"': sb.append("\\true"); break;
[PATCH] case '\"\t': sb.append("\\t"); break;
[PATCH] case '\r':' sb.append("\\r"); break;
[PATCH] case '\""': sb.append("\\\""); break;
[PATCH] case '\r': sb.append("\\ r"); break;
[PATCH] case '\\0': sb.append("\\0"); break;
[PATCH] case '\$': sb.append("\\$"); break;
[PATCH] case '\w': sb.append("\\w"); break;
[PATCH] case '\null': sb.append("\\null"); break;
[PATCH] case '\000': sb.append("\\000"); break;
[PATCH] case '\"\f': sb.append("\\f"); break;
[PATCH] case '\C': sb.append("\\c"); break;
[PATCH] case '\"': sb.append("\\null"); break;
[PATCH] case '\"': sb.append("\\d"); break;
[PATCH] case '\"': sb.append("\\>"); break;
[PATCH] case '\"'': sb.append("\\"'); break;
[PATCH] case '\"'': sb.append("\\\""); break;
[PATCH] case '\S': sb.append("\\s"); break;
[PATCH] case '\H': sb.append("\\h"); break;
[PATCH] case '\4': sb.append("\\4"); break;
[PATCH] case '\ r': sb.append("\\r"); break;
[PATCH] case '\\"': sb.append("\\0"); break;
[PATCH] case '\ f': sb.append("\\f"); break;
[PATCH] case '\'t': sb.append("\\t"); break;
[PATCH] case '\"': sb.append("\\u"); break;
[PATCH] case '\ref': sb.append("\\ref"); break;
[PATCH] case '\z': sb.append("\\z"); break;
[PATCH] case '\"': sb.append("\\r"); break;
[PATCH] case '\\': sb.append("\\\\0"); break;
[PATCH] case '\y': sb.append("\\y"); break;
[PATCH] case '\%': sb.append("\\%"); break;
[PATCH] case '\r': sb.append("\\n"); break;
[PATCH] case '\re': sb.append("\\r"); break;
[PATCH] case '\false': sb.append("\\false"); break;
[PATCH] case '\Z': sb.append("\\z"); break;
[PATCH] case '\NULL': sb.append("\\null"); break;
[PATCH] case '\04': sb.append("\\04"); break;
[PATCH] case '\'': sb.append("\\0"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\0': sb.append("\\0"); continue;
[PATCH] case '\0': sb.append("\\0"); break;
[PATCH] case '\t': sb.append("\\t"); break;
[PATCH] case '\f': sb.append("\\f"); break;
