[PATCH] case '\r'': sb.append("\\r"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\r' : sb.append("\\r"); break;
[PATCH] case '\f': sb.append("\\f"); break;
[PATCH] case '\r' ': sb.append("\\r"); break;
[PATCH] case '\\': sb.append("\\\\"); break;
[PATCH] case '\n': sb.append("\\n"); break;
[PATCH] case '\c': sb.append("\\c"); break;
[PATCH] case '\r':' sb.append("\\r"); break;
[PATCH] case '\n'': sb.append("\\n"); break;
[PATCH] case '\r'': sb.append("\\R"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\r': sb.append("\\R"); break;
[PATCH] case '\t': sb.append("\\t"); break;
[PATCH] case '\n' : sb.append("\\n"); break;
[PATCH] case '\r' : sb.append("\\R"); break;
[PATCH] case '\e': sb.append("\\e"); break;
[PATCH] case '\"': sb.append("\\>"); break;
[PATCH] case '\"': sb.append("\\\""); break;
[PATCH] case '\r'': sb.append("\\r"); continue;
[PATCH] case '\r"': sb.append("\\r"); break;
[PATCH] case '\b': sb.append("\\b"); break;
[PATCH] case '\r' : sb.append("\\r"); continue;
[PATCH] case '\d': sb.append("\\d"); break;
[PATCH] case '\r': sb.append("\\r"); continue;
[PATCH] case '\r\\': sb.append("\\r"); break;
[PATCH] case '\a': sb.append("\\a"); break;
[PATCH] case '\r': sb.append("\\\\"); break;
[PATCH] case '\u': sb.append("\\u"); break;
[PATCH] case '\r'): sb.append("\\r"); break;
[PATCH] case '\r'': sb.append("\\ r"); break;
[PATCH] case '\r' => sb.append("\\r"); break;
[PATCH] case '\n': sb.append("\\n"); break;
[PATCH] case '\r']': sb.append("\\r"); break;
[PATCH] case '\r'': sb.append("\\\\"); break;
[PATCH] case '\r', sb.append("\\r"); break;
[PATCH] case '\r'": sb.append("\\r"); break;
[PATCH] case '\r': sb.append("\\ r"); break;
[PATCH] case '\w': sb.append("\\w"); break;
[PATCH] case '\o': sb.append("\\o"); break;
[PATCH] case '\R': sb.append("\\r"); break;
[PATCH] case '\r' ', sb.append("\\r"); break;
[PATCH] case '\r' ': sb.append("\\R"); break;
[PATCH] case '\r\'': sb.append("\\r"); break;
[PATCH] case '\r'': sb.append("\\r"); return;
[PATCH] case '\i': sb.append("\\i"); break;
[PATCH] case '\p': sb.append("\\p"); break;
[PATCH] case '\r'', sb.append("\\r"); break;
[PATCH] case '\m': sb.append("\\m"); break;
[PATCH] case '\r:'': sb.append("\\r"); break;
[PATCH] case '\t'': sb.append("\\t"); break;
[PATCH] case '\\': sb.append("\\>"); break;
[PATCH] case '\\': sb.append("\\u"); break;
[PATCH] case '\r' : sb.append("\\\\"); break;
[PATCH] case '\r":"': sb.append("\\r"); break;
[PATCH] case quote': sb.append("\\\""); break;
[PATCH] case '\r' : sb.append("\\r"); return;
[PATCH] case '\r_': sb.append("\\r"); break;
[PATCH] case '\r' : sb.append("\\ r"); break;
[PATCH] case '\r": sb.append("\\r"); break;
[PATCH] case '\""': sb.append("\\\""); break;
[PATCH] case '\c': sb.append("\\\\"); break;
[PATCH] case '\r:': sb.append("\\r"); break;
[PATCH] case '\r'': sb.append("\\r"); break;
[PATCH] case '\r' : return sb.append("\\r");
[PATCH] case '\r'"': sb.append("\\r"); break;
[PATCH] case '\\': sb.append("\\\""); break;
[PATCH] case '\r: sb.append("\\r"); break;
[PATCH] case '\"': sb.append("\\1"); break;
[PATCH] case '\r't': sb.append("\\r"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\r': sb.append("\\r"); return;
[PATCH] case '\r' = sb.append("\\r"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '"': sb.append("\\\""); break;
[PATCH] case '\"': sb.append("\\\\"); break;
[PATCH] case '\'': sb.append("\\\'"); break;
[PATCH] case '\h': sb.append("\\h"); break;
[PATCH] case '\\'': sb.append("\\\\"); break;
[PATCH] case '\\': sb.append("\\c"); break;
[PATCH] case '\1': sb.append("\\1"); break;
[PATCH] case '\'': sb.append("\\\\"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\r's': sb.append("\\r"); break;
[PATCH] case '\A': sb.append("\\A"); break;
[PATCH] case '\@': sb.append("\\@"); break;
[PATCH] case '\s': sb.append("\\s"); break;
[PATCH] case '\rB': sb.append("\\r"); break;
[PATCH] case '\r' ': sb.append("\\r"); continue;
[PATCH] case '\r'': sb.append("\\r"); break();
[PATCH] case '"': sb.append("\\\""); break;
[PATCH] case '\r': return sb.append("\\r");
[PATCH] case '\\": sb.append("\\\\"); break;
[PATCH] case '\r'.append("\\r"); break;
[PATCH] case '"': sb.append("\\\\"); break;
[PATCH] case quote': return sb.append("\\\"");
[PATCH] case '\\': sb.append("\\\\"); break;
[PATCH] case '\r' : return"\\r";
[PATCH] case '\\': return sb.append("\\\\");
[PATCH] case '\r' :"\\r"); break;
