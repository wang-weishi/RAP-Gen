[PATCH] clone.classNames = classNames();
[PATCH] clone.classNames =(Set)classes.clone();
[PATCH] clone.classNames =(Set)classNames.clone();
[PATCH] clone.classes =(Set)classNames.clone();
[PATCH] clone.classNames =(Set)clazz.clone();
[PATCH] clone.classNames =(Set)attributes.clone();
[PATCH] clone.classNames =(Set)getClasses().clone();
[PATCH] clone.classNames =ClassesUtilities.deepClone(classes);
[PATCH] clone.classNames = new HashSet(classes);
[PATCH] clone.classNames = ClassUtil.deepClone(classes);
[PATCH] clone.classNames = getClassName();
[PATCH] clone.classNames =(Set)classNameMap.clone();
[PATCH] clone.classNames =(Set)getClasses();
[PATCH] clone.classNames();
[PATCH] clone.classNames = new LinkedHashSet(classes);
[PATCH] clone.classNames = getClassNames();
[PATCH] clone.classNames = classes;
[PATCH] clone.classNames = new LinkedHashSet(getClasses());
[PATCH] clone.classNames = new LinkedHashSet(getClassNames());
[PATCH] clone.classNames =(Set)getClass().clone();
[PATCH] clone.classNames =(Set)properties.clone();
[PATCH] clone.classNames =(Set)className.clone();
[PATCH] clone.classNames = ClassUtils.deepClone(classes);
[PATCH] clone.classNames =(Set)clones.clone();
[PATCH] clone.classNames =(Set)classNameList.clone();
[PATCH] clone.classNames =(Set)classNameCache.clone();
[PATCH] clone.classes =(Set)classes.clone();
[PATCH] clone.classNames = ReflectUtils.deepClone(classes);
[PATCH] clone.classes =(Set)clonedClasses.clone();
[PATCH] clone.classes =(Set)attributes.clone();
[PATCH] clone.classNames =(Set)Classnames.clone();
[PATCH] clone.classNames =ClassUtil.deepClone(classes);
[PATCH] clone.classNames =(Set)attrs.clone();
[PATCH] clone.classNames =(Set)classNameMapping.clone();
[PATCH] clone.classNames =(Set)getClassName().clone();
[PATCH] clone.classes =(Set)clazz.clone();
[PATCH] clone.classNames = copyClasses();
[PATCH] clone.classNames = className();
[PATCH] clone.classes = ClassUtil.deepClone(classes);
[PATCH] clone.classes = ClassesUtilities.deepClone(classes);
[PATCH] clone.classNames = className().split("\\s+");
[PATCH] clone.classNames =(Set)cssClasses.clone();
[PATCH] clone.classes =ClassesUtilities.deepClone(classes);
[PATCH] clone.classNames =CLASS_NAMES;
[PATCH] clone.classNames = new HashSet(getClassNames());
[PATCH] clone.classNames = new HashSet(getClasses());
[PATCH] clone.classes =(Set)getClasses().clone();
[PATCH] clone.classNames =(Set)getClassNames();
[PATCH] clone.classNames = ClassUtil.copy(classes);
[PATCH] clone.classNames = collectClasses(clone.classNames);
[PATCH] clone.classNames = getClassLoader().getClassNames();
[PATCH] clone.classNames = new TreeSet(classes);
[PATCH] clone.classNames =(Set<Class>)getClasses();
[PATCH] clone.classNames = new HashSet(className);
[PATCH] clone.className =(Set)classNames.clone();
[PATCH] clone.classNames =ClassesUtilities.copy(classes);
[PATCH] clone.classNames = new LinkedHashSet(getClassName());
[PATCH] clone.classNames = new ClassNames(classes);
[PATCH] clone.classNames = ClassInfo.getClasses(getClass());
[PATCH] clone.classNames = new LinkedHashSet();
[PATCH] clone.classNames = ClassesUtilities.copy(classes);
[PATCH] clone.classNames = new LinkedHashSet(className);
[PATCH] clone.classNames = new HashSet();
[PATCH] clone.classNames =ClassesUtilities.deepClone(className);
[PATCH] clone.classes = classNames();
[PATCH] clone.classNames = classNames;
[PATCH] clone.classNames =(Set)super.classNames;
[PATCH] clone.classes = classes.clone();
[PATCH] clone.classes = ClassNames.copyOf(classes);
[PATCH] clone.classNames = classes();
[PATCH] clone.attributes =(Attributes)attributes.clone();
[PATCH] clone.classNames = ClassUtil.deepClone(className);
[PATCH] clone.classNames = getClasses();
[PATCH] clone.classNames = cloneClasses();
[PATCH] clone.classNames = classes.clone();
[PATCH] clone.classNames = new java.util.ArrayList();
[PATCH] clone.classNames = Collections.emptySet();
[PATCH] clone.classes = new HashSet(classNames);
[PATCH] clone.classNames = getClass().getName();
[PATCH] clone.classNames = className().clone();
[PATCH] clone.classNames = toArray(classes);
[PATCH] clone.classNames = CLASS_NAMES;
[PATCH] clone.classNames =CLASSNAMES;
[PATCH] clone.classNames = clonedClasses();
[PATCH] clone.classNames = classNameList();
[PATCH] clone.classNames = getClassNameSet();
[PATCH] clone.classNames = toArray();
[PATCH] clone.classNames = getClassNameList();
[PATCH] clone.classNames = clonedClasses;
[PATCH] clone.classNames = collectClasses();
[PATCH] clone.classNames =classNameList();
[PATCH] clone.classNames =ClassNames();
[PATCH] clone.classes = copyClasses();
[PATCH] clone.classes();
[PATCH] clone.classNames =classes;
[PATCH] clone.classes = cloneClasses();
[PATCH] clone.classes = getClassName();
[PATCH] clone.classNames = attributes;
[PATCH] clone.classes = getClassNames();
[PATCH] clone.classNames = names();
