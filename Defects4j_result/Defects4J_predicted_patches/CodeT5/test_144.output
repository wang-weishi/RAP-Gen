[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == GETprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == _node;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == callprop;
[PATCH] boolean isOverride =!t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addProp;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == this;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == createJSType;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == setprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == null;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == node;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == prop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == get prop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addExpr;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == GETPROP;
[PATCH] boolean isOverride = t.inGlobalScope() &&parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addOp;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == dprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == Getprop;
[PATCH] boolean isOverride = t.inScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobal scope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == n;
[PATCH] boolean isOverride = t.InGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t. inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == removeProp;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == removeprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride =t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inModule() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN&& parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == mprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == call;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN &&parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == assign;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addElem;
[PATCH] boolean isOverr = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == g2;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getfirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == 'prototype';
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == matchGetprop;
[PATCH] Boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == child;
[PATCH] boolean isoverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getProp;
[PATCH] boolean isOverride = t.inGlobalscope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = this.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == obj;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == ref;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprops;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == putprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == putProp;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == p;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == transform;
[PATCH] boolean isOverride = t.inglobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == name;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() &&Parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inModuleScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = c.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == deleteprop;
[PATCH] boolean isOverride = t.inExternScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == f;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == createAssign;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == traverse;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == _prop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == createEntry;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == checkprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == joinInfo;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() ==Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = n.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop);
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == readprop;
[PATCH] boolean isDeprecated = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getOneChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addRef;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == return;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == resolveAssign;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == config;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getobj;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == reference;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == createJSDocInfo;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == hit;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == c;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == group;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == list;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == cloneNode;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == mangleProperty;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == matchGetProp;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == postfixExpression;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addStrictMark;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addstr;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop,
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == mangle;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addJSType;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addStr;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addStrictDeclaration;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop ;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == addJSDocInfo;
