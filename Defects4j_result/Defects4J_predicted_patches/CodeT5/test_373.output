[PATCH] axis = axis.restrictByNotNullOrUndefined();
[PATCH] axis = axis.clone();
[PATCH] axis = checkAxis(axis);
[PATCH] axis = axis.getValue();
[PATCH] axis = axis.getCategoryAxis();
[PATCH] axis =(CategoryAxis)axis.clone();
[PATCH] axis = axis.getDomainAxis();
[PATCH] axis = axis.copy();
[PATCH] axis = axis.toDomainAxis();
[PATCH] axis = validateAxis(axis);
[PATCH] axis = _fixAxis(axis);
[PATCH] axis = normaliseCategoryAxis(axis);
[PATCH] axis = ensureDomainAxis(axis);
[PATCH] axis = axis.withDomainAxis(this);
[PATCH] axis = ensureCategoryAxis(axis);
[PATCH] axis = this.fixDomainAxis(axis);
[PATCH] axis = axis.ancestor();
[PATCH] axis = axis.iterateDomainAxis(this);
[PATCH] axis = plot.getDomainAxis(axis);
[PATCH] axis = transform(axis);
[PATCH] axis = normaliseAxis(axis);
[PATCH] axis = axis.trimByVisibility();
[PATCH] axis = drawSharedDomainAxis(axis);
[PATCH] axis = Axis.valueOf(axis);
[PATCH] axis = Util.getCategoryAxis(axis);
[PATCH] axis = chart.getDomainAxis(axis);
[PATCH] axis = axis.capitalizeDomainAxis();
[PATCH] axis = makeCategoryAxis(axis);
[PATCH] axis = axis.getAncestor(2);
[PATCH] axis = axis.withStandardTickUnits();
[PATCH] axis = addDomainAxis(axis);
[PATCH] axis = >= null? axis : null;
[PATCH] axis = selectCategoryAxis(axis);
[PATCH] axis = makeDomainAxis(axis);
[PATCH] axis = _valueAxis(axis);
[PATCH] axis = axis.value();
[PATCH] axis = axis.withAxis(this);
[PATCH] axis = toDomainAxis(axis);
[PATCH] axis = axis.childInstance();
[PATCH] axis = axis.getVisibleDomainAxis();
[PATCH] axis = handleCategoryAxis(axis);
[PATCH] axis = normalizeAxis(axis);
[PATCH] axis = axis.deepClone();
[PATCH] axis = axis.dereference();
[PATCH] axis = axis.getParent();
[PATCH] axis = lookDomainAxis(axis);
[PATCH] axis = fixDomainAxis(axis);
[PATCH] axis = selectCategoryAxis(axis, true);
[PATCH] axis = axis.childInstance(this);
[PATCH] axis = normaliseDomainAxis(axis);
[PATCH] axis = calculateDomainAxis(axis);
[PATCH] axis = visitCategoryAxis(axis);
[PATCH] axis = wrapDomainAxis(axis);
[PATCH] axis = axis.trim();
[PATCH] axis = axis.notNull();
[PATCH] axis = axis.trimDomainAxis();
[PATCH] axis = checkDomainAxis(axis);
[PATCH] axis = this.domainAxis.clone();
[PATCH] axis = axis.removeAllAnnotations();
[PATCH] axis = createDomainAxis(axis);
[PATCH] axis = axis.notNullDomainAxis();
[PATCH] axis = axis.resolve(this);
[PATCH] axis = adjustAxis(axis, false);
[PATCH] axis = axis.darker();
[PATCH] axis.removeChangeListener(this);
[PATCH] axis = convertCategoryAxis(axis);
[PATCH] axis = axis.invalidateRangeAxis();
[PATCH] axis = checkAxis(axis, false);
[PATCH] axis.checkAxis(this);
[PATCH] axis = axis.withDomainAxis(true);
[PATCH] axis = ensureAxis(axis);
[PATCH] axis = axis.withStandardDomainAxis();
[PATCH] axis = axis.flatten(this);
[PATCH] axis = adjustAxis(axis, true);
[PATCH] axis = checkAxis(axis, true);
[PATCH] axis = axis.toInstance();
[PATCH] axis = axis.replaceAll(",");
[PATCH] axis = adjustAxis(axis);
[PATCH] axis = testAxis(axis);
[PATCH] axis = axis.notNullCategoryAxis();
[PATCH] axis = axis.inverse();
[PATCH] axis = axis.withDomainAxis();
[PATCH] axis = axis.getClass().getAlpha();
[PATCH] axis = axis.value(this);
[PATCH] axis = convertAxis(axis);
[PATCH] axis.validate(this);
[PATCH] axis = axis.invalidateAxis();
[PATCH] axis = axis.toString();
[PATCH] axis = verifyAxis(axis);
[PATCH] axis = axis.trimByPosition();
[PATCH] axis = axis.render(this);
[PATCH] axis = axis.getLabel(this);
[PATCH] axis = translate(axis);
[PATCH] axis = selectCategoryAxis(axis, false);
[PATCH] axis =(CategoryAxis)axis.copy();
[PATCH] axis = axis.getClass().getComponentType();
[PATCH] axis = axis.parent();
[PATCH] axis
);
;
