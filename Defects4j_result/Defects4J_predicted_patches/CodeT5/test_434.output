[PATCH] rawJsString = rawJsString.trim();
[PATCH] rawJsString = cleanRawJsString(rawJsString);
[PATCH] rawJsString = normaliseJsString(rawJsString);
[PATCH] rawJsString = normaliseWhitespace(rawJsString);
[PATCH] rawJsString = cleanInput(rawJsString);
[PATCH] rawJsString = removeWhitespace(rawJsString);
[PATCH] rawJsString = removeLeadingZeroes(rawJsString);
[PATCH] rawJsString = stripLeadingZeroes(rawJsString);
[PATCH] rawJsString = removeTrailingZeroes(rawJsString);
[PATCH] rawJsString = normalizeQuotedString(rawJsString);
[PATCH] rawJsString = StringUtils.deleteWhitespace(rawJsString);
[PATCH] rawJsString = escapeHtmlChars(rawJsString);
[PATCH] rawJsString = cleanRawJsString();
[PATCH] rawJsString = cleanSource(rawJsString);
[PATCH] rawJsString = replaceWhitespace(rawJsString);
[PATCH] rawJsString = normalizeLeadingZeroes(rawJsString);
[PATCH] Validate.isTrue(rawJsString!= null);
[PATCH] rawJsString = normaliseLeadingZeroes(rawJsString);
[PATCH] rawJsString = stripTrailingZeroes(rawJsString);
[PATCH] rawJsString = cleanQuotedString(rawJsString);
[PATCH] Validate.notNull(rawJsString);
[PATCH] rawJsString = valueToString(rawJsString);
[PATCH] rawJsString = replaceEscapes(rawJsString, false);
[PATCH] rawJsString = normalizeRawJsString(rawJsString);
[PATCH] rawJsString = replaceEscapes(rawJsString, true);
[PATCH] rawJsString = cleanValue(rawJsString);
[PATCH] rawJsString = removeComments(rawJsString);
[PATCH] Preconditions.checkNotNull(rawJsString);
[PATCH] rawJsString = replaceEscapes(rawJsString);
[PATCH] rawJsString = adjustRawJsString(rawJsString);
[PATCH] rawJsString = normaliseQuotedString(rawJsString);
[PATCH] rawJsString = replaceLeadingZeroes(rawJsString);
[PATCH] rawJsString = cleanLeadingZeroes(rawJsString);
[PATCH] rawJsString = replaceEscapes(rawJsString, null);
[PATCH] rawJsString = removeTrailingQuotes(rawJsString);
[PATCH] rawJsString = removeEscapes(rawJsString);
[PATCH] rawJsString = removeQuotes(rawJsString);
[PATCH] rawJsString = validateRawJsString(rawJsString);
[PATCH] rawJsString = convertToString(rawJsString);
[PATCH] rawJsString = stripWhitespace(rawJsString);
[PATCH] rawJsString = cleanStringValue(rawJsString);
[PATCH] rawJsString = rawJsString. trim();
[PATCH] rawJsString = Validate.notEmpty(rawJsString);
[PATCH] rawJsString = normaliseEscaping(rawJsString);
[PATCH] rawJsString = addEscapes(rawJsString);
[PATCH] rawJsString = normalizeHtmlChars(rawJsString);
[PATCH] rawJsString = parseRawJsString(rawJsString);
[PATCH] rawJsString = cleanLineBreak(rawJsString);
[PATCH] rawJsString = discardWhitespace(rawJsString);
[PATCH] rawJsString = cleanOutput(rawJsString);
[PATCH] rawJsString = rawJsString.trim().toLowerCase();
[PATCH] rawJsString = normaliseRawJsString(rawJsString);
[PATCH] rawJsString = StringUtils.clean(rawJsString);
[PATCH] rawJsString = convertRawJsString(rawJsString);
[PATCH] rawJsString = normaliseHtmlChars(rawJsString);
[PATCH] Preconditions.checkState(rawJsString!= null);
[PATCH] rawJsString = ignoreWhitespace(rawJsString);
[PATCH] rawJsString = StringUtils.removeWhitespace(rawJsString);
[PATCH] rawJsString = cleanDeclaration(rawJsString);
[PATCH] checkState(!rawJsString.isEmpty());
[PATCH] rawJsString = unwrapNode(rawJsString);
[PATCH] rawJsString = cleanHtmlChars(rawJsString);
[PATCH] rawJsString = cleanJsonString(rawJsString);
[PATCH] Validate.notEmpty(rawJsString);
[PATCH] checkState(rawJsString!= null);
[PATCH] rawJsString = cleanJavaScriptString(rawJsString);
[PATCH] rawJsString = setJsString(rawJsString);
[PATCH] rawJsString = cleanCssString(rawJsString);
[PATCH] rawJsString = unwrapHtmlChars(rawJsString);
[PATCH] rawJsString = getValue(rawJsString);
[PATCH] rawJsString = cleanPrefix(rawJsString);
[PATCH] Preconditions.checkArgument(rawJsString!= null);
[PATCH] rawJsString = cleanParameters(rawJsString);
[PATCH] rawJsString = excludeWhitespace(rawJsString);
[PATCH] rawJsString = cleanWhitespace(rawJsString);
[PATCH] rawJsString = normalizeXmlChars(rawJsString);
[PATCH] rawJsString = getRawJsString(rawJsString);
[PATCH] rawJsString = mapToString(rawJsString);
[PATCH] rawJsString = removeLeadingWhitespace(rawJsString);
[PATCH] rawJsString = normaliseComments(rawJsString);
[PATCH] rawJsString = normalizeWhitespace(rawJsString);
[PATCH] rawJsString = strEscape(rawJsString);
[PATCH] rawJsString = collapseWhitespace(rawJsString);
[PATCH] rawJsString = stripComments(rawJsString);
[PATCH] rawJsString = transform(rawJsString);
[PATCH] rawJsString = clean(rawJsString);
[PATCH] rawJsString = replaceEscapes(rawJsString,"");
[PATCH] rawJsString = jsString.trim();
[PATCH] rawJsString = cleanRawJsString(rawJSString);
[PATCH] rawJsString = replaceEscapes(rawJsString, '-');
[PATCH] rawJsString = replaceEscapes(rawJsString, '"');
[PATCH] rawJsString = replaceWhitespace(rawJsString, false);
[PATCH] rawJsString = replaceWhitespace(rawJsString, true);
[PATCH] rawJsString = cleanParsedRawJsString();
[PATCH] rawJsString = replaceEscapes(rawJsString,'');
[PATCH] validateState();
[PATCH] clearPrefix();
[PATCH] checkState();
[PATCH] verifyState();
[PATCH] ;
