[PATCH] int indexOfDot = namespace.indexOf('.');
[PATCH] int indexOfDot = providedNames.indexOf('.');
[PATCH] int indexOfDot = namespaces.indexOf('.');
[PATCH] int indexOfDot = prefixNs.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('.');
[PATCH] int indexOfDot = parent.indexOf('.');
[PATCH] int indexOfDot = name.indexOf('.');
[PATCH] int indexOfDot = providedNames.indexOf(namespace);
[PATCH] int indexOfDot = namespace.lastIndexOf('.');
[PATCH] int indexOfDot = getNamespace().indexOf('.');
[PATCH] int indexOfDot = NAMESPACE.indexOf('.');
[PATCH] int indexOfDot =namespace.indexOf('.');
[PATCH] int indexOfDot = prefixns.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf(' '.');
[PATCH] int indexOfDot = selector.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('..');
[PATCH] int indexOfDot = namespace.indexOf('.");
[PATCH] int indexOfDot = expectedNames.indexOf('.');
[PATCH] int indexOfDot = prefixNS.indexOf('.');
[PATCH] int indexOfDot = firstModule.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf(".js");
[PATCH] int indexOfDot = ns.indexOf('.');
[PATCH] int indexOfDot = suffix.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf(':');
[PATCH] int indexOfDot = lowercaseNames.indexOf(namespace);
[PATCH] int indexOfDot = parent.getIndexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('/');
[PATCH] int indexOfDot = groupGraph.indexOf(namespace);
[PATCH] int indexOfDot = namespace.indexOf('.\n');
[PATCH] int indexOfDot = namespace.indexOf(',');
[PATCH] int indexOfDot = namespacedNames.indexOf('.');
[PATCH] int indexOfDot = expectedName.indexOf('.');
[PATCH] int indexOfDot = wildcard.indexOf('.');
[PATCH] int indexOfDot = moduleGraph.indexOf(namespace);
[PATCH] int indexOfDot = namespaces.indexOf(namespace);
[PATCH] int indexOfDot = currentModule.indexOf('.');
[PATCH] int indexOfDot = constructorName.indexOf('.');
[PATCH] int indexOfDot = path.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('!');
[PATCH] int indexOfDot = scopeRoot.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf(".');
[PATCH] intindexOfDot = namespace.indexOf('.');
[PATCH] int indexOfDot =Namespace.indexOf('.');
[PATCH] int indexOfDot = classGraph.indexOf(namespace);
[PATCH] int indexOfDot = namespace.indexOf('.js');
[PATCH] int indexOfDot = lowercaseNames.indexOf('.');
[PATCH] int indexOfDot = findIndexOf(namespace);
[PATCH] int indexOfDot = requiredNames.indexOf('.');
[PATCH] int indexOfDot = findIndexOf('.', namespace);
[PATCH] int indexOfDot = className.indexOf('.');
[PATCH] int indexOfDot = NAMESPACES.indexOf(namespace);
[PATCH] int indexOfDot =(namespace.indexOf('.');
[PATCH] int indexOfDot = givenNames.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('/');
[PATCH] int indexOfDot = requiredNames.indexOf(namespace);
[PATCH] int indexOfDot =Namespace.indexOf(namespace);
[PATCH] int indexOfDot = explicitModule.indexOf('.');
[PATCH] int indexOfDot = NAMESPACES.indexOf('.');
[PATCH] int indexOfDot = pattern.indexOf('.');
[PATCH] int indexOfDot = directory.indexOf('.');
[PATCH] int indexOfDot = prefixNames.indexOf('.');
[PATCH] int indexOfDot = arrayIndexOf('.', namespace);
[PATCH] int indexOfDot = namespace.index('.');
[PATCH] int indexOfDot = wildcardName.indexOf('.');
[PATCH] int indexOfDot = stringNodes.indexOf('.');
[PATCH] int indexOfDot = originalName.indexOf('.');
[PATCH] int indexOfDot = category.indexOf('.');
[PATCH] int indexOfDot = namespaceURI.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf(':');
[PATCH] int indexOfDot = names.indexOf('.');
[PATCH] int indexOfDot = Namespace.indexOf(namespace);
[PATCH] int indexOfDot = regexp.indexOf('.');
[PATCH] int lastIndexOfDot = namespace.indexOf('.');
[PATCH] int indexDot = namespace.indexOf('.');
[PATCH] int indexOfDot = group.indexOf('.');
[PATCH] int indexOfDot = require.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf(';');
[PATCH] int indexOfDot = '\\'.indexOf(namespace);
[PATCH] int indexOfDot = namespace.find('.');
[PATCH] int indexOfDot = str.indexOf('.');
[PATCH] int indexOfDot = expression.indexOf('.');
[PATCH] int indexOfDot =(namespace.indexOf('.'));
[PATCH] int indexOfDot = namespace.indexOf(".prototype");
[PATCH] int indexOfDot = operator.indexOf('.');
[PATCH] int indexOfDot = injector.indexOf(namespace);
[PATCH] int indexOfDot = findIndex(namespace);
[PATCH] int indexOfDot = namespace.IndexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('\\');
[PATCH] int indexOfDot = functionName.indexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('');
[PATCH] int indexOfDot = iterator.indexOf('.');
[PATCH] int indexOfDot = key.indexOf('.');
[PATCH] int indexOfDot = System.getProperty(namespace);
[PATCH] int indexOfDot = lowerThan(namespace);
[PATCH] int indexOfDot = findIndexOf('.');
[PATCH] int indexOfDot = streamIndexOf('.');
[PATCH] int indexOfDot = namespace.indexOf('.js");
[PATCH] int indexOfDot = namespace.indexOf('.');
);
;
