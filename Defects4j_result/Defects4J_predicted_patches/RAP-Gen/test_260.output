[PATCH] _assertSubTypes(rawClass, Map.class);
[PATCH] _assertSubclass(rawClass, Map.class);
[PATCH] _assertSubtype(rawClass, Map.class);
[PATCH] rawClass = rawClass.getGenericSuperclass();
[PATCH] Preconditions.checkNotNull(rawClass);
[PATCH] _assertRawClass(rawClass);
[PATCH] _assertSubtypes(rawClass, Map.class);
[PATCH] _assertSimpleType(rawClass, Map.class);
[PATCH] _validate(rawClass, Map.class);
[PATCH] _assertSubClass(rawClass, Map.class);
[PATCH] _assertSubTypes(rawClass, HashMap.class);
[PATCH] _assertNotAssignable(rawClass, Map.class);
[PATCH] _checkInvalidType(rawClass, Map.class);
[PATCH] _validateType(rawClass, Map.class);
[PATCH] _assertCollectionType(rawClass, Map.class);
[PATCH] _checkNotNull(rawClass);
[PATCH] _assertSubTypes(mapClass, Map.class);
[PATCH] Preconditions.checkArgument(rawClass.isArray());
[PATCH] _validate(rawClass);
[PATCH] _checkRawClass(rawClass);
[PATCH] _assertAssignableFrom(rawClass, Map.class);
[PATCH] _assertSubTypes(rawClass, null);
[PATCH] _assertSubTypes(rawClass, Collection.class);
[PATCH] rawClass = rawClass.getSuperclass();
[PATCH] _assertSubtype(rawClass, HashMap.class);
[PATCH] _assertCollection(rawClass, Map.class);
[PATCH] _assertMapType(rawClass, Map.class);
[PATCH] _assertRawClass(rawClass, Map.class);
[PATCH] _assertSubTypes(Map.class, rawClass);
[PATCH] ClassUtil.checkRawClass(rawClass);
[PATCH] _assertSubclass(rawClass, HashMap.class);
[PATCH] _configureParser();
[PATCH] checkRawClass(rawClass);
[PATCH] _assertSubType(rawClass, Map.class);
[PATCH] _checkSimpleType(rawClass, Map.class);
[PATCH] rawClass = rawClass.getRawClass();
[PATCH] _assertSubtype(rawClass, MapType.class);
[PATCH] _assertSubclass(rawClass, Collection.class);
[PATCH] _assertSubTypes(rawClass, ArrayList.class);
[PATCH] _assertAbstract(rawClass, Map.class);
[PATCH] _assertSubTypes(rawClass, MapType.class);
[PATCH] _assertSubtype(rawClass, Collection.class);
[PATCH] _assertBaseType(rawClass, Map.class);
[PATCH] _validateRawClass(rawClass);
[PATCH] _assertSubclasses(rawClass, Map.class);
[PATCH] _assertSubTypes(rawClass, List.class);
[PATCH] _assertSubTypes(rawClass, Object.class);
[PATCH] ClassUtil.checkNotNull(rawClass);
[PATCH] rawClass = rawClass.getComponentType();
[PATCH] _assertSubType(rawClass, Map.class);
[PATCH] _assertInterface(rawClass, Map.class);
[PATCH] _assertMultiType(rawClass, Map.class);
[PATCH] _assertNoTypes(rawClass, Map.class);
[PATCH] _checkCollectionType(rawClass, Map.class);
[PATCH] _assertSubclass(rawClass, MapType.class);
[PATCH] _assertSubtype(mapClass, Map.class);
[PATCH] _validate(rawClass, HashMap.class);
[PATCH] _assertSubtype("Map.class", rawClass);
[PATCH] _checkState(rawClass.isArray());
[PATCH] _validator.validate(rawClass, Map.class);
[PATCH] _validate(rawClass, null);
[PATCH] _assertImpl(rawClass, Map.class);
[PATCH] _assertSubclass("Map.class", rawClass);
[PATCH] _assertPresent(rawClass, Map.class);
[PATCH] _assertSubtype(Map.class, rawClass);
[PATCH] checkState(rawClass.isArray());
[PATCH] final Class<?> subType = rawClass.getComponentType();
[PATCH] _Validate.notNull(rawClass);
[PATCH] Validate.notNull(rawClass);
[PATCH] rawClass = _fixAccess(rawClass);
[PATCH] _assertSubTypes(rawClass, _unknownType);
[PATCH] _assertNotNull(rawClass);
[PATCH] _assertSubtypeResolver(rawClass, null);
[PATCH] assertRawClass(rawClass);
[PATCH] _assertSubtype("Map type", rawClass);
[PATCH] validate(rawClass, Map.class);
[PATCH] _assertNotNull(rawClass);
[PATCH] _validateType(rawClass);
[PATCH] _verifyValueInstantiator(rawClass);
[PATCH] _initWithTypeCache(rawClass);
[PATCH] _assertDesc(rawClass, false);
[PATCH] _configure(rawClass);
[PATCH] _assertMapType(rawClass);
[PATCH] checkNotNull(rawClass);
[PATCH] _assertNoTypes(rawClass);
[PATCH] _checkInvalidType(rawClass);
[PATCH] _validateClass(rawClass);
[PATCH] _assertCollection(rawClass);
[PATCH] _checkClass(rawClass);
[PATCH] ClassUtil.validate(rawClass);
[PATCH] _checkSimpleType();
[PATCH] _assertEmpty(rawClass);
[PATCH] _checkCollection(rawClass);
[PATCH] _checkInvalidType("");
[PATCH] _configureTypeCache();
[PATCH] _typeCache.clear();
[PATCH] _setCodec(this);
[PATCH] _assertOpen();
[PATCH] _checkInstantiator();
[PATCH] _initForTypeCache();
