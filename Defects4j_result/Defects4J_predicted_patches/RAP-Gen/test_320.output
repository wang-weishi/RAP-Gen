[PATCH] super();
[PATCH] super(in);
[PATCH] Preconditions.checkNotNull(checksum);
[PATCH] super(-1);
[PATCH] super(in.getClass());
[PATCH] super(checksum.getDigest());
[PATCH] Preconditions.checkNotNull(in);
[PATCH] super(-1, -1);
[PATCH] super(checksum.getInputName());
[PATCH] super("");
[PATCH] super(checksum.getKey());
[PATCH] super(checksum.getData());
[PATCH] super(checksum.getValue());
[PATCH] super(checksum.getInputStream());
[PATCH] super(checksum.getSourceName());
[PATCH] super(in, checksum.getValue());
[PATCH] super(checksum.getInput());
[PATCH] super(checksum.getInputPath());
[PATCH] super(new FileInputStream(in)) {
[PATCH] super(checksum.getSum());
[PATCH] synchronized(in.getClass()){
[PATCH] super(checksum.getBytes());
[PATCH] super(new FileInputStream(in)));
[PATCH] super(new String[] { });
[PATCH] super(in.getPath());
[PATCH] super(in, 0.0);
[PATCH] super(checksum.getHash());
[PATCH] super(checksum.getChecksumType());
[PATCH] super(new Object[] { });
[PATCH] super(checksum.getMethod());
[PATCH] super(-1, -1);
[PATCH] super(checksum.getOutput());
[PATCH] super(checksum.getFinalValue());
[PATCH] super(In.class);
[PATCH] super(checksum.getChecksum());
[PATCH] super(); this.method = null;
[PATCH] super(( String[])null);
[PATCH] super(checksum.getHeaderDigest());
[PATCH] super(checksum.getOutputName());
[PATCH] super(new Object[] { });
[PATCH] super(in, 0.02);
[PATCH] super(in, checksum);
[PATCH] super(in, 0.1);
[PATCH] super(checksum.getInputCode());
[PATCH] super(in, -1);
[PATCH] super(checksum.getSummary());
[PATCH] super(in, null);
[PATCH] super(checksum.getText());
[PATCH] super(InStream.class);
[PATCH] super(in.getLength());
[PATCH] super(0, 1);
[PATCH] super(in, false);
[PATCH] super(in.getBytes());
[PATCH] super(); verify(in);
[PATCH] Validate.notNull(checksum);
[PATCH] super(checksum.getCode());
[PATCH] super(( InputStream)in);
[PATCH] super(( File)null);
[PATCH] super(InputStream.class);
[PATCH] super(CRC.getValue());
[PATCH] super(0);
[PATCH] super(0, 0);
[PATCH] super(in).reset();
[PATCH] super(null, null);
[PATCH] super(12, 12);
[PATCH] super(-1.0);
[PATCH] super(IN, null);
[PATCH] super(1, 1);
[PATCH] super(); checksum.reset();
[PATCH] super(); check(in);
[PATCH] super(in, true);
[PATCH] super(SOURCE_FILE);
[PATCH] super(checksum.getName());
[PATCH] super(in.getName());
[PATCH] super(in){
[PATCH] super(_inputStream);
[PATCH] super(IN);
[PATCH] before(in);
[PATCH] super("", 0);
[PATCH] super('-');
[PATCH] super(null);
[PATCH] super(12);
[PATCH] super(file);
[PATCH] super(1);
[PATCH] super(out);
[PATCH] super(); init();
[PATCH] super().reset();
[PATCH] super(-1;
[PATCH] super(); super();
[PATCH] super() {
[PATCH] super(checksum);
[PATCH] after(in);
[PATCH] super(""));
[PATCH] initialise();
[PATCH] this();
[PATCH] super()){
[PATCH] reset();
[PATCH] setValidate();
[PATCH] init();
[PATCH] super();
