[PATCH] _tableInfo.clear();
[PATCH] _tableInfo.reset();
[PATCH] _doRehash();
[PATCH] Arrays.sort(_hashArea);
[PATCH] Arrays.fill(_hashArea, 0);
[PATCH] _tableInfo = _tableInfo.get();
[PATCH] _initTables(TableInfo.TABLE_INFO);
[PATCH] _tableInfo.compareAndSet(this, null);
[PATCH] Arrays.fill(_hashArea, _hashArea);
[PATCH] _tableInfo.compareAndSet(null, 0);
[PATCH] _tableInfo.set(null, null);
[PATCH] initTables(TableInfo.TABLE_INFO);
[PATCH] Arrays.fill(_hashArea);
[PATCH] _tableInfo = _createTableInfo();
[PATCH] _tableInfo.compareAndSet(null, null);
[PATCH] _tableInfo.set(this, null);
[PATCH] _tableInfo.get().reset();
[PATCH] _initializeTables(TableInfo.TABLE_INFO);
[PATCH] _tableInfo = _TableInfo.newInstance();
[PATCH] Arrays.copyOf(_hashArea, 0);
[PATCH] _createTables(TableInfo.TABLE_INFO);
[PATCH] _tableInfo.compareAndSet(this, 0);
[PATCH] _tableInfo = _TableInfo.clone();
[PATCH] _tableInfo.compareAndSet(this, false);
[PATCH] initTables(DEFAULT_T_SIZE);
[PATCH] _initTables(DEFAULT_T_SIZE);
[PATCH] _tableInfo.setNewHash(true);
[PATCH] _doRehash(); _tableInfo.clear();
[PATCH] _tableInfo = AtomicReference.newInstance();
[PATCH] _tableInfo.setNewHash(false);
[PATCH] _tableInfo = new AtomicReference(this);
[PATCH] _tableInfo = Collections.emptyMap();
[PATCH] _tableInfo.setLen(0);
[PATCH] _tableInfo.compareAndSet(this, true);
[PATCH] _hashSize = _hashArea.length;
[PATCH] _tableInfo.setTableInfo(null);
[PATCH] _tableInfo.compareAndSet(this);
[PATCH] _tableInfo.clear(); fireTableInfo();
[PATCH] _tableInfo.set(this);
[PATCH] _Arrays.sort(_hashArea);
[PATCH] _tableInfo.set(TableInfo.NEW);
[PATCH] _tableInfo.set(this, false);
[PATCH] _tableInfo.checkTableInfo();
[PATCH] _initTables(DEFAULT_TABLE_INFO);
[PATCH] _clock = _clock.getClock();
[PATCH] _tableInfo = _tableInfo.getParent();
[PATCH] Arrays.fill(_hashArea, null);
[PATCH] initTables(DEFAULT_TABLE_INFO);
[PATCH] _tableInfo.setCount(0);
[PATCH] _tableInfo = _TableInfo.get();
[PATCH] _tableInfo.set(this, true);
[PATCH] _parent.rehash();
[PATCH] Arrays.sort(_hashArea, _hashArea);
[PATCH] Arrays.sort(_hashArea);
[PATCH] Arrays.fill(_hashArea,"");
[PATCH] _tableInfo.set(null, false);
[PATCH] _tableInfo = _newTableInfo();
[PATCH] _rehash();
[PATCH] Arrays.fill(_hashArea, false);
[PATCH] _hashSize = _calcHashSize();
[PATCH] _tableInfo.setChanged(true);
[PATCH] _initTables(TABLE_INFO);
[PATCH] Collections.sort(_hashArea);
[PATCH] _crc.reset();
[PATCH] _size = _calcSize();
[PATCH] _tables.clear();
[PATCH] _initTables(null);
[PATCH] _reset();
[PATCH] _tableInfo.set(null);
[PATCH] fireTableInfoChanged();
[PATCH] _parent.mergeTables(this);
[PATCH] _size = _calculateSize();
[PATCH] _tableInfo = null;
[PATCH] _tableInfo._reset();
[PATCH] _tableInfo.rehash();
[PATCH] _initTables(false);
[PATCH] _unshareTables();
[PATCH] _tableInfo.init();
[PATCH] _initTables(true);
[PATCH] _freeTableInfo();
[PATCH] _tableInfo.remove();
[PATCH] _TableInfo.clear();
[PATCH] _TableInfo.reset();
[PATCH] _initTableInfo();
[PATCH] _calcHash();
[PATCH] reset();
[PATCH] _tableInfo._clear();
[PATCH] _tableInfo.get();
[PATCH] _createTableInfo();
[PATCH] _initializeTableInfo();
[PATCH] fireTableDataChanged();
[PATCH] _freeTables();
[PATCH] _doFindPointers();
[PATCH] initTableInfo();
[PATCH] _zeroes();
[PATCH] initTables(true);
[PATCH] _parent.reset();
[PATCH] _parent.hash();
[PATCH] _checkTableInfo();
[PATCH] fireTableChanged();
