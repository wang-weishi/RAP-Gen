[PATCH] gen.writeObject(_value);
[PATCH] gen.writeString(_value);
[PATCH] gen.writeValue(_value);
[PATCH] gen.writeJsonString(_value);
[PATCH] gen.writeNumber(_value);
[PATCH] gen.writeObject(_value);
[PATCH] gen.writeString(_value);
[PATCH] gen.writeRaw(_value);
[PATCH] super.serialize(gen, ctxt);
[PATCH] gen.write(_value);
[PATCH] _value.serialize(gen, ctxt);
[PATCH] gen.writeAsString(_value);
[PATCH] gen.writeArray(_value);
[PATCH] gen.writeText(_value);
[PATCH] gen.writeFieldName(_name);
[PATCH] gen.writeJsonString(_value);
[PATCH] gen.writeJson(_value);
[PATCH] gen.writeUTF(_value);
[PATCH] gen.writeFieldName(_key);
[PATCH] gen.write_string(_value);
[PATCH] gen.writeLiteral(_value);
[PATCH] throw ctxt.mappingException("");
[PATCH] gen.writeToString(_value);
[PATCH] gen.write String(_value);
[PATCH] gen.writeRaw(_value);
[PATCH] gen.writeSimpleObject(_value);
[PATCH] throw ctxt.serializationException("");
[PATCH] gen.writeContext(_value, ctxt);
[PATCH] Gen.writeString(_value);
[PATCH] gen.writeInt(_value);
[PATCH] gen.writeJsonString(_name);
[PATCH] gen.writeNull(_value);
[PATCH] gen.writeAsObject(_value);
[PATCH] Gen.writeObject(_value);
[PATCH] throw ctxt.instantiationException("");
[PATCH] ctxt.serialize(_value, gen);
[PATCH] delegate.serialize(gen, ctxt);
[PATCH] gen.writeAsObject(_value);
[PATCH] gen.writeFloat(_value);
[PATCH] gen.writeUTF8(_value);
[PATCH] gen.writeOut(_value);
[PATCH] gen.writeObject(_value);
[PATCH] gen.writeBoolean(_value);
[PATCH] gen.writeData(_value);
[PATCH] gen.writeEndObject();
[PATCH] gen.writeEntity(_value);
[PATCH] gen.writestring(_value);
[PATCH] gen.writeBinary(_value);
[PATCH] gen.writeValues(_value);
[PATCH] gen.write_value(_value);
[PATCH] gen.writeInt(_value);
[PATCH] gen.writeScalarValue(_value);
[PATCH] gen.writeJsonString(_key);
[PATCH] gen.writeString(_key);
[PATCH] gen.writeBase(_value);
[PATCH] gen.writeFieldName(_value);
[PATCH] serialize(_value, gen, ctxt);
[PATCH] gen.write Object(_value);
[PATCH] sb.writeObject(_value);
[PATCH] gen.writetoString(_value);
[PATCH] gen.defaultSerialize(_value);
[PATCH] throw ctxt.serializerException("");
[PATCH] sb.writeString(_value);
[PATCH] gen.write writeObject(_value);
[PATCH] gen.writeCharacters(_value);
[PATCH] gen.writeString(_value);
[PATCH] gen.writenull(_value);
[PATCH] gen.write(serialize(_value));
[PATCH] throw new JsonGenerationException("");
[PATCH] gen.writeJSON(_value);
[PATCH] gen.writePath(_value);
[PATCH] gen.writeDecimal(_value);
[PATCH] gen.writetext(_value);
[PATCH] gen.writeLong(_value);
[PATCH] gen.writeString(_name);
[PATCH] gen.writeStream(_value);
[PATCH] gen.writeJson(_value);
[PATCH] gen.writeserial(_value);
[PATCH] gen.writeLine(_value);
[PATCH] gen.writeJsonString(getAsString());
[PATCH] gen.writeJsonString(getText());
[PATCH] gen.writeStr(_value);
[PATCH] gen.writePrimitive(_value);
[PATCH] gen.defaultSerialize(_value);
[PATCH] gen.writeDouble(_value);
[PATCH] gen.write(_value);
[PATCH] gen.writeDate(_value);
[PATCH] gen.writeJsonObject(_value);
[PATCH] gen.writeable(_value);
[PATCH] gen.writeStringValue(_value);
[PATCH] gen.writeContent(_value);
[PATCH] gen.writePaint(_value);
[PATCH] gen.writeName(_value);
[PATCH] gen.serialize(_value);
[PATCH] gen.writeJsonString(getPaint());
[PATCH] ser.serialize(gen, ctxt);
[PATCH] (( JsonDeserializer<Object>)_value);
[PATCH] gen.writeJsonString(getPath());
[PATCH] (( JsonSerializer<Object>)_value);
[PATCH] _value.getClass().getWriter();
