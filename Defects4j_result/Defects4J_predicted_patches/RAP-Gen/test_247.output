[PATCH] reader.close();
[PATCH] reader.reset();
[PATCH] reader.skip(0);
[PATCH] reader.copyCurrentStructure(doc);
[PATCH] reader.skip();
[PATCH] reader.release();
[PATCH] reader.skip(1);
[PATCH] reader.setCharset(charset);
[PATCH] reader.seek(0);
[PATCH] charset.decode(reader);
[PATCH] reader.setEncoding(charset);
[PATCH] reader.skip(len);
[PATCH] reader.writeEndObject();
[PATCH] reader.flush();
[PATCH] readCharset(reader, charset);
[PATCH] reader.setCharacterEncoding(charset);
[PATCH] reader.copyCurrentStructure(first);
[PATCH] reader = new InputStreamReader(input);
[PATCH] reader.setLength(0);
[PATCH] reader.copyTo(doc);
[PATCH] input.setCharset(charset);
[PATCH] reader.skip(10);
[PATCH] reader.free();
[PATCH] reader.skip(2);
[PATCH] reader.readLine();
[PATCH] readCharset(charset);
[PATCH] reader.append(charset.name());
[PATCH] writer.setCharset(charset);
[PATCH] readUTF8(reader, charset);
[PATCH] reader.skip(3);
[PATCH] reader.close(); reader = null;
[PATCH] ioContext.setCharset(charset);
[PATCH] readInputStream(reader);
[PATCH] reader = new BufferedReader(reader);
[PATCH] Reader reader = new BufferedReader(reader);
[PATCH] reader.rewind();
[PATCH] reader.readFully(charset);
[PATCH] writer.copyCurrentStructure(reader);
[PATCH] reader.write(doc.body());
[PATCH] reader.readEnd();
[PATCH] reader = new BufferedReader(input);
[PATCH] reader.limit(reader.position());
[PATCH] reader.copyCurrentStructure(comment);
[PATCH] reader.detachFromParent();
[PATCH] reader.skip(index + 1);
[PATCH] reader.read();
[PATCH] reader.finish();
[PATCH] reader.copyCurrentStructure(decl);
[PATCH] reader.writeEndDocument();
[PATCH] reader.clear();
[PATCH] reader.skip(4);
[PATCH] writer.copyCurrentStructure(input);
[PATCH] reader.skip(0, len);
[PATCH] reader.reset(); reader.close();
[PATCH] Reader reader = new InputStreamReader(reader);
[PATCH] readCharset(charset, doc);
[PATCH] reader.writeEndElement();
[PATCH] reader.copyCurrentStructure(this);
[PATCH] charset.reset();
[PATCH] parser.skip(0);
[PATCH] reader.copyInto(doc);
[PATCH] reader.copyCurrentStructure(root);
[PATCH] reader.mark(0);
[PATCH] reader = reader.asReader();
[PATCH] reader = charset.newReader();
[PATCH] reader.skip(offset);
[PATCH] readInputStream(reader, charset);
[PATCH] charset.decode(input);
[PATCH] reader = reader.asParser();
[PATCH] reader.push(charset.name());
[PATCH] reader.readFully(doc);
[PATCH] charset.validate(reader);
[PATCH] reader.dispose();
[PATCH] Reader reader = new InputStreamReader(input);
[PATCH] input.seek(0);
[PATCH] input.skip(0);
[PATCH] setCharset(charset);
[PATCH] reader.append(charset);
[PATCH] reader.write(doc.body);
[PATCH] readInputStream(reader, doc);
[PATCH] reader.skip(9);
[PATCH] parser.skip(reader);
[PATCH] writer.flush();
[PATCH] reader.readAgain();
[PATCH] reader.skip(8);
[PATCH] charset.encode(reader);
[PATCH] readUTF8(reader);
[PATCH] throw new IOException("");
[PATCH] reader.discard();
[PATCH] readReaders(reader);
[PATCH] reader.readFields();
[PATCH] charset.flush();
[PATCH] reader.copyCurrentStructure();
[PATCH] readWhitespace(reader);
[PATCH] readCharset(reader);
[PATCH] reader.freeBuffers();
[PATCH] readContent(reader);
[PATCH] readInput(reader);
[PATCH] input.reset();
[PATCH] input.flush();
