[PATCH] options.closurePass = true;
[PATCH] options.compilerPass = true;
[PATCH] options.deserializationPass = true;
[PATCH] options.inlineVariables = true;
[PATCH] options.externExportsPath = true;
[PATCH] options.injectClosurePrimitives = true;
[PATCH] options.deserializerPass = true;
[PATCH] options.wrapWithClosurePass = true;
[PATCH] options.serializationPass = true;
[PATCH] options.noClosurePass = true;
[PATCH] options.destructuringClosure = true;
[PATCH] options.withClosurePass = true;
[PATCH] options.compilation_level = true;
[PATCH] options.injectClosureprimitives = true;
[PATCH] options.withSyntheticPass = true;
[PATCH] options.closurePass = false;
[PATCH] options.closeClosurePass = true;
[PATCH] options.ClosurePass = true;
[PATCH] options.multiLineBreak = true;
[PATCH] options.advanceClosurePass = true;
[PATCH] options.circular_compiler = true;
[PATCH] options.closeCompilerPasses = true;
[PATCH] options.closeClosurePasses = true;
[PATCH] options.catchCatchBlocks = true;
[PATCH] options.externsPass = true;
[PATCH] options.applyClosurePasses = true;
[PATCH] options.injection_level = true;
[PATCH] options.externExportsPath = false;
[PATCH] options.injectClosurePRimitives = true;
[PATCH] options.anonymousClosurePass = true;
[PATCH] options.cwPass = true;
[PATCH] options.closeClosurePass();
[PATCH] options.expandClosurePasses = true;
[PATCH] options.sideEffects = true;
[PATCH] options.instrumentationPass = true;
[PATCH] options.wrapWithClosure = true;
[PATCH] options.deserialization = true;
[PATCH] options.passPass = true;
[PATCH] options.communicationPass = true;
[PATCH] options.appendClosurePass = true;
[PATCH] options. closurePass = true;
[PATCH] options.expansionPass = true;
[PATCH] options.destructuring = true;
[PATCH] options.prettyPrint = true;
[PATCH] options.mergeClosureprimitives = true;
[PATCH] options.proxyPasses = true;
[PATCH] options.intermediatePass = true;
[PATCH] options.destructor = true;
[PATCH] options.normalizationPass = true;
[PATCH] options.procedurePass = true;
[PATCH] options.wrapperPass = true;
[PATCH] options.closurePass = true;
[PATCH] options.scopePasses = true;
[PATCH] options.declarationPass = true;
[PATCH] options.debugPass = true;
[PATCH] options.doubleClosurePass = true;
[PATCH] options.injectClosure primitives = true;
[PATCH] options.circularPass = true;
[PATCH] options.expandClosureDeclarations = true;
[PATCH] options.multiLinePass = true;
[PATCH] options.wrapPasses = true;
[PATCH] options.closeClosurePass = false;
[PATCH] options.closing_compiler = true;
[PATCH] options.configureCompilerPasses(true);
[PATCH] options.injectionPass = true;
[PATCH] options.processorPass = true;
[PATCH] options.closeClosurePasses = false;
[PATCH] options.wrapOnClosure = true;
[PATCH] options.keepClosurePass = true;
[PATCH] options.bodyPass = true;
[PATCH] options.addClosurePass = true;
[PATCH] Options.closurePass = true;
[PATCH] options.injectVars = true;
[PATCH] options.closurepass = true;
[PATCH] options.sidePass = true;
[PATCH] options.complexPass = true;
[PATCH] options.externExportsPath = null;
[PATCH] options.sideEffect = true;
[PATCH] options.closures = true;
[PATCH] options.causePass = true;
[PATCH] options.closeCompilerPasses = false;
[PATCH] options.injectables = true;
[PATCH] options.deserializationConfig = true;
[PATCH] options.fullyDefined = true;
[PATCH] options.parsingPass = true;
[PATCH] options.closurePass =true;
[PATCH] options.codePass = true;
[PATCH] options.scopePass = true;
[PATCH] options.prettyPrint = false;
[PATCH] options.clearClosurePass();
[PATCH] options.configureCompilerPasses();
[PATCH] options.closeCompilerPass();
[PATCH] options.injectClosurePrimitives = false;
[PATCH] options.debug = true;
[PATCH] options.injectClosureprimitives = false;
[PATCH] options.deserializationConfig = false;
[PATCH] options.configureCompilerPasses(false);
[PATCH] options.compilation_level = false;
[PATCH] options.mergeClosureprimitives = false;
[PATCH] options.closurePass = true; }
