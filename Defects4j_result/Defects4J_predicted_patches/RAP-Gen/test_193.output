[PATCH] throw new IllegalArgumentException("");
[PATCH] throw new IllegalStateException("");
[PATCH] throw new IllegalArgumentException("") :" + invocation.getMethod().getName());
[PATCH] throw new RuntimeException("");
[PATCH] throw new IllegalArgumentException("Mismatch in method:" + invocation.getMethod().getName());
[PATCH] throw new IllegalArgumentException("Argument matchers not found for" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("Unterminated method:" + invocation.getMethod().getName());
[PATCH] new Reporter().cannotMatchVarArgs(invocation.getMethod());
[PATCH] throw new IllegalArgumentException("VarArgs only supported for" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +getMethodDesc());
[PATCH] throw new IllegalArgumentException("Not implemented by" + invocation.getMethod());
[PATCH] throw new UnsupportedOperationException("");
[PATCH] throw new IllegalArgumentException("Preconditions.checkState(indexOfVararg < 0));
[PATCH] throw new IllegalArgumentException("Mismatch in method" + invocation.getMethod().getName());
[PATCH] throw new IllegalArgumentException("Mismatch in method:" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("VarArgs only supported for" +getMethod());
[PATCH] throw new IllegalArgumentException("Matchers not found for" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("This method is not supported");
[PATCH] throw new IllegalArgumentException("Not implemented by" + invocation.getMethod().getName());
[PATCH] throw new IllegalArgumentException("VarArgs should not be possible", invocation.getMethod());
[PATCH] throw new IllegalArgumentException("Mismatch in method" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +"this module");
[PATCH] throw new IllegalArgumentException("You are trying to capture var arguments only once.");
[PATCH] throw new IllegalArgumentException("Only variable arguments allowed to be cloned");
[PATCH] throw new IllegalArgumentException(indexOfVararg +" should not be null.");
[PATCH] throw new IllegalArgumentException("The first argument to capture must not be null.");
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +"a mock");
[PATCH] throw new IllegalArgumentException("VarArgs matchers not implemented by" +"this method");
[PATCH] throw new IllegalArgumentException("This is not implemented by" + invocation.getMethod());
[PATCH] new Reporter().cannotMatchVarArgs(invocation, indexOfVararg);
[PATCH] throw new IllegalArgumentException("VarArgs must not be null.");
[PATCH] throw new IllegalArgumentException("Not supported by" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("") +" argument(index" + indexOfVararg);
[PATCH] throw new IllegalArgumentException("Expectation:" + invocation.getMethod().getName());
[PATCH] throw new IllegalArgumentException("The last argument to capture must not be null.");
[PATCH] throw new IllegalArgumentException("Unterminated method:" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("Mismatch in varArgs method:" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +getMethod());
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +"method");
[PATCH] throw new IllegalArgumentException("Not handled by unstubbed" +"method");
[PATCH] throw new IllegalArgumentException("VarArgs should not be null.");
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +"this class");
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +"any object");
[PATCH] throw new IllegalArgumentException("") +" must not be null.");
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +"an invocation");
[PATCH] throw new IllegalArgumentException("This method is not implemented by" +"anything");
[PATCH] throw new IllegalArgumentException("VarArgs only supported for" +getMethodDesc());
[PATCH] throw new IllegalArgumentException("Only variable arguments allowed to be capture" +"arguments");
[PATCH] throw new RuntimeException("This method is not implemented by" +getMethodDesc());
[PATCH] throw new IllegalArgumentException("VarArgs matchers not found for" + invocation);
[PATCH] throw new IllegalArgumentException("VarArgs matchers not found.");
[PATCH] throw new IllegalArgumentException("Not implemented by" +getMethodDesc());
[PATCH] throw new IllegalArgumentException("") :" + invocation.getMethod());
[PATCH] throw new IllegalArgumentException("VarArgsMatcher should not be null.");
[PATCH] new Reporter().cannotFindVarArgs(indexOfVararg);
[PATCH] new Reporter().cannotContainVarArgs(indexOfVararg);
[PATCH] throw new IllegalArgumentException("Not implemented by" +getMethod());
[PATCH] throw new AnalyzerException("");
[PATCH] throw new IllegalArgumentException("Only variable arguments can be captured once.");
[PATCH] throw new IllegalArgumentException("Only VARARGS are supported.");
[PATCH] new Reporter().cannotMatchVarArgs(indexOfVararg);
[PATCH] throw new IllegalArgumentException("This method is not supported.");
[PATCH] throw new NullPointerException("");
[PATCH] throw new IOException("");
[PATCH] throw new IllegalArgumentException("Only variable arguments allowed to be cloned.");
[PATCH] throw new IllegalArgumentException("The first argument to capture must have one");
[PATCH] throw new IllegalArgumentException("You are trying to capture variable arguments.");
[PATCH] throw new IllegalArgumentException(indexOfVararg +" is not supported");
[PATCH] throw new IllegalArgumentException("Only variable args allowed to be cloned");
[PATCH] throw new IllegalArgumentException("Argument matchers not found for" + invocation);
[PATCH] throw new IllegalArgumentException("VarArgs are not supported");
[PATCH] throw new IllegalArgumentException("Only variable arguments allowed to be capture.");
[PATCH] throw new IllegalArgumentException("Method must not be null.");
[PATCH] throw new IllegalArgumentException("More than one argument expected.");
[PATCH] throw new IndexOutOfBoundsException("");
[PATCH] throw new IllegalArgumentException("VarArgs should not be possible.");
[PATCH] throw new IllegalArgumentException("Only variable arguments allowed between invocations";
[PATCH] throw new JXPathException("");
[PATCH] throw new IllegalArgumentException(indexOfVararg < 0);
[PATCH] throw new IllegalArgumentException("Only variable arguments allowed to be captured");
[PATCH] throw new IllegalArgumentException(indexOfVararg == 0);
[PATCH] throw new IllegalArgumentException("More than one argument expected");
[PATCH] throw new IllegalArgumentException("No arguments to capture.");
[PATCH] throw new IllegalArgumentException("This method only accepts vars");
[PATCH] throw new IllegalArgumentException("Not reachable");
[PATCH] throw new IllegalArgumentException("Only VARARGS are supported");
[PATCH] throw new IllegalArgumentException("Unterminated method");
[PATCH] throw new IllegalArgumentException("There is no argument to capture");
[PATCH] throw new IllegalArgumentException("This is not supported");
[PATCH] throw new IllegalArgumentException("") +" is not supported");
[PATCH] throw new IllegalArgumentException("Not a variable argument");
[PATCH] throw new IllegalArgumentException("VarArgs matchers not supported");
[PATCH] throw new IllegalArgumentException("This method is not implemented");
[PATCH] throw new IllegalArgumentException("VarArgs not supported");
[PATCH] throw new IllegalArgumentException("Unimplemented varargs");
[PATCH] throw new Exception("");
[PATCH] throw new ClassCastException("");
[PATCH] throw new NoSuchElementException("");
[PATCH] throw new IllegalArgumentException("');
);
