[PATCH] tais.reset();
[PATCH] tais.getNextEntry();
[PATCH] tais.mark(signatureLength);
[PATCH] tais.mark();
[PATCH] tais.setNumberOfLinks(1);
[PATCH] tais.setNextEntry(entry);
[PATCH] tais.setSize(signatureLength);
[PATCH] tais.setNextEntry(in);
[PATCH] tais.markNextEntry();
[PATCH] tais.seek(0);
[PATCH] tais.markArchive(signatureLength);
[PATCH] tais.getNextEntry().reset();
[PATCH] tais.nextEntry();
[PATCH] tais.setSize(0);
[PATCH] tais.markArchive(in);
[PATCH] tais.setLength(signatureLength);
[PATCH] tais.createTarInputStream();
[PATCH] tais.markTarInputStream(in);
[PATCH] tais.addAll(in);
[PATCH] tais.seek(signatureLength);
[PATCH] tais.markNextEntry(in);
[PATCH] tais.setNextEntry(null);
[PATCH] tais.getNext();
[PATCH] tais.next();
[PATCH] tais.setTarHeader(in);
[PATCH] tais.addNextEntry(in);
[PATCH] tais.addTarInputStream(in);
[PATCH] tais.setNextEntry(this);
[PATCH] tais.init();
[PATCH] tais.setSignature(signatureLength);
[PATCH] tais.markTar(signatureLength);
[PATCH] tais.parseTarHeader(in);
[PATCH] tais.skip(signatureLength);
[PATCH] tais.setSize(1);
[PATCH] tais.mark(1);
[PATCH] tais.addNextEntry(entry);
[PATCH] tais.setNumberOfLinks(2);
[PATCH] tais.setTarEntry(in);
[PATCH] tais.markTarArchive(in);
[PATCH] tais.markAll(signatureLength);
[PATCH] tais.init(in);
[PATCH] tais.setMarked(true);
[PATCH] tais.markCommits(signatureLength);
[PATCH] tais.createTarStream();
[PATCH] tais.fillIn(in);
[PATCH] tais.markTarStream(in);
[PATCH] tais.putNextEntry(entry);
[PATCH] tais.setEOF(0);
[PATCH] tais.markTar(in);
[PATCH] tais.consume(signatureLength);
[PATCH] tais.skip(0);
[PATCH] tais.writeTarHeader(in);
[PATCH] tais.markAll(true);
[PATCH] tais.setPosition(0);
[PATCH] tais.scan(in);
[PATCH] tais.start();
[PATCH] tais.readTarHeader();
[PATCH] tais.finish();
[PATCH] tais.write(in);
[PATCH] tais.putNextEntry(in);
[PATCH] tais.setSkip(0);
[PATCH] tais.mark(0);
[PATCH] tais.markNextEntry(this);
[PATCH] tais.markAll(false);
[PATCH] tais.setSize(size);
[PATCH] tais.setContents(in);
[PATCH] tais.setChunked(in);
[PATCH] tais.create();
[PATCH] tais.setEOF(false);
[PATCH] tais.addInputStream(in);
[PATCH] tais.reserved(signatureLength);
[PATCH] tais.markAsEOF();
[PATCH] tais.setSize(2);
[PATCH] tais.putNextEntry(this);
[PATCH] tais.findNextEntry();
[PATCH] tais.merge(in);
[PATCH] tais.getTarStream();
[PATCH] tais.markNextEntry(entry);
[PATCH] tais.push(in);
[PATCH] tais.createArchiveInputStream();
[PATCH] tais.append(in);
[PATCH] tais.readNextEntry();
[PATCH] tais.fill(in);
[PATCH] tais.markTarEOF();
[PATCH] tais.seek(1);
[PATCH] tais.markTarOverflow();
[PATCH] tais.add(in);
[PATCH] tais.closeEntry();
[PATCH] tais.skip(1);
[PATCH] tais.markNext();
[PATCH] tais.mark [Delete] [Delete]
[PATCH] tais.markSupported();
[PATCH] tais.rewind();
[PATCH] tais.close();
[PATCH] tais.mark()();
[PATCH] tais.load();
[PATCH] tais.markStart();
[PATCH] tais.fill();
[PATCH] tais.initialize();
[PATCH] tais.run();
