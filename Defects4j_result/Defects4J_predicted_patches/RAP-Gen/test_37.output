[PATCH] MathUtils.checkInfinite(real); MathUtils.checkInfinite(imaginary);
[PATCH] MathUtils.check(real, imaginary);
[PATCH] MathUtils.checkInfinite(real)|| MathUtils.checkInfinite(imaginary);
[PATCH] MathUtils.checkNotNaN(real); MathUtils.checkNotNull(imaginary);
[PATCH] MathUtils.checkNonNaN(real); MathUtils.checkNonNaN(imaginary);
[PATCH] MathUtils.check(real,"Real"); MathUtils.check(imaginary,"Imaginary");
[PATCH] MathUtils.checkInt(real); MathUtils.checkInt(imaginary);
[PATCH] MathUtils.checkReal(real); MathUtils.checkImaginary(imaginary, false);
[PATCH] MathUtils.checkFloat(real); MathUtils.checkFloat(imaginary);
[PATCH] MathUtils.isInfinite(real); MathUtils.checkInfinite(imaginary);
[PATCH] MathUtils.check(rhs.getReal(), rhs.getImaginary());
[PATCH] MathUtils.checkUnsignedShort(real); MathUtils.checkUnsignedShort(imaginary);
[PATCH] real = MathUtils.abs(real); imaginary = MathUtils.abs(imaginary);
[PATCH] MathUtils.checkNaN(real); MathUtils.checkNaN(imaginary);
[PATCH] MathUtils.checkDouble(real); MathUtils.checkDouble(imaginary);
[PATCH] MathUtils.checkZero(real); MathUtils.checkZero(imaginary);
[PATCH] MathUtils.checkInfinite(real); MathUtils.checkInfinite( imaginary);
[PATCH] MathUtils.checkInfinite(rhs.getReal(), rhs.getImaginary());
[PATCH] MathUtils.checkDouble(real)&& Double.isNaN(imaginary);
[PATCH] MathUtils.checkDirection(rhs.getReal(), rhs.getImaginary());
[PATCH] MathUtils.checkRound(real, false); MathUtils.round(imaginary);
[PATCH] MathUtils.checkInfinite(Real); MathUtils.checkInfinite(imaginary);
[PATCH] double real = get(rhs.getReal()); MathUtils.check(real, imaginary);
[PATCH] MathUtils.checkImaginary(rhs.getImaginary(), 0.0);
[PATCH] MathUtils.checkNotNaN(real); MathUtils.checkNotNaN(imaginary);
[PATCH] DoubleUtils.checkInfinite(real); MathUtils.checkInfinite(imaginary);
[PATCH] MathUtils.checkConstant(real); MathUtils.checkConstant(imaginary);
[PATCH] MathUtils.checkOrNaN(real); MathUtils.checkOrNaN(imaginary);
[PATCH] MathUtils.checkInfinite(real); MathUtils.checkOutfinite(imaginary);
[PATCH] DoubleUtils.checkInfinite(real); DoubleUtils.checkInfinite(imaginary);
[PATCH] MathUtils.notInfinite(real); MathUtils.checkNotInfinite(imaginary);
[PATCH] MathUtils.check(this.isInfinite());
[PATCH] MathUtils.checkImaginary(rhs.getReal(), rhs.getImaginary());
[PATCH] MathUtils.checkRound(real); MathUtils.round(imaginary);
[PATCH] MathUtils.checkInfinite(real); MathUtils.checkNegative(imaginary);
[PATCH] checkInfinite(rhs.getReal(), rhs.getImaginary());
[PATCH] MathUtils.checkRadians(real); MathUtils.checkRadians(imaginary);
[PATCH] MathUtils.checkUndefined(real); MathUtils.checkNotNull(imaginary);
[PATCH] MathUtils.checkEquality(real, imaginary);
[PATCH] MathUtils.checkOverflow(real, imaginary);
[PATCH] MathUtils.check(real, imaginary); MathUtils.check(imaginary, NaN);
[PATCH] MathUtils.checkNonNaN(real); MathUtils.checkNotNaN(imaginary);
[PATCH] MathUtils.check(real, imaginary); MathUtils.check(imaginary, null);
[PATCH] MathUtils.checkInfinite(real); MathUtils.checkInfinite(Imaginary);
[PATCH] MathUtils.check(imaginary, 0.0);
[PATCH] if(!rhs.isInfinite()){ throw new IllegalArgumentException(""); }
[PATCH] MathUtils.checkZero(real); MathUtils.checkNaN(imaginary);
[PATCH] MathUtils.checkNotInfinite(real, imaginary);
[PATCH] MathUtils.checkFloat(real); MathUtils.float(imaginary);
[PATCH] MathUtils.toReal(real); MathUtils.toImaginary(imaginary);
[PATCH] MathUtils.checkNonNaN(real); MathUtils.checkNotNull(imaginary);
[PATCH] MathUtils.checkInfinite(this.isInfinite);
[PATCH] MathUtils.checkReal(real); MathUtils.checkImaginary(imaginary, NaN);
[PATCH] MathUtils.check(Real, imaginary);
[PATCH] MathUtils.checkReal(real)|| MathUtils.checkImaginary(imaginary);
[PATCH] MathUtils.checkNaN(real); MathUtils.checkNotNull(imaginary);
[PATCH] MathUtils.checkVector(real); MathUtils.checkVector(imaginary);
[PATCH] MathUtils.checkImaginary(rhs.getImaginary());
[PATCH] MathUtils.checkReal(real); MathUtils.checkImaginary(imaginary, null);
[PATCH] MathUtils.check(imaginary < 0.0);
[PATCH] MathUtils.checkState(this.isInfinite());
[PATCH] MathUtils.check(this.isInfinite, false);
[PATCH] MathUtils.checkReal(real); MathUtils.checkimaginary(imaginary);
[PATCH] MathUtils.checkInfinite(real, false);
[PATCH] MathUtils.check(Complex.isInfinite(rhs));
[PATCH] MathUtils.checkInfinite(real);
[PATCH] MathUtils.checkInfinite(real, imaginary);
[PATCH] MathUtils.checkInfinite(real); MathUtils.checkInfinite(upperBound);
[PATCH] MathUtils.checkEqual(real, imaginary);
[PATCH] MathUtils.checkNegative(real, imaginary);
[PATCH] MathUtils.check(this.isInfinite(), false);
[PATCH] MathUtils.checkUnscaled(real, imaginary);
[PATCH] MathUtils.check(imaginary == 0.0);
[PATCH] MathUtils.checkComplex(real, imaginary);
[PATCH] MathUtils.checkState(isInfinite);
[PATCH] MathUtils.check(0.0, 0.0);
[PATCH] MathUtils.checkImaginary(real, imaginary);
[PATCH] MathUtils.checkEquals(real, imaginary);
[PATCH] MathUtils.check(imaginary, false);
[PATCH] MathUtils.checkEQ(real, imaginary);
[PATCH] MathUtils.checkVector(real, imaginary);
[PATCH] MathUtils.check(imaginary, imaginary);
[PATCH] MathUtils.checkInfinite(real,"Real");
[PATCH] MathUtils.checkSquare(real, imaginary);
[PATCH] MathUtils.checkInRange(real, imaginary);
[PATCH] MathUtils.checkNotInfinite(real, false);
[PATCH] MathUtils.checkMin(real, imaginary);
[PATCH] MathUtils.checkRange(real, imaginary);
[PATCH] MathUtils.checkEps(real, imaginary);
[PATCH] MathUtils.checkNotInfinite(real,"Real");
[PATCH] MathUtils.check(this.isInfinite);
[PATCH] MathUtils.validate(real, imaginary);
[PATCH] MathUtils.verify(real, imaginary);
[PATCH] MathUtils.check(real, imaginary);
[PATCH] MathUtils.check(isInfinite, false);
[PATCH] DoubleUtils.check(real, imaginary);
[PATCH] MathUtils.check(abs, imaginary);
[PATCH] checkInfinite();
[PATCH] negate();
[PATCH] normalize();
