[PATCH] pos += Character.charCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.length(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos)));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pt));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos + pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos));
[PATCH] pos += Character.codePointAt(input, pt);
[PATCH] pos += Character.length(Character.codePointAt(input, pos)) - pt;
[PATCH] pos += Character.length(Character.codePointAt(input, pos), 0);
[PATCH] pos += Character.length(Character.codePointAt(input, pos)) + 1;
[PATCH] pos += Character.size(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pos)) - 1;
[PATCH] pos += 1 + Character.charCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos), 0);
[PATCH] pos += Character.length(Character.codePointAt(input, pos)) * 2;
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos++));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pos)));
[PATCH] pos = pos + Character.charCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.numChars(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pt)) - 1;
[PATCH] pos += Character.chars(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pos + pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pt)));
[PATCH] pos += Character.codePointCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.chars(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.length(Character.codePointAt(input, pos)));
[PATCH] pos += Character.count(Character.codePointAt(input, pt));
[PATCH] pos += Character. charCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.toString(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pos), 1);
[PATCH] pos += Character.byteCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pos + pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos)+ pt);
[PATCH] pos += Character.index(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pt)) + 1;
[PATCH] pos += Character.length(Character.codePointAt(input, pos));
[PATCH] pos += Character.numChars(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.length(Character.codePointAt(input, pos)) * 3;
[PATCH] pos += Character.length(Character.codePointAt(input, pos), 2);
[PATCH] pos += Character.length(Character.codePointAt(input, pt)) * 2;
[PATCH] pos += Character.size(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character. charCount(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.charCount(( char)Character.codePointAt(input, pt));
[PATCH] pos += Character.len(Character.codePointAt(input, pt));
[PATCH] pos += Character.byteCount(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos+pt));
[PATCH] pos += Character.count(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.charCount(Character.codePointAt(input, pt), 0);
[PATCH] pos += Character.length(( char)Character.codePointAt(input, pt));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pos), out);
[PATCH] pos += Character.numerator(Character.codePointAt(input, pt));
[PATCH] pos = pos + Character.length(Character.codePointAt(input, pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos),pt);
[PATCH] pos += Character.charCount(Character.codePointAt(input, ch));
[PATCH] pos += Character.digit(Character.codePointAt(input, pt));
[PATCH] pos += Character.characterCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.toString(Character.codePointAt(input, pos), out);
[PATCH] pos += Character.length(Character.codePointAt(input, pos));
[PATCH] pos += Character.toString(( char)Character.codePointAt(input, pt));
[PATCH] pos += Character.indexToChars(Character.codePointAt(input, pt));
[PATCH] pos +=Character.charCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pt));
[PATCH] pos += 1 + Character.length(Character.codePointAt(input, pt));
[PATCH] pos += Character.lineLength(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos), 1);
[PATCH] pos += Character.lineCount(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.numberToInt(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pos),pt);
[PATCH] pos += Character.length(Character.codePointAt(input, pos), 3);
[PATCH] pos += Character.offsetToChars(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pos++));
[PATCH] pos += Character.isWhitespace(Character.codePointAt(input, pt));
[PATCH] pos += Character.intCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pos));
[PATCH] pos += Character.lineLength(Character.codePointAt(input, pt));
[PATCH] pos += Character.name(Character.codePointAt(input, pt));
[PATCH] pos += Character.size(Character.codePointAt(input, pos)) - pt;
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos * pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pt)));
[PATCH] pos = Character.toChars(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.toString(Character.codePointAt(input, pos), pt);
[PATCH] pos += Character.codePointAt(input, pos + pt);
[PATCH] pos += Character.length(Character.codePointAt(input, pos), len);
[PATCH] pos += Character.remaining(( char)Character.codePointAt(input, pt));
[PATCH] pos += Character.valueOf(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pos)+ pt);
[PATCH] pos += Character.bitCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pt)));
[PATCH] pos +=Character.length(Character.codePointAt(input, pt));
[PATCH] pos += Character.charCount(Character.codePointAt(input, pos), 2);
[PATCH] pos += Character.lineCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.numToInt(Character.codePointAt(input, pt));
[PATCH] pos += Character.numCharCount(Character.codePointAt(input, pt));
[PATCH] pos += Character.toChars(Character.codePointAt(input, pos++));
[PATCH] pos += Character.lastIndexOf(Character.codePointAt(input, pt));
[PATCH] pos += Character.length(Character.codePointAt(input, pt)) * 3;
