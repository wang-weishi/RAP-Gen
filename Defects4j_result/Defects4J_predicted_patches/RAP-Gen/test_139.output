[PATCH] case '\0': sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\\\"); break;
[PATCH] case '\0': sb.append("\\u"); break;
[PATCH] case '\1': sb.append("\\1"); break;
[PATCH] case '\0': sb.append("\\1"); break;
[PATCH] case '\0': sb.append("\\d"); break;
[PATCH] case '\0': sb.append("\\r"); break;
[PATCH] case '\0': sb.append("\\t"); break;
[PATCH] case '\\0': sb.append("\\0"); break;
[PATCH] case '\t': sb.append("\\t"); break;
[PATCH] case '\r': sb.append("\\r"); break;
[PATCH] case '\0': sb.append("\\n"); break;
[PATCH] case '\0': sb.append("\\s"); break;
[PATCH] case '\0': sb.append("\0"); break;
[PATCH] case '\0': sb.append("\\w"); break;
[PATCH] case '\'': sb.append("\\u"); break;
[PATCH] case '\0': sb.append('\\0'); break;
[PATCH] case '\'': sb.append("\\\'"); break;
[PATCH] case '\0': sb.append("\\000"); break;
[PATCH] case '\0': sb.append("\\ 0"); break;
[PATCH] case '\0': sb.append("\\$"); break;
[PATCH] case '\0': sb.append("\\x"); break;
[PATCH] case'\0': sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\W"); break;
[PATCH] case '\\0': sb.append("\\\\"); break;
[PATCH] case '\0': sb.append("\\g"); break;
[PATCH] case '\0': sb.append("\\b"); break;
[PATCH] case '\0':sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\p"); break;
[PATCH] case '\0': sb.append("\\00"); break;
[PATCH] case '\\'': sb.append("\\\\"); break;
[PATCH] case '0': sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\f"); break;
[PATCH] case '\0': sb.append("\\010"); break;
[PATCH] case '\n': sb.append("\\n"); break;
[PATCH] case '\0': sb.append("\\D"); break;
[PATCH] case '\0': sb.append("\\01"); break;
[PATCH] case '\0': sb.append("\\i"); break;
[PATCH] case '\0': sb.append("\\."); break;
[PATCH] case '\0', sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\60"); break;
[PATCH] case '\0': sb.append("\\id"); break;
[PATCH] case '\0': sb.append("\n"); break;
[PATCH] case '\0': sb.append("\\def"); break;
[PATCH] case '\0': sb.append("\\Z"); break;
[PATCH] case '\2': sb.append("\\2"); break;
[PATCH] case '\5': sb.append("\\5"); break;
[PATCH] case '\0': sb.append("\\e"); break;
[PATCH] case '\0': s.append("\\0"); break;
[PATCH] case '\'': sb.append("\\p"); break;
[PATCH] case '\0': sb.append("(\\0"); break;
[PATCH] case '\0': sb.append("\\"); break;
[PATCH] case '\0': sb.append("\\10"); break;
[PATCH] case '\0': sb.append("\\0"); continue;
[PATCH] case '\0': sb.append("\\"); break;
[PATCH] case '\f': sb.append("\\f"); break;
[PATCH] case '\0': sb.append("\\2"); break;
[PATCH] case '\0': sb.append('\\0"); break;
[PATCH] case '\0': sb.append("\\0"); return;
[PATCH] case '\0': sb.append("\\A"); break;
[PATCH] case '\0': sb.append("\\\0"); break;
[PATCH] case '\1': sb.append("\\\\"); break;
[PATCH] case '\a': sb.append("\\a"); break;
[PATCH] case '\0' : sb.append("\\\\"); break;
[PATCH] case '\'': sb.append("\\1"); break;
[PATCH] case '\0': sb.append("\\0");break;
[PATCH] case '\0': sb.append(" \\0"); break;
[PATCH] case '\'': sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\U"); break;
[PATCH] case '\0': sb.append("\\c"); break;
[PATCH] case '\0': sb.append("\\3"); break;
[PATCH] case '\\0': sb.append("\\u"); break;
[PATCH] case '\0': sb.append("\\["); break;
[PATCH] case '\0': sb.append("\\0'); break;
[PATCH] case '\'': sb.append("\\'); break;
[PATCH] case '\0': sb.append("\\\\"); break;
[PATCH] case '\0': sb.append("\\null"); break;
[PATCH] case '\0': sb.append("\\0001"); break;
[PATCH] case '\e': sb.append("\\e"); break;
[PATCH] case '\0": sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\\start"); break;
[PATCH] case '\0': sb.append("\\k"); break;
[PATCH] case '\0': sb.append("\\T"); break;
[PATCH] case '\0': sb.append("\\const"); break;
[PATCH] case '\0': sb.append("\\80"); break;
[PATCH] case '\0': ch.append("\\0"); break;
[PATCH] case '\0': sb.append("\\9"); break;
[PATCH] case '\0': sb.append("\\001"); break;
[PATCH] case '\0': sb.append("\\F"); break;
[PATCH] case '\0': sb.append("\0"); break;
[PATCH] case '\'': sb.append("\\b"); break;
[PATCH] case '\'': sb.append("\\\\"); break;
[PATCH] case ';': sb.append("\\1"); break;
[PATCH] case '#': sb.append("\\0"); break;
[PATCH] case '\\'': sb.append("\\u"); break;
[PATCH] case ']': sb.append("\\0"); break;
[PATCH] case '\0': sb.append("\r"); break;
[PATCH] case '\'': sb.append("\\$"); break;
[PATCH] case '\0': break;
;
