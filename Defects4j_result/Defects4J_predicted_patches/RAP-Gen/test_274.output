[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType, property);
[PATCH] _valueInstantiator.setDelegateDeserializer(delegateDeser);
[PATCH] _delegateDeserializer = withDeserializer(delegateDeser);
[PATCH] _delegateDeserializer = findConvertingDeserializer(ctxt, delegateType, property, delegateDeser);
[PATCH] _valueInstantiator = _valueInstantiator.withDelegateType(delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.createUsingDelegate(ctxt, delegateType);
[PATCH] _delegateDeserializer = _valueInstantiator.getDelegateDeserializer(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.withDelegateDeserializer(delegateDeser);
[PATCH] _valueInstantiator = _valueInstantiator.withDelegate(delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.getDelegate(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.getDelegate();
[PATCH] _delegateDeserializer = createDelegateDeserializer(ctxt, delegateType, property, delegateDeser);
[PATCH] _valueInstantiator = _valueInstantiator.withDelegate(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.getDelegateDeserializer(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.createDelegateDeserializer(ctxt, delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.getValueInstantiator(ctxt.getConfig());
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.createUsingDelegate(ctxt);
[PATCH] _valueInstantiator = _valueInstantiator.getDelegateInstance(ctxt.getConfig());
[PATCH] _delegateDeserializer = findConvertingDeserializer(ctxt, delegateType, property);
[PATCH] _delegateDeserializer = ctxt.findContextualValueDeserializer(delegateType, property);
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType, property.getType());
[PATCH] _valueInstantiator = _valueInstantiator.createDelegate(ctxt, delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.createDelegateDeserializer(ctxt.getConfig());
[PATCH] _delegateDeserializer = findDelegateDeserializer(ctxt, delegateType, property);
[PATCH] _valueInstantiator = _valueInstantiator.getDelegateValue(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.getDelegateType(ctxt.getConfig());
[PATCH] _delegateDeserializer =findDeserializer(ctxt, delegateType, property);
[PATCH] _valueInstantiator = _valueInstantiator.toDelegate(ctxt.getConfig());
[PATCH] _delegateDeserializer = delegateDeser.createContextual(ctxt, property);
[PATCH] _valueInstantiator = _valueInstantiator.createUsingDelegate(ctxt.getConfig());
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType.getRawClass());
[PATCH] _valueInstantiator = _valueInstantiator.createDelegate(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.withDelegate(ctxt, delegateType);
[PATCH] _delegateDeserializer = withDeserializer(ctxt, delegateType, property, delegateDeser);
[PATCH] _valueDeserializer = _valueInstantiator.getDelegateDeserializer(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.withDelegateType(ctxt.getConfig());
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType, property, _valueInstantiator);
[PATCH] _valueInstantiator = _valueInstantiator.withValueDeserializer(delegateDeser);
[PATCH] _valueInstantiator = _valueInstantiator.createDelegateDeserializer(ctxt);
[PATCH] _delegateDeserializer = valueInstantiator.createDelegateDeserializer(ctxt, delegateType, property);
[PATCH] _delegateDeserializer = findValueDeserializer(ctxt, delegateType, property);
[PATCH] _valueInstantiator = _valueInstantiator.withDelegateValue(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.createDelegateType(ctxt.getConfig());
[PATCH] _delegateDeserializer =ctxt.findContextualValueDeserializer(delegateType, property);
[PATCH] _delegateDeserializer = resolveDeserializer(ctxt, delegateType, property, delegateDeser);
[PATCH] _valueInstantiator = _valueInstantiator.setDelegateDeserializer(delegateDeser);
[PATCH] _valueInstantiator = _valueInstantiator.createDelegateInstance(ctxt, delegateType);
[PATCH] _valueInstantiator.setDelegateDeserializer(this, delegateDeser);
[PATCH] _delegateDeserializer = _valueInstantiator.createDelegateDeserializer(ctxt, delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.withDelegateHandler(delegateDeser);
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType, _collectionType.getContentType());
[PATCH] _delegateDeserializer = createUsingDelegate(ctxt, delegateType, property, delegateDeser);
[PATCH] _delegateDeserializer = convertDeserializer(ctxt, delegateType, property, delegateDeser);
[PATCH] _delegateDeserializer = _valueInstantiator.getValueDeserializer(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.asDelegate(ctxt.getConfig());
[PATCH] _delegateDeserializer = _valueInstantiator.createUsingDelegate(ctxt, delegateType);
[PATCH] _delegateDeserializer = context.findContextualValueDeserializer(delegateType, property);
[PATCH] _valueInstantiator = _valueInstantiator.withdelegateDeserializer(delegateDeser);
[PATCH] _delegateDeserializer = valueInstantiator.getDelegateDeserializer(ctxt.getConfig());
[PATCH] _delegateDeserializer = findConvertingDelegateDeserializer(ctxt, delegateType, property);
[PATCH] _delegateDeserializer = valueInstantiator.createUsingDelegate(ctxt, delegateType, property);
[PATCH] _valueInstantiator = _valueInstantiator.restrictByNotNullOrUndefined();
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType, property, valueInstantiator);
[PATCH] _valueInstantiator = _valueInstantiator.createDelegateInstance(ctxt.getConfig());
[PATCH] _valueInstantiator = _valueInstantiator.getValueInstantiator();
[PATCH] _delegateDeserializer = createContextual(ctxt, delegateType, property, delegateDeser);
[PATCH] _delegateDeserializer = valueInstantiator.createDelegateDeserializer(ctxt, delegateType);
[PATCH] _delegateDeserializer = withDeserializer(delegateDeser, _valueInstantiator);
[PATCH] _delegateDeserializer = createDelegateDeserializer(ctxt, delegateType, property);
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType, _collectionType);
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType, property); _result = null;
[PATCH] _valueInstantiator = _valueInstantiator.withResolved(delegateType);
[PATCH] _delegateDeserializer = Context.deserializerForDelegate(delegateType, delegateDeser);
[PATCH] _valueInstantiator = _valueInstantiator.createUsingDelegate(delegateType, ctxt);
[PATCH] _delegateDeserializer = findDeserializer(ctxt, delegateType.getRawClass(), property);
[PATCH] _delegateDeserializer = _valueInstantiator.getDelegateDeserializer(_collectionType, delegateType);
[PATCH] _delegateDeserializer = Context.deserializerInstance(delegateType, _valueInstantiator);
[PATCH] _delegateDeserializer =(JsonDeserializer<Object>)_valueInstantiator.getDelegateDeserializer();
[PATCH] _valueInstantiator = _valueInstantiator.withDelegate(ctxt);
[PATCH] _delegateDeserializer = resolveDeserializer(ctxt, delegateType, property, _valueInstantiator);
[PATCH] _valueInstantiator = _valueInstantiator.withCreator(ctxt);
[PATCH] _valueInstantiator = _valueInstantiator.createDelegate();
[PATCH] _valueDeserializer = findDeserializer(ctxt, delegateType, property);
[PATCH] _valueInstantiator = _valueInstantiator.withCreator(delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.createDelegate(ctxt);
[PATCH] _valueInstantiator = _valueInstantiator.detachFromDelegate();
[PATCH] _valueInstantiator = _valueInstantiator.toDelegate();
[PATCH] _valueInstantiator = _valueInstantiator.createDelegateContext(ctxt, delegateType);
[PATCH] _delegateDeserializer = valueInstantiator.createUsingDelegate(ctxt, delegateType);
[PATCH] _valueInstantiator = _valueInstantiator.withDelegate(_collectionType, delegateType);
[PATCH] _delegateDeserializer = Context.deserializerInstance(delegateType, property);
[PATCH] _delegateDeserializer = findConvertingDeserializer(ctxt, delegateType, property, null);
[PATCH] _setDelegateDeserializer(delegateDeser, _valueInstantiator);
[PATCH] _valueInstantiator.setDelegateType(delegateType);
[PATCH] _delegateDeserializer = findDeserializer(( Class<Object>)delegateType, property);
[PATCH] _delegateDeserializer = createDelegateDeserializer(ctxt, delegateType);
[PATCH] _delegateDeserializer = findConvertingDeserializer(ctxt, delegateType, property, true);
[PATCH] _valueInstantiator.setDelegateDeserializer(delegateDeser); return this;
[PATCH] _valueInstantiator = _valueInstantiator.asDelegate();
