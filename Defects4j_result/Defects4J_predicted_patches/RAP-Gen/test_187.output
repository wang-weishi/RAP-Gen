[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData), false);
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData), false));
[PATCH] return StringUtils.newStringUTF8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData, false)));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData), true));
[PATCH] return StringUtils.newString(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData, true));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData), true);
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData), null);
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData, null));
[PATCH] return StringUtils.newStringUtf8(decodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUTF8(encodeBase64(binaryData), false);
[PATCH] return StringUtils.newStringU8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData)));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData,"ascii"));
[PATCH] return StringUtils.newStringHex8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringBasic(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData, false),
[PATCH] return StringUtils.newStringToString(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData)+"=");
[PATCH] return StringUtils.newStringu8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData)).trim();
[PATCH] return String.newStringUtf8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString(encodeBase64(binaryData), false);
[PATCH] return StringUtils.newStringUTF8(encodeBase64(binaryData), false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binData, false));
[PATCH] return StringUtils.newStringAsUTF8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringAsString(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString(encodeBase64(binaryData, false), null);
[PATCH] return StringUtils.newStringHEX(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString2(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString(encodeBase64(binaryData), false));
[PATCH] return StringUtils.newStringUtf8(encodedBase64(binaryData, false));
[PATCH] return StringUtils.newStringArray(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringAscii(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringAsArray(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf7(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringEscaped8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringHexString(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData),"ascii");
[PATCH] return StringUtils.newStringFromBase64(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUTF8(encodeBase64(binaryData, false)));
[PATCH] return StringUtils.newStringFromByteArray(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringutf8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString("base64", encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringLenient(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData, true)));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData)).toString();
[PATCH] return StringUtils.newStringLatin1(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData,false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData,"hex"));
[PATCH] return ArrayUtils.newStringUtf8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringBuffer(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(decodeBase64(binaryData), false);
[PATCH] return StringUtils.newString(( byte[])binaryData, false));
[PATCH] return StringUtils.newStringHtml8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(toBase64(binaryData, false));
[PATCH] return StringUtils.newStringUR8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData)), false);
[PATCH] return StringUtils.newStringUtf8(encodeBase64( binaryData, false));
[PATCH] return StringUtils.newString(encodeBase64(binaryData), true);
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData)), true);
[PATCH] return StringUtils.newStringUTF8(encodeBase64(binaryData, true));
[PATCH] return StringUtils.newStringLowercase(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData}, false));
[PATCH] return StringUtils.newStringUTF8(encodeBase64(binaryData), true);
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData,"latin"));
[PATCH] return StringUtils.newStringUpper8(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString(encodeBase64(binaryData), true));
[PATCH] return StringUtils.newStringBuf(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newString(encodeBase64(binaryData, false)));
[PATCH] return StringUtils.newStringStandard(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringRight(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringUnicode(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringLower(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringBytes(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringLowerCase(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringLen(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringAll(encodeBase64(binaryData, false));
[PATCH] return StringUtils.newStringBasic(encodeBase64(binaryData), false);
[PATCH] return StringUtils.newString(encodeBase64(binaryData, true));
[PATCH] return StringUtils.newString(( char[])binaryData, false));
[PATCH] return StringUtils.newStringUtf8(encodeBase64(binaryData);
[PATCH] return StringUtils.newString(( String)binaryData, false);
[PATCH] return StringUtils.newString(( String)binaryData, false));
[PATCH] return StringUtils.newStringFromByteArray(binaryData, false);
[PATCH] return StringUtils.newString(( String)binaryData, true));
[PATCH] return StringUtils.newStringFromArray(binaryData, false);
[PATCH] return StringUtils.newStringLen(binaryData, false);
[PATCH] return StringUtils.newString("Base64");
[PATCH] return StringUtils.newStringChars(binaryData, false);
[PATCH] return StringUtils.newStringUtf8("base64");
[PATCH] return StringUtils.newString("base64");
[PATCH] return StringUtils.newString();
);
;
