[PATCH] str = str.trim();
[PATCH] str = trim(str);
[PATCH] str = Validate.notNull(str);
[PATCH] str = Integer.toString(str);
[PATCH] str = padding(str, 0, width);
[PATCH] str = stripLeadingAndTrailingQuotes(str);
[PATCH] str = String.valueOf(str);
[PATCH] str = removeWhitespace(str);
[PATCH] str = filterForWidth(str, width);
[PATCH] str = replace(str, 0, width);
[PATCH] str = filterToString(str, false);
[PATCH] str = DateTimeUtils.clean(str);
[PATCH] str = StrBuilder.clean(str);
[PATCH] str = StringUtils.repeat(str, width);
[PATCH] str = removeLeadingAndTrailingQuotes(str);
[PATCH] str = normalize(str);
[PATCH] str = filter(str, 0, width);
[PATCH] str = pruneWhitespace(str);
[PATCH] str = trimLeft(str, width);
[PATCH] str = Validate.notEmpty(str);
[PATCH] str = StringUtils.deleteWhitespace(str);
[PATCH] str = filterInvalidWidth(str, width);
[PATCH] str = StringUtils.leftPad("", width);
[PATCH] str = filterWhitespace(str, false);
[PATCH] str = stripLeadingWidth(str, width);
[PATCH] str = Util.trim(str);
[PATCH] str = trim(str, 0, width);
[PATCH] str = filterWhitespace(str, null);
[PATCH] str = trim(str, 0);
[PATCH] str = notNull(str);
[PATCH] str = stripLeadingAndTrailingSpaces(str);
[PATCH] str = stripLeadingZeroes(str);
[PATCH] str = filterUnpaddedString(str);
[PATCH] str = StringUtils.toLowerCase(str);
[PATCH] str = removeLeadingAndTrailingSpaces(str);
[PATCH] str = stripLeadingAndTrailingWhitespace(str);
[PATCH] ensureCapacity(size + width);
[PATCH] str = StringUtils.trim(str);
[PATCH] str = StringUtils.clean(str);
[PATCH] str = stripLeadingAndRight(str);
[PATCH] str = filter(str, null);
[PATCH] str = trimLeadingAndTrailingQuotes(str);
[PATCH] str = validate(str, 0, width);
[PATCH] StrBuilder.this.setLength(size);
[PATCH] str = ensureLeading(str, size);
[PATCH] str = trim(str, width - 1);
[PATCH] str = filterInput(str, true);
[PATCH] width = Math.min(width, width);
[PATCH] str = filterInput(str, false);
[PATCH] str = filterToString(str, null);
[PATCH] str = discardWhitespace(str);
[PATCH] str = skipSpace(str);
[PATCH] str = stripLeadingWhitespace(str);
[PATCH] str = trim(str, width);
[PATCH] str = Util.clean(str);
[PATCH] str = stripTrailingWidth(str, width);
[PATCH] str = _trim(str);
[PATCH] str = filterToString(str, true);
[PATCH] str = NumberInput.clean(str);
[PATCH] str = replace(str, padChar);
[PATCH] str = Kit.trim(str);
[PATCH] str = InputUtils.trim(str);
[PATCH] str = str.trim(0, width);
[PATCH] str = filterTrim(str, null);
[PATCH] str = filterKeys(str, null);
[PATCH] str = filterKeys(str, true);
[PATCH] str = filterOutWhitespace(str, false);
[PATCH] str = normalise(str, width);
[PATCH] str = Filter.filter(str, null);
[PATCH] str = StringUtils.unpad(str);
[PATCH] str = clean(str);
[PATCH] str = filterSpaces(str, width);
[PATCH] str = convert(str, false);
[PATCH] str = filterWhitespace(str, true);
[PATCH] width = Math.min(width, size);
[PATCH] str = 1 + str.trim();
[PATCH] str = filterOutWhitespace(str, width);
[PATCH] str = filterWhitespace(str);
[PATCH] str = checkParser(str);
[PATCH] str = stripTrailingWidth(str);
[PATCH] str = validateWidth(width);
[PATCH] str = padding(str);
[PATCH] str = pruneSpace(str);
[PATCH] str = filterEnd(str, size);
[PATCH] str = ensureLeading(str, width);
[PATCH] str = stripLeadingWidth(str);
[PATCH] str = normalise(str);
[PATCH] str = skipSpace(str, size);
[PATCH] StrBuilder.this.append(str);
[PATCH] validateWidth(width);
[PATCH] str = str.trim(0);
[PATCH] str = validate(str, width, 0);
[PATCH] str = checkWidth(width);
[PATCH] str = checkString(str);
[PATCH] str = filterKeys(str);
[PATCH] str = filterStart(str, size);
[PATCH] checkWidth(width);
[PATCH] str = wrap(str);
[PATCH] trim(str);
[PATCH] add(padChar);
