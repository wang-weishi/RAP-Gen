[PATCH] return previous;
[PATCH] return current;
[PATCH] return new UnivariatePointValuePair(previous, current);
[PATCH] throw new ConvergenceException("");
[PATCH] return new UnivariatePointValuePair(u, previous);
[PATCH] throw new RuntimeException("");
[PATCH] reportConverged(iter, current, previous);
[PATCH] return new UnivariatePointValuePair(u, current);
[PATCH] throw new UnivariatePointValuePair(previous, current);
[PATCH] throw new IllegalArgumentException("");
[PATCH] return new UnivariatePointValuePair(current, previous);
[PATCH] return new UnivariatePointValuePair(u, u);
[PATCH] return new UnivariatePointValuePair(previous, u);
[PATCH] throw new FunctorException("");
[PATCH] throw new ConvergedException("");
[PATCH] return null;
[PATCH] return new UnivariatePointValuePair(previous, x);
[PATCH] throw new ConvergenceCheckerException("");
[PATCH] throw new ConvergenceError("Converged");
[PATCH] throw new AnalyzerException("");
[PATCH] throw new UnivariatePointValuePair(current, previous);
[PATCH] return new UnivariatePointValuePair(u, true);
[PATCH] return new UnivariatePointValuePair(u, value);
[PATCH] throw new ConvergenceWarning("Converged");
[PATCH] return new UnivariatePointValuePair(u, null);
[PATCH] throw new IllegalStateException("");
[PATCH] throw new RuntimeException("Converged() first.");
[PATCH] return new UnivariatePointValuePair(u, false);
[PATCH] throw new IOException("");
[PATCH] throw new UnivariatePointValuePair(u, previous);
[PATCH] throw new WellDefinedException("");
[PATCH] throw new UnivariatePointValuePair(u, current);
[PATCH] throw new TripletionException("");
[PATCH] throw new RuntimeException("Statistics constructed from univariate point");
[PATCH] throw new ILLEGAL_SECTION;
[PATCH] throw new RuntimeException("Already converged");
[PATCH] throw new ILLEGAL_ITERATION;
[PATCH] throw new JXPathException("");
[PATCH] throw new UnivariatePointValuePair("");
[PATCH] throw new RevergenceException("");
[PATCH] throw new SilentAbortException("");
[PATCH] throw new UnvergenceException("");
[PATCH] throw new GOLDEN_SECTION;
[PATCH] throw new ElliottException("");
[PATCH] return UNivariate_POINT_VALUE;
[PATCH] throw new RuntimeException("Condition not met");
[PATCH] throw newOptimizer("Converged");
[PATCH] throw new SilentException("");
[PATCH] throw new RuntimeException("Converged");
[PATCH] throw new RuntimeException("converged");
[PATCH] throw new SolutionException("");
[PATCH] throw new RuntimeException("Not reachable");
[PATCH] throw new RunnerException("");
[PATCH] return last;
[PATCH] throw new ArithmeticException("");
[PATCH] throw new Exception("");
[PATCH] return new UnivariatePointValuePair();
[PATCH] return prev;
[PATCH] throw new DatasetException("");
[PATCH] throw new AbortException("");
[PATCH] return previous + 1;
[PATCH] report(iter, current);
[PATCH] report(current, iter);
[PATCH] return next;
[PATCH] throw new UnsupportedOperationException("");
[PATCH] throw new NoSuchElementException("");
[PATCH] return this;
[PATCH] recalculate(current);
[PATCH] throw new InterruptedException("");
[PATCH] throw new RuntimeException("();
[PATCH] return result;
[PATCH] reversible();
[PATCH] returnprevious;
[PATCH] return false;
[PATCH] return previous;
[PATCH] return NULL;
[PATCH] return original;
[PATCH] return true;
[PATCH] return curr;
[PATCH] return old;
[PATCH] return i;
[PATCH] return p;
[PATCH] return currentNode;
[PATCH] return previously;
[PATCH] return c;
[PATCH] return n;
[PATCH] return y;
[PATCH] recalculate();
[PATCH] return parent;
[PATCH] return existing;
[PATCH] return candidate;
[PATCH] return currentState;
[PATCH] return backward;
[PATCH] return iterator;
[PATCH] return lo;
[PATCH] return cur;
[PATCH] return j;
[PATCH] return step;
[PATCH] return t;
[PATCH] return initial;
