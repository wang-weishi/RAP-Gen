[PATCH] ensureTyped(t, n, STRING_TYPE);
[PATCH] ensureTyped(t, n);
[PATCH] ensureTyped(t, n, BOOLEAN_TYPE);
[PATCH] ensureTyped(t, n.getString(), STRING_TYPE);
[PATCH] ensureTyped(t, n, NUMBER_TYPE);
[PATCH] ensureTyped(t, n.getString(), NUMBER_TYPE);
[PATCH] ensureTyped(t, n.getNext(), STRING_TYPE);
[PATCH] ensureTyped(t, n.getJSType());
[PATCH] ensureTyped(t, n.getString());
[PATCH] ensureTyped(t, n.getStringType());
[PATCH] ensureTyped(t, n, DATE_TYPE);
[PATCH] ensureTyped(t, n.getString(), BOOLEAN_TYPE);
[PATCH] ensureTyped(t, n,"STRING_TYPE");
[PATCH] ensureTyped(t, n, REGEXP_TYPE);
[PATCH] ensureTyped(t, n.getStringNode());
[PATCH] ensureTyped(t, n.getString().trim(), t);
[PATCH] ensureTyped(t, n, STRING_TYPE.getRestrictedType());
[PATCH] ensureTyped(t, n.getString(), STRING_TYPE);
[PATCH] ensureTyped(t, parent, n);
[PATCH] ensureTyped(t, n, STRING_TYPE.getInstanceType());
[PATCH] ensureTyped(t, n.getNext(), NUMBER_TYPE);
[PATCH] ensureTyped(t, n, CHAR_TYPE);
[PATCH] ensureTyped(t, n, STRING_TYPE);
[PATCH] ensureTyped(t, n, CHARACTER_TYPE);
[PATCH] ensureTyped(t, n.getString().getJSType());
[PATCH] ensureTyped(t, n.getType(), STRING_TYPE);
[PATCH] ensureTyped(t, n, STRING_TYPE); break;
[PATCH] ensureTyped(t, n.removeFirstChild());
[PATCH] ensureTyped(t, n, OBJECT_TYPE);
[PATCH] ensureTyped(t, n,"STRING_TYPE", STRING_TYPE);
[PATCH] ensureTyped(t, n, REFERENCE_TYPE);
[PATCH] ensureType(t, n, STRING_TYPE);
[PATCH] ensureTyped(t, key, STRING_TYPE);
[PATCH] ensureTyped(t, n.getStringNode().getString());
[PATCH] ensureTyped(t, n.getText(), STRING_TYPE);
[PATCH] ensureTyped(t, n.getNext(), BOOLEAN_TYPE);
[PATCH] ensureTyped(t, n + 1, STRING_TYPE);
[PATCH] ensureTyped(t, t.getScope(), n);
[PATCH] ensureTyped(t, n, BYTE_TYPE);
[PATCH] ensureTyped(t, parent, n.getFirstChild());
[PATCH] ensureTyped(t, n = t.getScope().getRootNode());
[PATCH] ensureTyped(t, n, STRING_TYPE.getPrimitiveType());
[PATCH] ensureTyped(t, n, STRING_TYPE, NUMBER_TYPE);
[PATCH] ensureTyped(t, n, VOID_TYPE);
[PATCH] ensureTyped(t, n, STRING_TYPE, BOOLEAN_TYPE);
[PATCH] ensureTyped(t, n, VALUE_TYPE);
[PATCH] ensureTyped(t, n, EQUALS_TYPE);
[PATCH] ensureTyped(t, n, STRING_TYPE);
[PATCH] parent.replaceChild(n, new Node(Token.GET));
[PATCH] ensureTyped(t, n.getString().toLowerCase());
[PATCH] ensureTyped(t, n,"string", STRING_TYPE);
[PATCH] ensureTyped(t, n.detachFromParent());
[PATCH] ensureTyped(t, n, UNEXPECTED_TOKEN);
[PATCH] ensureTyped(t, n, HASH_TYPE);
[PATCH] ensureTyped(t, n, STRING_TYPE.getDescriptor());
[PATCH] ensureTyped(t, n, UNSAFE_TYPE);
[PATCH] ensureTyped(t, n, STRING_TYPE;
[PATCH] ensureTyped(t, n, INTEGER_TYPE);
[PATCH] ensureTyped(t, n,"STRING", STRING_TYPE);
[PATCH] ensureTyped(t, n)== STRING_TYPE;
[PATCH] ensureTyped(t, n, STRING_TYPE);
[PATCH] ensureTyped(t, n, TEXT_TYPE);
[PATCH] ensureTyped(t, n, NULL_TYPE);
[PATCH] ensureTyped(t, n.getString();
[PATCH] parent.replaceChild(n, new Node(Token.STRING));
[PATCH] ensureTyped(t, n, BOUND_TYPE);
[PATCH] ensureTyped(t, n.getStringTree());
[PATCH] t.getCompiler().reportCodeChange();
[PATCH] parent.replaceChild(n, new Node(Token.TRUE));
[PATCH] ensureTyped(t, n, UNKNOWN_TYPE);
[PATCH] ensureTyped(t, n, ENUM_TYPE);
[PATCH] ensureTyped(t, n, UNDEFINED_TYPE);
[PATCH] ensureTyped(t, n, STRING_TYPE); return;
[PATCH] ensureTyped(t, n,"string");
[PATCH] ensureTyped(t, n, NAME_TYPE);
[PATCH] ensureTyped(t, n, HEX_TYPE);
[PATCH] ensureTyped(t, n, SHORT_TYPE);
[PATCH] ensureTyped(t, n), STRING_TYPE);
[PATCH] ensureTyped(t, i, STRING_TYPE);
[PATCH] ensureTyped(t, n, EMPTY_TYPE);
[PATCH] ensureTyped(t, n.getFirstChild());
[PATCH] ensureTyped(t, left, STRING_TYPE);
[PATCH] ensureTyped(t, n.getString().toString());
[PATCH] ensureTyped(t, n.getStringToken());
[PATCH] ensureTyped(t, n, ARRAY_TYPE);
[PATCH] ensureTyped(t, n, TOKEN_TYPE);
[PATCH] ensureTyped(t, n, String_TYPE);
[PATCH] ensureTyped(t, n.getNext());
[PATCH] ensureTyped(t, n.getString().trim());
[PATCH] ensureTyped(t, n;
[PATCH] ensureTyped(t, n,"OBJECTLIT");
[PATCH] super.visit(t, n, parent);
[PATCH] ensureTyped(t, n,"STRING");
[PATCH] ensureTyped(t, n); break;
[PATCH] visitString(t, n);
[PATCH] ensureTyped(t, n);
[PATCH] ensureType(t, n);
[PATCH] ensureTyped(t, n));
[PATCH] ensureTyped(t, n
[PATCH] ensureTyped(t);
