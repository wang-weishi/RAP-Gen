[PATCH] setAutoRangeIncludesZero(false);
[PATCH] setColumnDimension(columnDimension);
[PATCH] Preconditions.checkArgument(columnDimension > 0);
[PATCH] this.zero = new Integer(0.0);
[PATCH] Preconditions.checkArgument(columnDimension == 0);
[PATCH] setColumnDimension(columnDimension - 1);
[PATCH] addChangeListener(this);
[PATCH] setColumnDimension(columnDimension - 1, 0);
[PATCH] setDimension(rowDimension, columnDimension);
[PATCH] this.columnDimension = columnDimension;
[PATCH] this.zero = new Double(0.0);
[PATCH] this.zero = new Integer(0);
[PATCH] setDefaultSize(rowDimension, columnDimension);
[PATCH] setColumnDimension(columnDimension, rowDimension);
[PATCH] super(0.0, 0.0);
[PATCH] this.setColumnDimension(columnDimension);
[PATCH] setMinimumSize(rowDimension, columnDimension);
[PATCH] super(rowDimension, columnDimension);
[PATCH] this.setColumnDimension(columnDimension - 1);
[PATCH] setIdentityMaps(new java.util.HashMap());
[PATCH] setIdentityMap(new java.util.HashMap());
[PATCH] setSize(rowDimension, columnDimension);
[PATCH] checkDimension(rowDimension, columnDimension);
[PATCH] setColumnDimension(columnDimension, 0);
[PATCH] this.data = new java.util.HashMap();
[PATCH] setColumnDimension(columnDimension + 1, 0);
[PATCH] this.data = new java.util.ArrayList();
[PATCH] setIdentityHashMap(new java.util.ArrayList());
[PATCH] ensureAtLeast(rowDimension, columnDimension);
[PATCH] ensureDimension(rowDimension, columnDimension);
[PATCH] Preconditions.checkArgument(0 < rowDimension);
[PATCH] setCapacity(rowDimension, columnDimension);
[PATCH] this.setAutoRangeIncludesZero(false);
[PATCH] setIdentityMaps(new java.util.ArrayList());
[PATCH] setHeight(rowDimension - columnDimension);
[PATCH] Preconditions.checkArgument(columnDimension == 1);
[PATCH] ensureCapacity(rowDimension, columnDimension);
[PATCH] setAutoRangeIncludesZero(false, false);
[PATCH] setColumnDimension(columnDimension - rowDimension);
[PATCH] this.columnDimension = columnDimension + 1;
[PATCH] setHeight(rowDimension - 1.0);
[PATCH] setIdentityMap(new java.util.ArrayList());
[PATCH] this.zeroAll();
[PATCH] setIdentityHashMap(new Integer[rowDimension]);
[PATCH] setDimension(rowDimension - 1, columnDimension);
[PATCH] setMetrics(new java.util.ArrayList());
[PATCH] setScale(rowDimension, columnDimension);
[PATCH] RefineryUtilities.validate(this);
[PATCH] Arrays.sort(this);
[PATCH] setStandardDeviation(0.0);
[PATCH] setIdentityTransform(null);
[PATCH] this.columnDimension = columnDimension - 1;
[PATCH] if(rowDimension < columnDimension){ super(); }
[PATCH] Preconditions.checkArgument(columnDimension < 0);
[PATCH] Arrays.fill(this.entries, null);
[PATCH] setColumnDimension(columnDimension + 1);
[PATCH] setRowDimension(rowDimension - 1);
[PATCH] addChangeHandler(this.entries);
[PATCH] Preconditions.checkNotNull(rowDimension);
[PATCH] setIdentityMaps(new int[rowDimension]);
[PATCH] setup();
[PATCH] setAutoRangeIncludesZero(true);
[PATCH] Collections.sort(this);
[PATCH] this.zero = 0.0;
[PATCH] setRowDimension(rowDimension);
[PATCH] this.zero = 1.0;
[PATCH] setColumns(columnDimension);
[PATCH] setIdentityMapper(null);
[PATCH] this.columns = columnDimension;
[PATCH] this.addChangeListener(this);
[PATCH] setIdentityHashMap(new IdentityHashMap());
[PATCH] this.setIdentityTransform(null);
[PATCH] setIdentityHashMap(null);
[PATCH] ensureCapacity(rowDimension);
[PATCH] setIdentityMapper(this);
[PATCH] fill();
[PATCH] this.zero = true;
[PATCH] setIdentityMap(null);
[PATCH] this.init();
[PATCH] zeroAll();
[PATCH] this.dup();
[PATCH] init();
[PATCH] ensureOpenMap();
[PATCH] this.copyOut();
[PATCH] this.validate();
[PATCH] setEmpty(true);
[PATCH] this.zero();
[PATCH] this.clear();
[PATCH] super();
[PATCH] this.setup();
[PATCH] initialize();
[PATCH] zero();
[PATCH] initialise();
[PATCH] updateOffsets();
[PATCH] updateDimensions();
[PATCH] resize();
[PATCH] populate();
[PATCH] create();
[PATCH] swap();
[PATCH] validate();
