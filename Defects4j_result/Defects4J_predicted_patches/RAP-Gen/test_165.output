[PATCH] block.setIsFunction(true);
[PATCH] block = block.getBasicBlock();
[PATCH] block = block.getFirstChild();
[PATCH] block.setHoisted(true);
[PATCH] block.setIsFunction(false);
[PATCH] block = block.getLastChild();
[PATCH] block.setRemove(false);
[PATCH] block.getParent().removeChild(block);
[PATCH] block.setHoisted(false);
[PATCH] block.setIsHoisted();
[PATCH] block.remove();
[PATCH] block.getParent().remove();
[PATCH] block = block.getAncestor(2);
[PATCH] block.setIsFunctionDeclaration(true);
[PATCH] block = block.getLastBlock();
[PATCH] block.setOnce(true);
[PATCH] block.setIsFunctionDeclaration(false);
[PATCH] block.setIsHoisted(true);
[PATCH] ref.getParent().removeChild(block);
[PATCH] block.setIsFunction();
[PATCH] block.getParent().redeclare();
[PATCH] block.setHoistedBlock(false);
[PATCH] block.redeclare();
[PATCH] block.getParent().remove(block);
[PATCH] block.setInitialValue(ref.getValue());
[PATCH] block.setHoisted();
[PATCH] block.getParent().removeBlock(block);
[PATCH] block.detachFromParent();
[PATCH] block.setHoistedBlock(true);
[PATCH] block.setHeight(block.getHeight());
[PATCH] block.setThis(true);
[PATCH] block = block.getGrandparent();
[PATCH] block.setIsHoisted(false);
[PATCH] block.setRValue(ref.getValue());
[PATCH] block.getParent().detachFromParent();
[PATCH] block.setIsNoInOperator();
[PATCH] block.setAliased(true);
[PATCH] block.setOnce(false);
[PATCH] block.getLastChild().setString("");
[PATCH] block = block.getParent();
[PATCH] block = block.getInitialBlock();
[PATCH] block.setOnceInLifetime(true);
[PATCH] block.setIsNoInLoop(false);
[PATCH] block.initBlock();
[PATCH] block = block.getLast();
[PATCH] block = block.getImmediateParentBlock();
[PATCH] ref.setBlock(block);
[PATCH] block.setRequiresActivation();
[PATCH] block.getFirstChild().setString("");
[PATCH] block.setIsNoInLifetime(false);
[PATCH] ref.setRemove(block);
[PATCH] block.setIsNoInLifetime(true);
[PATCH] block.setIsOnce(true);
[PATCH] block.clearStack();
[PATCH] block.setIsFunctionOrLoop(true);
[PATCH] block.setIsNoInOperator(false);
[PATCH] block.setIsFunctionDead();
[PATCH] block = block.getImmediateParent();
[PATCH] block.setIsNoInLoop(true);
[PATCH] block.setIsOnce();
[PATCH] block.setFlag(false, false);
[PATCH] block.setFlag(false, true);
[PATCH] block.setHasChildren();
[PATCH] block.setIsForLoop(true);
[PATCH] block.setIsFallThrough(true);
[PATCH] block.setIsCall();
[PATCH] block = block.getImplicitReturn();
[PATCH] block.setReady(true);
[PATCH] block.setUsed(true);
[PATCH] block.setReady(false);
[PATCH] block.setCalledOnce(true);
[PATCH] block.setNeedsActivation();
[PATCH] ref.setRemove(false);
[PATCH] ref.setIsFunction(block);
[PATCH] block.setRefinable(false);
[PATCH] block.setThis(false);
[PATCH] block = block.getFirstBlock();
[PATCH] block.setIsNoInOperator(true);
[PATCH] block.setIsHoistedBlock();
[PATCH] block.setLocked(true);
[PATCH] block.setIsFunctionDeclaration();
[PATCH] block = block.getLastStatement();
[PATCH] block.setVisible(true);
[PATCH] block = block.getImplicitPrototype();
[PATCH] block.setIsFunctionOrLoop(false);
[PATCH] ref.setGrandparent(block);
[PATCH] block.setFunction(false);
[PATCH] block.setInitialized(true);
[PATCH] block.setIsNoOp();
[PATCH] block.setOnceInLifetime(false);
[PATCH] block.setForced(false);
[PATCH] block.setIsForLoop(false);
[PATCH] block = block.getAncestor(1);
[PATCH] block.setRemoved(false);
[PATCH] block.setDead(false);
[PATCH] block.setIsLocal();
[PATCH] block.setInline(false);
[PATCH] blockStack.push(block);
[PATCH] block.checkDeprecation();
[PATCH] block.markOnce();
