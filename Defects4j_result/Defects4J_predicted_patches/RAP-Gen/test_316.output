[PATCH] final ArrayList deferredBlockStreams = getDeferredBlockStreams();
[PATCH] ArrayList deferredBlockStreams = getDeferredBlockStreams();
[PATCH] final ArrayList deferredBlockStreams = getdeferredBlockStreams();
[PATCH] final ArrayList deferredBlockStreams = readBlocks();
[PATCH] final ArrayList deferredBlockStreams = getCloseStream();
[PATCH] final ArrayList deferredBlockStreams = getDeserializers();
[PATCH] final ArrayList deferredBlockStreams = readBlock();
[PATCH] final ArrayList deferredBlockStreams = findDeferredBlockStreams();
[PATCH] final ArrayList deferredBlockStreams = getNextBlock();
[PATCH] final ArrayList deferredBlockStreams = getTransitiveIterator();
[PATCH] ArrayList deferredBlockStreams = this.deferredBlockStreams();
[PATCH] ArrayList deferredBlockStreams = getdeferredBlockStreams();
[PATCH] final ArrayList deferredBlockStreams = getDirectories();
[PATCH] final ArrayList deferredBlockStreams = getReferences();
[PATCH] final ArrayList deferredBlockStreams = deferReadStream();
[PATCH] final ArrayList deferredBlockStreams = getCallbackBlockStreams();
[PATCH] ArrayList<InputStream> deferredBlockStreams = readBlock();
[PATCH] ArrayList<InputStream> deferredBlockStreams = readBlocks();
[PATCH] final ArrayList deferredBlockStreams = getDeferredBlocks();
[PATCH] final ArrayListdeferredBlockStreams = getDeferredBlockStreams();
[PATCH] final ArrayList deferredBlockStreams = createDeferredBlockStreams();
[PATCH] final ArrayList deferredBlockStreams = readAll();
[PATCH] final ArrayList deferredBlockStreams = getDeprecationStream();
[PATCH] final ArrayList deferredBlockStreams = streamStack.size();
[PATCH] final ArrayList deferredBlockStreams = finallyReads();
[PATCH] ArrayList deferredBlockStreams = readBlocks();
[PATCH] ArrayList<InputStream> deferredBlockStreams = getNextBlock();
[PATCH] final ArrayList deferredBlockStreams = getDenominator();
[PATCH] final ArrayList deferredBlockStreams = getImplicitReturn();
[PATCH] final ArrayList deferredBlockStreams = extractDeferredBlockStreams();
[PATCH] ArrayList deferredBlockStreams = readBlock();
[PATCH] ArrayList deferredBlockStreams = getCloseStream();
[PATCH] final ArrayList deferredBlockStreams = getLocalFileStream();
[PATCH] final ArrayList deferredBlockStreams = getDataStream();
[PATCH] final ArrayList deferredBlockStreams = getLocalFileStreams();
[PATCH] final ArrayList deferredBlockStreams = createReadStream();
[PATCH] final ArrayList deferredBlockStreams = getThrowables();
[PATCH] final ArrayListdeferredBlockStreams = deferredBlockStreams();
[PATCH] final ArrayList deferredBlockStreams = unzip();
[PATCH] final ArrayList deferredBlockStreams = getDirectedStreams();
[PATCH] ArrayList deferredBlockStreams = getDeserializers();
[PATCH] ArrayList deferredBlockStreams = getNextBlock();
[PATCH] ArrayList<InputStream> deferredBlockStreams = getReferences();
[PATCH] ArrayList deferredBlockStreams = getTransitiveIterator();
[PATCH] final ArrayList deferredBlockStreams = getNextBlocks();
[PATCH] final ArrayList deferredBlockStreams = getClose();
[PATCH] final ArrayList<InputStream> deferredBlockStreams = readAll();
[PATCH] final ArrayList deferredBlockStreams = getTransitiveDeps();
[PATCH] ArrayList<InputStream> deferredBlockStreams = readAll();
[PATCH] final ArrayList deferredBlockStreams = getRange();
[PATCH] final ArrayList deferredBlockStreams = getTransitiveStream();
[PATCH] final ArrayList deferredBlockStreams = getWarnings();
[PATCH] final ArrayList deferredBlockStreams = getAst();
[PATCH] final ArrayList deferredBlockStreams = drain();
[PATCH] final ArrayList deferredBlockStreams = getStack();
[PATCH] ArrayList deferredBlockStreams = getReferences();
[PATCH] ArrayList deferredBlockStreams = readAll();
[PATCH] clear();
[PATCH] init();
[PATCH] clearDeferredBlockStreams();
[PATCH] throw new IllegalStateException("");
[PATCH] clearBlockStreams();
[PATCH] throw new IOException("");
[PATCH] removeAllBlockStreams();
[PATCH] initBlockStreams();
[PATCH] clearStack();
[PATCH] return getNextBlock();
[PATCH] loops();
[PATCH] clearCachedResources();
[PATCH] checkNewFormat();
[PATCH] checkNewStream();
[PATCH] callbacks.clear();
[PATCH] checkNewFile();
[PATCH] clearCachedStreams();
[PATCH] checkInvariant();
[PATCH] clearBuffer();
[PATCH] clearCachedValues();
[PATCH] rewind();
[PATCH] clearCachedFiles();
[PATCH] emptyBlockStreams();
[PATCH] clearOut();
[PATCH] removeAllBlocks();
[PATCH] assertOpen();
[PATCH] lazyInit();
[PATCH] initialise();
[PATCH] readBlock();
[PATCH] checkOpen();
[PATCH] clearCache();
[PATCH] closeEntry();
[PATCH] reset();
[PATCH] emptyIterator();
[PATCH] clearBuffers();
[PATCH] clearLoop();
[PATCH] retain();
[PATCH] clearIterator();
[PATCH] ensureOpen();
[PATCH] closeBlock();
[PATCH] checkInitialized();
[PATCH] initialize();
[PATCH] close();
