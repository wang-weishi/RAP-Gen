[PATCH] return createPrinter();
[PATCH] return createPrinter(out, format);
[PATCH] return this.createPrinter();
[PATCH] return createPrinter(out);
[PATCH] return new CSVPrinter(this);
[PATCH] return createPrinter(format);
[PATCH] return this;
[PATCH] return createPrinter(this, format);
[PATCH] return this.getPrinter();
[PATCH] return createPrinter(this.format);
[PATCH] return createPrinter(this);
[PATCH] return(CSVPrinter)createPrinter();
[PATCH] return createGenerator(out, format);
[PATCH] return super.createPrinter();
[PATCH] return new CSVPrinter();
[PATCH] return createPrinter(format, out);
[PATCH] return new CSVPrinter(out);
[PATCH] return super.getPrinter();
[PATCH] return createPrinter(Format.standard());
[PATCH] return this.createPrinter(out);
[PATCH] return createDefaultPrinter();
[PATCH] return createFormatter();
[PATCH] return createPrinter(null, format);
[PATCH] return this.createPrinter(format);
[PATCH] return this.format.getPrinter();
[PATCH] return registerPrinter(this);
[PATCH] return createPrinter(null, null);
[PATCH] return this.initPrinter();
[PATCH] return createGenerator(out);
[PATCH] return this.constructPrinter();
[PATCH] return createPrinter(Format.DEFAULT);
[PATCH] return this.asPrinter();
[PATCH] return this.newPrinter();
[PATCH] return asPrinter();
[PATCH] return createPrinter(out){
[PATCH] return registerDefaultPrinter(this);
[PATCH] print(out);
[PATCH] registerDefaultPrinter(this);
[PATCH] return new CSVPrinter(getName());
[PATCH] return createPrinter(FORMAT);
[PATCH] return this.createFormatter();
[PATCH] this.print(out);
[PATCH] start(); return this;
[PATCH] return createPrinter(null);
[PATCH] return this.buildPrinter();
[PATCH] return addPrinter(this);
[PATCH] return withFormatter(this);
[PATCH] throw new IOException("");
[PATCH] return getPrinter();
[PATCH] return createParser(out);
[PATCH] return format.getPrinter();
[PATCH] print(out, format);
[PATCH] return _createPrinter();
[PATCH] return createPrinter("");
[PATCH] return wrap(out);
[PATCH] return getDefaultPrinter();
[PATCH] return constructPrinter();
[PATCH] return compile(out);
[PATCH] return getFormatter();
[PATCH] return toFormatter();
[PATCH] return wrap();
[PATCH] return getPrinter();
[PATCH] return initPrinter();
[PATCH] return generatePrinter();
[PATCH] return this();
[PATCH] startPrinting();
[PATCH] return newInstance();
[PATCH] return openPrinter();
[PATCH] return getInstance();
[PATCH] return setDefaultPrinter();
[PATCH] return this);
[PATCH] print(this);
[PATCH] return buildPrinter();
[PATCH] return startPrinter();
[PATCH] return jsonPrinter();
[PATCH] return createGenerator();
[PATCH] return configurePrinter();
[PATCH] initPrinter();
[PATCH] startPrinter();
[PATCH] return toPrinter();
[PATCH] return setupPrinter();
[PATCH] returncreatePrinter();
[PATCH] return requirePrinter();
[PATCH] this.print();
[PATCH] return defaultPrinter();
[PATCH] return makePrinter();
[PATCH] return readPrinter();
[PATCH] return createParser();
[PATCH] return preparePrinter();
[PATCH] return loadPrinter();
[PATCH] return CreatePrinter();
[PATCH] createPrinter();
[PATCH] return clone();
[PATCH] print();
[PATCH] init();
[PATCH] return formatter();
[PATCH] return getParser();
[PATCH] return factory();
[PATCH] return reset();
[PATCH] start();
