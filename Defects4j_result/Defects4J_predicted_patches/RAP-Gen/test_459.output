[PATCH] super.findObjectId(id, gen, resolverType);
[PATCH] final ObjectIdGenerator<?> gen = findObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = _objectIdResolvers.get(id);
[PATCH] final ObjectIdGenerator<?> gen = get(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = resolveObjectIdGenerators(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = loader.getObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getFactory().getObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = requireObjectIdGenerators();
[PATCH] final ObjectIdGenerator<?> gen = resolverType.getObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = getObjectIdGenerators(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getFormatter(resolverType).objectIdGenerators();
[PATCH] final ObjectIdGenerator<?> gen = deserialize(id, resolverType);
[PATCH] final ObjectIdGenerator<?> gen = instantiate(resolverType);
[PATCH] final ObjectIdGenerator<Object> gen = findObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = _findObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = _objectIdGenerators.get(id);
[PATCH] final ObjectIdGenerator<?> gen = factory.getObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = lookupObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = createObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getOrCreateObjectIdGenerator(resolverType);
[PATCH] final ObjectIdResolver<?> res = _objectIdResolvers.get(id);
[PATCH] final ObjectIdGenerator<?> gen = loader.findObjectIdGenerator(resolverType);
[PATCH] final ObjectIdResolver<?> res = deserialize(id, resolverType);
[PATCH] final ObjectIdGenerator<?> gen = findObjectIdGenerator(resolverType, id);
[PATCH] final ObjectIdGenerator<?> gen = findRootObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getFactory().objectIdGenerator(resolverType);
[PATCH] final ObjectIdResolver<?> res = findObjectIdResolver(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = useDefaultDeserializers(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getAbstractObjectIdGenerator(resolverType);
[PATCH] final ObjectIdResolver<?> res = resolver.findObjectIdResolver(id);
[PATCH] final ObjectIdResolver<?> res = findObjectIdResolver(id, resolverType);
[PATCH] final ObjectIdGenerator<?> gen = mapper.getObjectIdGenerator(resolverType);
[PATCH] final ObjectIdResolver<?> res = resolverType.getInstance();
[PATCH] final ObjectIdGenerator<?> gen = getFormatter(resolverType).getObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = serializers.get(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = asObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = _findRootObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getFactory().findObjectIdGenerator(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = resolverType.getObjectIdGenerators();
[PATCH] super(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = objectIdGenerators.get(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getSerializationContext().getObjectIdGenerator();
[PATCH] final ObjectIdGenerator<Object> gen = resolverType.getObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = getOrCreateObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = requireObjectIdGenerators(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = loader.getObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = ensureObjectIdGenerator(resolverType);
[PATCH] final ObjectIdResolver<?> res = findObjectIdResolver(resolverType, id);
[PATCH] final ObjectIdGenerator<?> gen = getCodec();
[PATCH] final ObjectIdResolver<?> res = resolveObjectIdResolvers(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = objectIdResolvers.get(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getFormatter(resolverType).getObjectIdGenerators();
[PATCH] final ObjectIdGenerator<?> gen = objectIdResolvers.get(id);
[PATCH] final ObjectIdGenerator<?> gen = getInstance(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = ensureObjectIdGenerators(resolverType);
[PATCH] super._findObjectId(id, gen, resolverType);
[PATCH] final ObjectIdGenerator<Object> gen = get(resolverType);
[PATCH] final ObjectIdResolver<?> res = resolverType.findObjectIdResolvers(id);
[PATCH] final ObjectIdGenerator<?> gen = get objectIdGenerators(resolverType);
[PATCH] final ObjectIdResolver<Object> res = resolver.findObjectIdResolver(id);
[PATCH] final ObjectIdResolver<?> res = resolveObjectIdResolvers(resolverType, id);
[PATCH] final ObjectIdResolver<?> res = resolverType.withObjectIdResolvers(id);
[PATCH] final ObjectIdGenerator<?> gen = ctxt.objectIdGeneratorInstance();
[PATCH] final ObjectIdResolver<?> res = loader.findObjectIdResolver(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getBase();
[PATCH] final ObjectIdGenerator<?> gen = lookup(resolverType);
[PATCH] final ObjectIdResolver<?> res = _findObjectIdResolver(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getFactory().getObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = resolverType.getInstance();
[PATCH] final ObjectIdResolver<?> res = get(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = _objectIdResolvers.get(0);
[PATCH] final ObjectIdGenerator<?> gen = getDefaultObjectIdGenerator();
[PATCH] final ObjectIdResolver<Object> res = findObjectIdResolver(resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getDeserializationType();
[PATCH] final ObjectIdGenerator<?> res = _objectIdResolvers.get(id);
[PATCH] final ObjectIdGenerator<?> gen = getImplicitPrototype();
[PATCH] final ObjectIdGenerator<?> gen = asObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = load(resolverType);
[PATCH] Object id = gen.deserialize(id, resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getAsObjectIdGenerator();
[PATCH] super(id, resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getCurrentInstance();
[PATCH] final ObjectIdGenerator<?> gen = getFactory();
[PATCH] final ObjectIdGenerator<?> gen = getRootObjectIdGenerator();
[PATCH] final ObjectIdGenerator<?> gen = getCallback();
[PATCH] final ObjectIdResolver<?> res = get(id);
[PATCH] final ObjectIdGenerator<?> gen = getAccessor();
[PATCH] final ObjectIdGenerator<?> gen = getFixed();
[PATCH] final ObjectIdGenerator<?> gen = getCurrentObject();
[PATCH] super(_objectIdResolvers, resolverType);
[PATCH] final ObjectIdGenerator<?> gen = getMapper();
[PATCH] final ObjectIdGenerator<?> gen = getConstructor();
[PATCH] final ObjectIdGenerator<?> gen = getManager();
[PATCH] super(id, null, resolverType);
[PATCH] super(gen, resolverType);
[PATCH] super(null, resolverType);
[PATCH] super, resolverType);
[PATCH] super(_objectIdResolvers);
[PATCH] super;
[PATCH] super("", resolverType);
