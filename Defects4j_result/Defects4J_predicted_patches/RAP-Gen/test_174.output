[PATCH] stream.setLineBreak(result);
[PATCH] stream.reset();
[PATCH] stream.release();
[PATCH] stream.setIsSyntheticBlock(true);
[PATCH] stream.close();
[PATCH] stream.setJSDocInfo(result);
[PATCH] stream.setIsSyntheticBlock(result);
[PATCH] stream.setErrorReporter(parser);
[PATCH] stream.skipToFront(result);
[PATCH] stream.charno();
[PATCH] stream.setJSSourceFile(sourceFile);
[PATCH] stream.setPos(stream.getAbsolutePosition());
[PATCH] if(result!= null){ if(""); }
[PATCH] stream.setCurrentLine(result);
[PATCH] stream.setIsSyntheticBlock(false);
[PATCH] Preconditions.checkNotNull(result);
[PATCH] stream.skipWS();
[PATCH] stream.setSourceName(sourceFile);
[PATCH] stream.setCurrentLength(0);
[PATCH] stream.setIsJsDocBlock(true);
[PATCH] stream.setErrorReporter(errorReporter);
[PATCH] stream.setJSDocToken(null);
[PATCH] stream.setIsJsDocBlock(result);
[PATCH] stream.seek(stream.getLineno());
[PATCH] stream.setType(Token.SCRIPT);
[PATCH] stream.setIsSynthetic(true);
[PATCH] stream.setToken(Token.EOL);
[PATCH] stream.advance();
[PATCH] stream.setJSDocBuilder(jsdocBuilder);
[PATCH] stream.setJXPathLineBreak(result);
[PATCH] stream.setEndOfLine(result);
[PATCH] stream.setJSSpace(result);
[PATCH] stream.moveToFront(result);
[PATCH] stream.setPos(stream.getBeginIndex());
[PATCH] stream.setLenient(false);
[PATCH] stream.setLineBreak(result.length());
[PATCH] stream.setPos(stream.getLineIndex());
[PATCH] stream.setErrorIndex(Token.ERROR);
[PATCH] stream.setWhitespace(result);
[PATCH] stream.setIsJSDocBlock(true);
[PATCH] stream.setIndex(stream.getColumnIndex());
[PATCH] stream.setJXPathResult(result);
[PATCH] stream.setLineBreak(result == null);
[PATCH] stream.setPos(stream.getLp());
[PATCH] sourceFile.setLineBreak(result);
[PATCH] stream.setType(Token.EOL);
[PATCH] stream.setLen(0);
[PATCH] stream.setEmpty(result);
[PATCH] stream.setNoWhitespace(result);
[PATCH] stream.setIndentation(stream.getLineNumber());
[PATCH] stream.setJXPath(result);
[PATCH] stream.setLength(0);
[PATCH] stream.setIsJSDocBlock(result);
[PATCH] stream.setAnnotationNames(annotationNames);
[PATCH] stream.setUnterminated(false);
[PATCH] stream.setLineLength(0);
[PATCH] stream.clear();
[PATCH] stream.detachFromParent();
[PATCH] stream.charno(result.length());
[PATCH] stream.setCommentStart(result);
[PATCH] stream.setJsDocToken(null);
[PATCH] stream.setDone(true);
[PATCH] stream.setErrorIndex(token);
[PATCH] stream.setLineBreak(false);
[PATCH] stream.setUnterminated(true);
[PATCH] stream.setErrorIndex(result);
[PATCH] stream.detachToken();
[PATCH] stream.setLineBreak(0);
[PATCH] stream.removeWhitespace();
[PATCH] stream.skipJSDocToken();
[PATCH] stream.setNewLine(result);
[PATCH] stream.setEOL(result);
[PATCH] stream.setNext(result);
[PATCH] stream.skipWSOrEnd();
[PATCH] stream.skipTo(result);
[PATCH] stream.skipEndLine();
[PATCH] stream.skipToFront();
[PATCH] stream.staleToken();
[PATCH] stream.mark(result);
[PATCH] stream.skipWhitespace();
[PATCH] stream.skipToEnd();
[PATCH] stream.next();
[PATCH] stream.releaseBuffers();
[PATCH] stream.dispose();
[PATCH] stream.readLine();
[PATCH] stream.clearLine();
[PATCH] stream.unshare();
[PATCH] stream.clearToken();
[PATCH] stream.consume();
[PATCH] stream.expectComma();
[PATCH] stream.pop();
[PATCH] stream.stop();
[PATCH] stream.off();
[PATCH] stream.trim();
[PATCH] consumeToken();
[PATCH] consume();
);
;
*/
());
