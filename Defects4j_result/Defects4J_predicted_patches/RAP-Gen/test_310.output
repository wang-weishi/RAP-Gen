[PATCH] reset();
[PATCH] init();
[PATCH] return createZipEntry();
[PATCH] return createCopy(buf);
[PATCH] return createInputStream(in);
[PATCH] return createInputStream(buf);
[PATCH] return createDecompressor();
[PATCH] return createDecompressedStream();
[PATCH] return createStream(in);
[PATCH] buf.reset();
[PATCH] return getNextZipEntry();
[PATCH] return createNextEntry();
[PATCH] return createStream(buf);
[PATCH] return reset();
[PATCH] return createStream();
[PATCH] return createNextZipEntry();
[PATCH] return createCompressor();
[PATCH] return createJarEntry();
[PATCH] return createDelegate();
[PATCH] return createCopy(in);
[PATCH] return this.createInputStream();
[PATCH] return createReader(buf);
[PATCH] return createEntry();
[PATCH] return init();
[PATCH] return createDecompressStream();
[PATCH] return createInputStream(encoding);
[PATCH] return this.createEntry();
[PATCH] return createInputStream();
[PATCH] return createEmptyStream();
[PATCH] return createParser(buf);
[PATCH] return createDecompressedInputStream();
[PATCH] return createOutputStream();
[PATCH] return createEntrySet();
[PATCH] return this.createStream();
[PATCH] return createChunkedStream();
[PATCH] startEntry(); return this;
[PATCH] return createIterator(buf);
[PATCH] return createWrappedStream();
[PATCH] return createRootEntry();
[PATCH] return createChainedStream();
[PATCH] return createDecodingStream();
[PATCH] in.reset();
[PATCH] start(); return this;
[PATCH] init(); return this;
[PATCH] return this.createOutputStream();
[PATCH] return createLoopedStream();
[PATCH] return createDelegateEntry();
[PATCH] return createDelegateFile();
[PATCH] return createCompressionStream();
[PATCH] return createFactory();
[PATCH] return createFormatter();
[PATCH] return createEmptyInputStream();
[PATCH] return createTransformedStream();
[PATCH] return createZipFileEntry();
[PATCH] return createDecomposer();
[PATCH] return this.reset();
[PATCH] return this.copy();
[PATCH] return createDelegateStream();
[PATCH] return createReadStream();
[PATCH] startEntry();
[PATCH] fillBuffer(buf);
[PATCH] return wrap();
[PATCH] addChangeListener(this);
[PATCH] return createDirectoryEntry();
[PATCH] return createArchiveEntry();
[PATCH] endEntry();
[PATCH] return createCompressStream();
[PATCH] return createCompressedStream();
[PATCH] return createGzipInputStream();
[PATCH] return createArchiveStream();
[PATCH] return createReader();
[PATCH] return createWrapper();
[PATCH] return createDefaultEntry();
[PATCH] start();
[PATCH] return this;
[PATCH] buf.clear();
[PATCH] checkNextEntry();
[PATCH] return createInternal();
[PATCH] return open();
[PATCH] return initialize();
[PATCH] return createInput();
[PATCH] nextEntry();
[PATCH] endFile();
[PATCH] freeBuffers();
[PATCH] return register();
[PATCH] return();
[PATCH] return create();
[PATCH] return prepare();
[PATCH] closeEntry();
[PATCH] return clone();
[PATCH] setup();
[PATCH] return connect();
[PATCH] ensureOpen();
[PATCH] initialize();
[PATCH] recv();
[PATCH] close();
[PATCH] super();
[PATCH] finish();
);
;
