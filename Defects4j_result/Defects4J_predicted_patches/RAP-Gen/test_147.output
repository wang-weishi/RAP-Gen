[PATCH] name = functionNode.getFirstChild().getString();
[PATCH] Preconditions.checkNotNull(functionNode.getLineno());
[PATCH] String fnName = functionNode.getFunctionName();
[PATCH] Preconditions.checkArgument(!functionNode.isVarArgs());
[PATCH] Preconditions.checkNotNull(functionNode.getFunctionName());
[PATCH] String fnName = functionNode.getFirstChild().getString();
[PATCH] Preconditions.checkState(compiler.isNormalized());
[PATCH] Preconditions.checkNotNull(name);
[PATCH] name = functionNode.getFunctionName();
[PATCH] Preconditions.checkArgument(!functionNode.isFunctionDeclaration());
[PATCH] int fnName = functionNode.getFirstChild().getString();
[PATCH] Preconditions.checkState(compiler.isIdeMode());
[PATCH] Preconditions.checkArgument(!functionNode.isFunctionType());
[PATCH] Preconditions.checkState(!functionNode.isVarArgs());
[PATCH] Preconditions.checkNotNull(functionNode.getSourceName());
[PATCH] Preconditions.checkNotNull(functionNode.getLp());
[PATCH] Preconditions.checkState(!functionNode.isFunctionDeclaration());
[PATCH] name = new Name(functionNode.getLineno());
[PATCH] int fnName = functionNode.getFunctionName().length();
[PATCH] logger.info("Missing function name.");
[PATCH] Preconditions.checkState(!functionNode.isFunctionType());
[PATCH] Preconditions.checkState(name.isEmpty());
[PATCH] Preconditions.checkArgument(name.isEmpty());
[PATCH] int fnName = functionNode.getFunctionName().toLowerCase();
[PATCH] name = createName(functionNode.getLineno());
[PATCH] name = new Name("", functionNode.getLineno());
[PATCH] Preconditions.checkArgument(!functionNode.isFunctionName());
[PATCH] Preconditions.checkState(!functionNode.hasChildren());
[PATCH] Preconditions.checkState(functionNode.hasOneChild());
[PATCH] checkLineno(functionNode.getLineno());
[PATCH] Preconditions.checkState(!functionNode.isFunction());
[PATCH] Preconditions.checkArgument(!functionNode.hasChildren());
[PATCH] logger.info("VarCheck should have caught this undefined function");
[PATCH] Preconditions.checkState(functionNode.isFunction());
[PATCH] Preconditions.checkArgument(isFunctionNode(functionNode));
[PATCH] Preconditions.checkNotNull(functionNode.getFirstChild());
[PATCH] Preconditions.checkArgument(!functionNode.isFunction());
[PATCH] Preconditions.checkArgument(!functionNode.isNamed());
[PATCH] Preconditions.checkState(functionNode.isFunctionType());
[PATCH] name = new Name(functionNode.getFunctionName());
[PATCH] Preconditions.checkState(functionNode.hasChildren());
[PATCH] Name fnName = functionNode.getFirstChild().getString();
[PATCH] Preconditions.checkArgument(!functionNode.isFunctionPrototype());
[PATCH] logger.fine("Missing function name.");
[PATCH] Preconditions.checkArgument(name.length() == 0);
[PATCH] boolean lparenCharno = functionNode.getLp();
[PATCH] Preconditions.checkState(!transformNode.hasChildren());
[PATCH] int lparenCharno = functionNode.getLp();
[PATCH] Preconditions.checkArgument(name.equals("prototype")));
[PATCH] Preconditions.checkState(!compiler.isNormalized());
[PATCH] Preconditions.checkArgument(!functionNode.isVarDeclaration());
[PATCH] Preconditions.checkState(isFunctionNode(functionNode));
[PATCH] Node fnName = functionNode.getFirstChild();
[PATCH] String fnName = functionNode.getFunctionName(); if("");
[PATCH] Preconditions.checkState(type == Token.FUNCTION);
[PATCH] Preconditions.checkArgument(compiler.isIdeMode());
[PATCH] Preconditions.checkState(functionNode.isVarArgs());
[PATCH] name = functionNode.getFirstChild().getNext();
[PATCH] logger.info("Missing function name");
[PATCH] logger.info("Can not find function name.");
[PATCH] Preconditions.checkNotNull(functionNode);
[PATCH] Preconditions.checkArgument(!functionNode.isLhs());
[PATCH] Preconditions.checkArgument(functionNode.isFunctionType());
[PATCH] name = makeName(functionNode.getLineno());
[PATCH] Preconditions.checkState(!functionNode.isFunctionPrototype());
[PATCH] Node fnName = functionNode.getFirstChild().getString();
[PATCH] Preconditions.checkNotNull(name,"function name");
[PATCH] Preconditions.checkNotNull(name,"Undefined function name");
[PATCH] name = compiler.getCodingConvention().defaultFunctionName();
[PATCH] Preconditions.checkState(functionNode.isConstructor());
[PATCH] logger.info("Unable to find function name.");
[PATCH] Node fnName = functionNode.getFunctionName();
[PATCH] int fnName = functionNode.getFunctionName();
[PATCH] name = functionNode.getFirstName();
[PATCH] checkInternalName(name,"function name");
[PATCH] name = functionNode.getFirstArgumentName();
[PATCH] Name fnName = functionNode.getFunctionName();
[PATCH] logger.info("Undefined function name");
[PATCH] logger.info("Unknown function name");
[PATCH] name = functionNode.getLastName();
[PATCH] logger.info("missing function name");
[PATCH] logger.fine("Missing function name");
[PATCH] name = compiler.getDefaultName();
[PATCH] String name = functionNode.getFunctionName();
[PATCH] String fnName = functionNode.getName();
[PATCH] logger.fine("missing function name");
[PATCH] config.setErrorReporter(errorReporter);
[PATCH] logger.info("Entering new function");
[PATCH] logger.info("Missing name.");
[PATCH] logger.info("missing function name.");
[PATCH] logger.info("Function name not found");
[PATCH] logger.info("Unrecognized function name.");
[PATCH] logger.info("Unrecognized function name");
[PATCH] name = FunctionNode.getFunctionName();
[PATCH] logger.info("Using default function name");
[PATCH] logger.warning("Missing function name.");
[PATCH] logger.info("Using default name");
[PATCH] Validate.notNull(name);
[PATCH] logger.info("Missing name");
[PATCH] Validate.notEmpty(name);
