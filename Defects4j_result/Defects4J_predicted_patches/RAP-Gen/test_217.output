[PATCH] r.advance();
[PATCH] r.skipEnd();
[PATCH] r.next();
[PATCH] r.skipChildren();
[PATCH] r.skipToLowerCase();
[PATCH] r.read();
[PATCH] r.skip();
[PATCH] r.skipEndElement();
[PATCH] r.skipSpace();
[PATCH] r.skipAllWhitespace();
[PATCH] r.release();
[PATCH] r.skipAllTokens();
[PATCH] r.skipWS();
[PATCH] r.inc();
[PATCH] r.skip(1);
[PATCH] r.skipToLower();
[PATCH] r.skipEndTag();
[PATCH] r.readWhitespace();
[PATCH] r.skipToFront();
[PATCH] r.skipFront();
[PATCH] r.skipStart();
[PATCH] r.close();
[PATCH] r.skipWhitespace();
[PATCH] r.skipTokens();
[PATCH] r.reset();
[PATCH] r.readAgain();
[PATCH] r.skipEndToken();
[PATCH] r.write();
[PATCH] r.skipTail();
[PATCH] r.skipAllSpaces();
[PATCH] r.skipUntilEOL();
[PATCH] r.skipToWhitespace();
[PATCH] r.skipAll();
[PATCH] r.skipEndType();
[PATCH] r.skipToEmpty();
[PATCH] r.skipAllChildren();
[PATCH] r.skipEndCharacter();
[PATCH] r.skipAllCols();
[PATCH] r.skipUntilWhitespace();
[PATCH] r.skipToUpperCase();
[PATCH] r.skippingWhitespace();
[PATCH] r.skipEndString();
[PATCH] r.detach();
[PATCH] r.skipAllCharacters();
[PATCH] r.skipType();
[PATCH] r.readTokens();
[PATCH] r.skipTo();
[PATCH] r.writeWhitespace();
[PATCH] r.skipEndName();
[PATCH] r.skipAllBlocks();
[PATCH] r.skipTrailingQuotes();
[PATCH] r.readLine();
[PATCH] r.copyCurrentStructure();
[PATCH] r.skipEndTags();
[PATCH] r.skipEndChar();
[PATCH] r.skipEndWhitespace();
[PATCH] r.skipEndTokens();
[PATCH] r.skipAllWS();
[PATCH] r.skipAllStrings();
[PATCH] r.skipAllComments();
[PATCH] r.readTo();
[PATCH] r.chompTo();
[PATCH] r.skipEnd()();
[PATCH] r.skipToArray();
[PATCH] r.cw();
[PATCH] r.readFully();
[PATCH] r.nextToken();
[PATCH] r.defaultChar();
[PATCH] r.readNextToken();
[PATCH] r.readMore();
[PATCH] r.trim();
[PATCH] r.skipFirst();
[PATCH] r.skipToIgnore();
[PATCH] r.skipString();
[PATCH] r.skipAgain();
[PATCH] r.skipWhite();
[PATCH] r.clear();
[PATCH] r.skipToUse();
[PATCH] r.skipTop();
[PATCH] r.skipLeft();
[PATCH] r.toLowerCase();
[PATCH] r.readBlock();
[PATCH] r.skipLast();
[PATCH] r.advvance();
[PATCH] r.discard();
[PATCH] r.reserve();
[PATCH] r.skipColon();
[PATCH] r.isEmpty();
[PATCH] r.analyze();
[PATCH] r.skipPtr();
[PATCH] r.readEnd();
[PATCH] r.skipLine();
[PATCH] r.skipToStart();
[PATCH] r.skipMore();
[PATCH] r.count();
[PATCH] r.shift();
[PATCH] r.consume();
[PATCH] r.refresh();
[PATCH] r.remove();
[PATCH] r.repeat();
