[PATCH] this(true);
[PATCH] this(Base64Variants.getDefaultVariant());
[PATCH] this(Base64Variant.BASE64_VALUE);
[PATCH] this(true, true);
[PATCH] this(Base64.BASE64_VALUE, true);
[PATCH] this(Base64.DEFAULT_BASE64_VALUE);
[PATCH] this(DEFAULT_BUFFER_RESIZE_FACTOR);
[PATCH] this(false);
[PATCH] this(Base64.BASE64_VALUE);
[PATCH] this(Base64.BASE64_VALUE, false);
[PATCH] this(Base64.DEFAULT_BUFFER_SIZE);
[PATCH] this(Base64.DEFAULT_VALUE, true);
[PATCH] this(Base64Variants.US_ASCII);
[PATCH] this(Base64Variants.BASE64_VALUE);
[PATCH] this(Base64.BASE64_VALUE_NONE);
[PATCH] this(null);
[PATCH] this(Base64.DEFAULT_VALUE_SIZE);
[PATCH] this(Base64.USE_DEFAULT);
[PATCH] this(Base64.DEFAULT_SERIALIZER);
[PATCH] this(Base64.DEFAULT_DECODE_TABLE);
[PATCH] this(Base64.EMPTY);
[PATCH] this(Base64.DEFAULT_VALUE_PADDING);
[PATCH] this(Base64.BASE64_VALUE_SEPARATOR);
[PATCH] this(Base64.DEFAULT_ENCODING, true);
[PATCH] this(Base64.BASE64_VALUE_DEFAULT);
[PATCH] this(Base64.DEFAULT_ENCODING);
[PATCH] this(Base64Variants.DEFAULT_ENCODING);
[PATCH] this(Base64.BASE64_VALUE_EMPTY);
[PATCH] this(BASE64_VALUE_EMPTY);
[PATCH] this(Base64.DEFAULT_CODEC_SIZE);
[PATCH] this(BASE64_VALUE_DEFAULT);
[PATCH] this(Base64Encoding.BASE64_VALUE);
[PATCH] this(Base64.DEFAULT_VALUE_BYTES);
[PATCH] this(Base64Variants.DECODE_TABLE);
[PATCH] this(Base64.BASE64_VALUE_CODE);
[PATCH] this(Base64.VALUE_DEFAULT);
[PATCH] this(Base64Variant.NONE);
[PATCH] this(BASE64_VALUE, true);
[PATCH] this(Base64Variants.defaultVariant());
[PATCH] this(Base64.INITIAL_VALUE, true);
[PATCH] this(true, false);
[PATCH] this(Base64.DEFAULT_VALUE, false);
[PATCH] this(BASE64_VALUE_NONE);
[PATCH] this(Base64.DEFAULT_RCDSIZE);
[PATCH] this(Base64.BYTES_PER_CHAR);
[PATCH] this(Base64.DEFAULT_ENCODING, false);
[PATCH] this(Base64.USE_BIGDECIMAL);
[PATCH] this(DEFAULT_BUFFER_SIZE);
[PATCH] this(Base64.DEFAULT_VALUE);
[PATCH] this(Base64Variant.base64Variant());
[PATCH] this(0);
[PATCH] this(Base64Variants.createDefaultVariant());
[PATCH] this(Base64Variants.ENGLISH);
[PATCH] this(Base64Variants.DEFAULT_VALUE);
[PATCH] this(Base64Variant.getDefaultVariant());
[PATCH] this(Base64Codec.getInstance());
[PATCH] this(Base64.class);
[PATCH] this(Base64Variants.BOTH);
[PATCH] this(BASE64_VALUE, false);
[PATCH] this(Base64.EMPTY, true);
[PATCH] this(Base64.EMPTY, false);
[PATCH] this(Base64Variants.all);
[PATCH] this(8);
[PATCH] this(Base64.DEFAULT_SIZE);
[PATCH] this(Base64Variants.DefaultVariant);
[PATCH] this(Base64.NONE);
[PATCH] this(Base64Variants.Default);
[PATCH] this(null, true);
[PATCH] this(BASE64_VALUE);
[PATCH] this(Base64Variants.EMPTY);
[PATCH] this(Base64Variant.standard());
[PATCH] super();
[PATCH] this(null, false);
[PATCH] this(2);
[PATCH] this(( true, true);
[PATCH] this(64);
[PATCH] this(0, 0);
[PATCH] this(0, 1);
[PATCH] this(true, null);
[PATCH] this(CHUNK_SEPARATOR);
[PATCH] this(0, true);
[PATCH] this(8, 64);
[PATCH] this(4);
[PATCH] this(null, null);
[PATCH] this(( false, true);
[PATCH] this(8, 8);
[PATCH] this(1);
[PATCH] this(( true, false);
[PATCH] this(True);
[PATCH] this(128);
[PATCH] this(2048);
[PATCH] this(16);
[PATCH] this("");
[PATCH] this(-1);
[PATCH] this(new String());
[PATCH] this(256);
[PATCH] this(24);
[PATCH] super(true);
[PATCH] this(( false);
[PATCH] this(( true);
