[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || parent.getType() == Token.ASSIGN && parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || scope.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inExternScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || objectType.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN && parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getNext() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getTypeFactory()!= Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getJSType() == null;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == null;
[PATCH] boolean isOverride = t.inExternScope() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == GETprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getTopChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || t.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || n == Token.ASSIGN && parent.getType() == Token.EXPR_RESULT;
[PATCH] boolean isOverride = t.inGlobalScope())&& parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getParent() == null;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN, parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || type == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getNext() == null;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.CALL || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope())&& parent.getType() == Token.ASSIGN || parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope())&& parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN ||parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.CALL && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || node.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || ts.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || ancestor.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == GETPROP;
[PATCH] boolean isOverride = t.inGlobalScope() || parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope())&& parent.getType() == Token.ASSIGN && parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inExternScope() || parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.CALL || parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inExtern() && parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || type == Token.ASSIGN && parent.getType() == Token.EXPR_RESULT;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == this;
[PATCH] boolean isOverride = t.inExterns() && parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || getprop.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() &&parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN ||!NodeUtil.isExpressionNode(parent);
[PATCH] boolean isOverride = t.inGlobalScope() || context.getTypeFactory()!= Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || objectType.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == property;
[PATCH] boolean isOverride = t.inGlobalScope() || module.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScopes() && parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || n == Type.ASSIGN && parent.getType() == Token.EXPR_RESULT;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == GETPROP;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getChildCount() == 3;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == null;
[PATCH] boolean isOverride = t.inGlobalScope())|| parent.getType() == Token.ASSIGN && parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == 'prototype';
[PATCH] boolean isOverride = t.inScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN ||parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || parent.getType() == Token.ASSIGN || parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() || scope.getType() == Token.ASSIGN && parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getRightChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN | parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN, parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getSecondChild() == getprop;
[PATCH] boolean isOverride = t.inExterns() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getChildCount() == 1;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType()== Token.ASSIGN || parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN | parent.getLastChild() == getprop;
[PATCH] boolean isOverride = t.inExtern() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == prop;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || NodeUtil.isExpressionNode(parent);
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getParent() == getprop;
[PATCH] boolean isOverride = t.inGlobalScope() ||!Token.ASSIGN && parent.getType() == Token.ASSIGN;
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getCodingConvention().isOverride(propertyName);
[PATCH] boolean isOverride = t.inGlobalScope() || NodeUtil.isAssignmentOp(getprop);
[PATCH] boolean isOverride = t.inGlobalScope() || type == Token.ASSIGN || type == Token.EXPR_RESULT;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || NodeUtil.isLiteralValue(parent);
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == GETprop;
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getCodingConvention().isExported(propertyName);
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == get prop;
[PATCH] boolean isOverride = t.inGlobalScope() || n == Type.ASSIGN && parent.getType() == Token.ASSIGN;
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getTypeRegistry().isGlobal();
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || childCount == 1;
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getLastChild() == getprop);
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getTypeRegistry().isExtern();
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN ||!NodeUtil.isExpressionNode(parent));
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getTypeRegistry().isExported(propertyName);
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getCodingConvention().isSuperClassReference(getprop);
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getCodingConvention().isExportDeclaration(getprop);
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN || parent.getFirstChild() == getprop);
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getCodingConvention().isAssignmentOp(getprop);
[PATCH] boolean isOverride = t.inGlobalScope() && parent.getType() == Token.ASSIGN;
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getTypeRegistry().isDeclared(propertyName);
[PATCH] boolean isOverride = t.inGlobalScope() || NodeUtil.isExpressionNode(parent)&& parent.getType() == Token.ASSIGN;
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getCodingConvention().isExtern(propertyName);
[PATCH] boolean isOverride = t.inGlobalScope() || compiler.getTypeRegistry().hasProperty(propertyName);
[PATCH] boolean isOverride = t.inGlobalScope() || NodeUtil.isAssignmentOp(getprop)&& parent.getType() == Token.ASSIGN;
[PATCH] boolean isOverride = t.inGlobalScope() ||!NodeUtil.isAssignmentOp(getprop), parent.getType() == Token.ASSIGN;
[PATCH] boolean isOverride = t.inGlobalScope() ||!NodeUtil.isAssignmentOp(getprop), parent.getType() == Token.ASSIGN);
[PATCH] boolean isOverride = t.inGlobalScope() || NodeUtil.isLiteralValue(getprop);
[PATCH] boolean isOverride = t.inGlobalScope() || NodeUtil.isAssignmentOp(getprop)&& parent.getType() == Token.ASSIGN);
[PATCH] boolean isOverride = t.inGlobalScope() || NodeUtil.isAssignmentOp(getprop)&& parent.getType() == Token.ASSIGN){
